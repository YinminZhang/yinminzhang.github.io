<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Quadcopter Project]]></title>
    <url>%2F2019%2F06%2F28%2F1%2F</url>
    <content type="text"><![CDATA[项目：指导四轴飞行器学会飞行设计一个能够使四轴飞行器飞行的智能体，然后使用你选择的强化学习算法训练它！ 请尝试运用你在这一单元中学到的知识，看看哪个方法效果最好，当然你也可以自己想出创新型方法并测试它们。 说明请查看目录下的文件，以更好地了解项目结构。 task.py：在本文件中定义你的任务（环境）。 agents/：本文件夹中包含强化学习智能体。 policy_search.py：我们为你提供了一个智能体模板。 agent.py：在本文件中开发你的智能体。 physics_sim.py：本文件中包含四轴飞行器模拟器。请勿修改本文件。 在本项目中，你需要在 task.py 中定义你的任务。尽管我们为你提供了一个任务示例，来帮助你开始项目，但你也可以随意更改这个文件。在这个 notebook 中，你还将学习更多有关修改这个文件的知识。 你还需要在 agent.py 中设计一个强化学习智能体，来完成你选择的任务。 我们也鼓励你创建其他文件，来帮助你整理代码。比如，你也许可以通过定义一个 model.py 文件来定义其他你需要的神经网络结构。 控制四轴飞行器在下方的代码中，我们提供了一个智能体示例，来示范如何使用模拟器来控制四轴飞行器。这个智能体比你在 notebook 中需要测试的智能体（在 agents/policy_search.py 中）更加简单！ 这个智能体通过设置飞行器四个轴上的转速来控制飞行器。Basic_Agent 类中提供的智能体将会随机为四个轴指定动作。这四个速度将通过 act 方法以四个浮点数列表的形式返回。 在本项目中，你将在 agents/agent.py 中实现的智能体会以更加智能的方法进行指定的动作。 123456789import randomclass Basic_Agent(): def __init__(self, task): self.task = task def act(self): new_thrust = random.gauss(450., 25.) return [new_thrust + random.gauss(0., 1.) for x in range(4)] 运行下方代码，让智能体指定动作来控制四轴飞行器。 请随意更改我们提供的 runtime，init_pose，init_velocities 和 init_angle_velocities 值来更改四轴飞行器的初始条件。 下方的 labels 列表为模拟数据的注释。所有的信息都储存在 data.txt 文档中，并保存在 results 目录下。 1234567891011121314151617181920212223242526272829303132333435363738%load_ext autoreload%autoreload 2import csvimport numpy as npfrom task import Task# Modify the values below to give the quadcopter a different starting position.runtime = 5. # time limit of the episodeinit_pose = np.array([0., 0., 10., 0., 0., 0.]) # initial poseinit_velocities = np.array([0., 0., 0.]) # initial velocitiesinit_angle_velocities = np.array([0., 0., 0.]) # initial angle velocitiesfile_output = './results/data.txt' # file name for saved results# Setuptask = Task(init_pose, init_velocities, init_angle_velocities, runtime)agent = Basic_Agent(task)done = Falselabels = ['time', 'x', 'y', 'z', 'phi', 'theta', 'psi', 'x_velocity', 'y_velocity', 'z_velocity', 'phi_velocity', 'theta_velocity', 'psi_velocity', 'rotor_speed1', 'rotor_speed2', 'rotor_speed3', 'rotor_speed4']results = &#123;x : [] for x in labels&#125;# Run the simulation, and save the results.with open(file_output, 'w') as csvfile: writer = csv.writer(csvfile) writer.writerow(labels) while True: # Choose action based on given state and policy. rotor_speeds = agent.act() # Uses action to obtain next state, reward, done. _, _, done = task.step(rotor_speeds) to_write = [task.sim.time] + list(task.sim.pose) + list(task.sim.v) + list(task.sim.angular_v) + list(rotor_speeds) for ii in range(len(labels)): results[labels[ii]].append(to_write[ii]) writer.writerow(to_write) if done: break 在进行模拟时，请运行下方的代码来查看四轴飞行器的位置变化。 12345678import matplotlib.pyplot as plt%matplotlib inlineplt.plot(results['time'], results['x'], label='x')plt.plot(results['time'], results['y'], label='y')plt.plot(results['time'], results['z'], label='z')plt.legend()_ = plt.ylim() 下方代码输出了四轴飞行器的速度。 12345plt.plot(results['time'], results['x_velocity'], label='x_hat')plt.plot(results['time'], results['y_velocity'], label='y_hat')plt.plot(results['time'], results['z_velocity'], label='z_hat')plt.legend()_ = plt.ylim() 接下来，你可以绘制欧拉角 (Euler angles)（四轴飞行器围绕 $x$-，$y$- 和 $z$-轴的旋转）的图表， 12345plt.plot(results['time'], results['phi'], label='phi')plt.plot(results['time'], results['theta'], label='theta')plt.plot(results['time'], results['psi'], label='psi')plt.legend()_ = plt.ylim() 在绘制每个欧拉角的速度（每秒的弧度）图之前。 12345plt.plot(results['time'], results['phi_velocity'], label='phi_velocity')plt.plot(results['time'], results['theta_velocity'], label='theta_velocity')plt.plot(results['time'], results['psi_velocity'], label='psi_velocity')plt.legend()_ = plt.ylim() 最后，你可以使用下方代码来输出智能体选择的动作。 123456plt.plot(results['time'], results['rotor_speed1'], label='Rotor 1 revolutions / second')plt.plot(results['time'], results['rotor_speed2'], label='Rotor 2 revolutions / second')plt.plot(results['time'], results['rotor_speed3'], label='Rotor 3 revolutions / second')plt.plot(results['time'], results['rotor_speed4'], label='Rotor 4 revolutions / second')plt.legend()_ = plt.ylim() 在指定任务之前，你需要在模拟器中衍生环境状态。运行下方代码来在模拟结束时输出以下变量值： task.sim.pose：四周飞行器在 ($x,y,z$) 坐标系中的位置和欧拉角。 task.sim.v：四轴飞行器在 ($x,y,z$) 坐标系中的速度。 task.sim.angular_v：三个欧拉角的弧度/每秒。 1234# the pose, velocity, and angular velocity of the quadcopter at the end of the episodeprint(task.sim.pose)print(task.sim.v)print(task.sim.angular_v) [-21.202412 5.74932107 27.68024079 6.13178996 0.51620599 0. ] [-14.02879883 1.60859562 2.02578091] [-0.12134073 0.13726422 0. ]在 task.py 中的任务示例中，我们使用了四轴飞行器六个维度的动作来构建每个时间步的环境状态。然而，你也可以按照自己的意愿更改任务，你可以添加速度信息来扩大状态向量，也可以使用任何动作、速度和角速度的组合，并构造适用于你的任务的环境状态。 任务在 task.py 中，我们为你提供了一个任务示例。请在新窗口中打开这个文件。 使用 __init__() 方法来初始化指定本任务所需的几个变量。 模拟器作为 PhysicsSim 类（来自 physics_sim.py 文件）的示例进行初始化。 受到 DDPG 论文中研究方法的启发，我们使用了重复调用动作的方法。对于智能体的每一个时间步，我们将利用 action_repeats 时间步来进行模拟。如果你并不熟悉这种方法，可以阅读 DDPG 论文的结论部分。 我们设置了状态向量中每个分量的数值。在任务示例中，我们只设置了六个维度的动作信息。为了设定向量大小（state_size），我们必须考虑重复的动作。 任务环境通常是一个四维动作空间，每个轴有一个输入（action_size=4）。你可以设置每个输入的最小值（action_low）和最大值（action_high）。 我们在文件中提供的任务示例将使智能体达到目标位置。我们将目标位置设置为一个变量。 reset() 方法将重置模拟器。每当阶段结束时，智能体都将调用此方法。你可以查看下方代码中的例子。 step() 方法是最重要的一个方法。它将接收智能体选择的动作 rotor_speeds，并准备好下一个状态，同时返回给智能体。接着，你将通过 get_reward() 计算奖励值。当超过规定时间，或是四轴飞行器到达模拟器边缘时，这一阶段将视作结束。 接下来，你将学习如何测试这个任务中智能体的性能。 智能体agents/policy_search.py 文件中提供的智能体示例使用了非常简单的线性策略，将动作向量视作状态向量和矩阵权重的点积直接进行计算。接着，它通过添加一些高斯噪声来随机干扰参数，以产生不同的策略。根据每个阶段获得的平均奖励值（score），它将记录迄今为止发现的最佳参数集以及分数的变化状态，并据此调整比例因子来扩大或减少噪音。 请运行下方代码来查看任务示例中智能体的性能。 1234567891011121314151617181920212223import sysimport pandas as pdfrom agents.policy_search import PolicySearch_Agentfrom task import Tasknum_episodes = 1000target_pos = np.array([0., 0., 10.])task = Task(target_pos=target_pos)agent = PolicySearch_Agent(task) for i_episode in range(1, num_episodes+1): state = agent.reset_episode() # start a new episode while True: action = agent.act(state) next_state, reward, done = task.step(action) agent.step(reward, done) state = next_state if done: print("\rEpisode = &#123;:4d&#125;, score = &#123;:7.3f&#125; (best = &#123;:7.3f&#125;), noise_scale = &#123;&#125;".format( i_episode, agent.score, agent.best_score, agent.noise_scale), end="") # [debug] break sys.stdout.flush() Episode = 1000, score = -5.516 (best = -0.103), noise_scale = 3.2这个智能体的性能想必十分糟糕！现在轮到你出场了！ 定义任务，设计并训练你的智能体！修改 task.py 文件来指定你所选择的任务。如果你不确定选择什么任务，你可以教你的四轴飞行器起飞、悬停、着陆或是达到指定位置。 在指定任务后，使用 agents/policy_search.py 中的智能体示例作为模板，来在 agents/agent.py 中定义你自己的智能体。你可以随意从智能体示例中借用你需要的元素，包括如何模块化你的代码（使用 act()，learn() 和 reset_episode_vars() 等辅助方法）。 请注意，你指定的第一个智能体和任务极有可能无法顺利进行学习。你将需要改进不同的超参数和奖励函数，直到你能够获得不错的结果。 在开发智能体的时候，你还需要关注它的性能。参考下方代码，建立一个机制来存储每个阶段的总奖励值。如果阶段奖励值在逐渐上升，说明你的智能体正在学习。 12345678910111213141516171819202122232425262728293031323334353637383940414243## TODO: Train your agent here.import sysimport numpy as npimport pandas as pdfrom agents.agent import DDPGfrom task2 import Tasknum_episodes = 1000init_pose = np.array([0., 0., 2., 0., 0., 0.])target_pos = np.array([0., 0., 5.])task = Task(init_pose=init_pose,target_pos=target_pos)agent = DDPG(task) labels = ['time', 'x', 'y', 'z', 'phi', 'theta', 'psi', 'x_velocity', 'y_velocity', 'z_velocity', 'phi_velocity', 'theta_velocity', 'psi_velocity', 'rotor_speed1', 'rotor_speed2', 'rotor_speed3', 'rotor_speed4']all_results = []plot_data = &#123;x : [] for x in ['episode', 'total_reward']&#125;for i_episode in range(1, num_episodes+1): state = agent.reset_episode() # start a new episode results = &#123;x : [] for x in labels&#125; while True: action = agent.act(state) next_state, reward, done = task.step(action) agent.step(action=action, reward=reward, next_state=next_state, done=done) state = next_state to_write = [task.sim.time] + list(task.sim.pose) + list(task.sim.v) + list(task.sim.angular_v) + list(action) for ii in range(len(labels)): results[labels[ii]].append(to_write[ii]) if done: print("\rEpisode = &#123;:4d&#125;, score = &#123;:7.3f&#125; (best = &#123;:7.3f&#125;, v=&#123;&#125;, z=&#123;&#125;)".format( i_episode, agent.score, agent.best_score,task.sim.v[2],task.sim.pose[2]), end="") # [debug] all_results.append(results) plot_data['episode'].append(i_episode) plot_data['total_reward'].append(agent.total_reward) break sys.stdout.flush() Episode = 1000, score = 17.890 (best = 20.821, v=3.7237150935428422, z=5.214380141223937))绘制阶段奖励请绘制智能体在每个阶段中获得的总奖励，这可以是单次运行的奖励值，也可以是多次运行的平均值。 123456789## TODO: Plot the rewards.import matplotlib.pyplot as plt%matplotlib inline# Plot the rewardsplt.plot(plot_data['episode'], plot_data['total_reward'])plt.legend()_ = plt.ylim() D:\Users\Lenovo\Anaconda3\envs\RL\lib\site-packages\matplotlib\axes\_axes.py:545: UserWarning: No labelled objects found. Use label=&apos;...&apos; kwarg on individual plots. warnings.warn(&quot;No labelled objects found. &quot; 123456789## TODO: Plot the rewards.import matplotlib.pyplot as plt%matplotlib inline# Plot the rewardsplt.plot(plot_data['episode'][-10:], plot_data['total_reward'][-10:])plt.legend()_ = plt.ylim() D:\Users\Lenovo\Anaconda3\envs\RL\lib\site-packages\matplotlib\axes\_axes.py:545: UserWarning: No labelled objects found. Use label=&apos;...&apos; kwarg on individual plots. warnings.warn(&quot;No labelled objects found. &quot; 12345678910## TODO: Plot the rewards.import matplotlib.pyplot as plt%matplotlib inline# Plot the quadcopter xfor r in all_results[:]: plt.plot(r['time'], r['x'], 'k-', alpha=.1) plt.legend()_ = plt.ylim() D:\Users\Lenovo\Anaconda3\envs\RL\lib\site-packages\matplotlib\axes\_axes.py:545: UserWarning: No labelled objects found. Use label=&apos;...&apos; kwarg on individual plots. warnings.warn(&quot;No labelled objects found. &quot; 12345678910## TODO: Plot the rewards.import matplotlib.pyplot as plt%matplotlib inline# Plot the quadcopter yfor r in all_results[:]: plt.plot(r['time'], r['y'], 'k-', alpha=.1) plt.legend()_ = plt.ylim() D:\Users\Lenovo\Anaconda3\envs\RL\lib\site-packages\matplotlib\axes\_axes.py:545: UserWarning: No labelled objects found. Use label=&apos;...&apos; kwarg on individual plots. warnings.warn(&quot;No labelled objects found. &quot; 12345678910## TODO: Plot the rewards.import matplotlib.pyplot as plt%matplotlib inline# Plot the quadcopter heightfor r in all_results[:]: plt.plot(r['time'], r['z'], 'k-', alpha=.1) plt.legend()_ = plt.ylim() D:\Users\Lenovo\Anaconda3\envs\RL\lib\site-packages\matplotlib\axes\_axes.py:545: UserWarning: No labelled objects found. Use label=&apos;...&apos; kwarg on individual plots. warnings.warn(&quot;No labelled objects found. &quot; 回顾问题 1：请描述你在 task.py 中指定的任务。你如何设计奖励函数？ 回答： 任务：沿着z轴方向飞行到位置（0，0，10） reward与z轴偏离距离越远惩罚越大；z轴方向离10越远惩罚越大；x轴方向，y轴方向速度越大惩罚越大；z轴方向速度越大reward越大。 问题 2：请简要描述你的智能体，你可以参考以下问题： 你尝试了哪些学习算法？哪个效果最好？ 你最终选择了哪些超参数（比如 $\alpha$，$\gamma$，$\epsilon$ 等）？ 你使用了什么样的神经网络结构（如果有的话）？请说明层数、大小和激活函数等信息。 DDPG已经能对这个任务有很好的效果 使用DDPG论文中的参数$\theta$=0.15,$\sigma$=0.2,$\tau$=0.001 DNN结构中增加batchnormlization，dropout，加快网络学习的收敛速度；actor lr=0.0001,3层,units分别为32,64,32；使用relu作为激活函数。输出使用sigmoid；critic lr=0.001,两个子网络actionNet和statesNet,各3层,units分别为32,64,32,最后输出前将actionNet和statesNet相加，使用relu作为激活函数。 回答： 问题 3：根据你绘制的奖励图，描述智能体的学习状况。 学习该任务是简单还是困难？ 该学习曲线中是否存在循序渐进或急速上升的部分？ 该智能体的最终性能有多好？（比如最后十个阶段的平均奖励值） 困难 存在 平均18左右 回答： 问题 4：请简要总结你的本次项目经历。你可以参考以下问题： 本次项目中最困难的部分是什么？（例如开始项目、运行 ROS、绘制、特定的任务等。） 关于四轴飞行器和你的智能体的行为，你是否有一些有趣的发现？ 回答： 参数选择和任务reward设置，ros运行 探索动作空间的行为很迷]]></content>
      <categories>
        <category>Reinforcement learning</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Face Generation]]></title>
    <url>%2F2019%2F06%2F27%2F1%2F</url>
    <content type="text"><![CDATA[人脸生成（Face Generation）在该项目中，你将使用生成式对抗网络（Generative Adversarial Nets）来生成新的人脸图像。 获取数据该项目将使用以下数据集： MNIST CelebA 由于 CelebA 数据集比较复杂，而且这是你第一次使用 GANs。我们想让你先在 MNIST 数据集上测试你的 GANs 模型，以让你更快的评估所建立模型的性能。 如果你在使用 FloydHub, 请将 data_dir 设置为 “/input” 并使用 FloydHub data ID “R5KrjnANiKVhLWAkpXhNBe”. 12345678910111213data_dir = './data'# FloydHub - Use with data ID "R5KrjnANiKVhLWAkpXhNBe"#data_dir = '/input'"""DON'T MODIFY ANYTHING IN THIS CELL"""import helperhelper.download_extract('mnist', data_dir)helper.download_extract('celeba', data_dir) Found mnist Data Found celeba Data探索数据（Explore the Data）MNISTMNIST 是一个手写数字的图像数据集。你可以更改 show_n_images 探索此数据集。 123456789101112show_n_images = 25"""DON'T MODIFY ANYTHING IN THIS CELL"""%matplotlib inlineimport osfrom glob import globfrom matplotlib import pyplotmnist_images = helper.get_batch(glob(os.path.join(data_dir, 'mnist/*.jpg'))[:show_n_images], 28, 28, 'L')pyplot.imshow(helper.images_square_grid(mnist_images, 'L'), cmap='gray') &lt;matplotlib.image.AxesImage at 0x213247f2358&gt; CelebACelebFaces Attributes Dataset (CelebA) 是一个包含 20 多万张名人图片及相关图片说明的数据集。你将用此数据集生成人脸，不会用不到相关说明。你可以更改 show_n_images 探索此数据集。 1234567show_n_images = 25"""DON'T MODIFY ANYTHING IN THIS CELL"""mnist_images = helper.get_batch(glob(os.path.join(data_dir, 'img_align_celeba/*.jpg'))[:show_n_images], 28, 28, 'RGB')pyplot.imshow(helper.images_square_grid(mnist_images, 'RGB')) &lt;matplotlib.image.AxesImage at 0x2132486a9b0&gt; 预处理数据（Preprocess the Data）由于该项目的重点是建立 GANs 模型，我们将为你预处理数据。 经过数据预处理，MNIST 和 CelebA 数据集的值在 28×28 维度图像的 [-0.5, 0.5] 范围内。CelebA 数据集中的图像裁剪了非脸部的图像部分，然后调整到 28x28 维度。 MNIST 数据集中的图像是单通道的黑白图像，CelebA 数据集中的图像是 三通道的 RGB 彩色图像。 建立神经网络（Build the Neural Network）你将通过部署以下函数来建立 GANs 的主要组成部分: model_inputs discriminator generator model_loss model_opt train 检查 TensorFlow 版本并获取 GPU 型号检查你是否使用正确的 TensorFlow 版本，并获取 GPU 型号 12345678910111213141516"""DON'T MODIFY ANYTHING IN THIS CELL"""from distutils.version import LooseVersionimport warningsimport tensorflow as tf# Check TensorFlow Versionassert LooseVersion(tf.__version__) &gt;= LooseVersion('1.0'), 'Please use TensorFlow version 1.0 or newer. You are using &#123;&#125;'.format(tf.__version__)print('TensorFlow Version: &#123;&#125;'.format(tf.__version__))# Check for a GPUif not tf.test.gpu_device_name(): warnings.warn('No GPU found. Please use a GPU to train your neural network.')else: print('Default GPU Device: &#123;&#125;'.format(tf.test.gpu_device_name())) D:\Users\Lenovo\Anaconda3\envs\tensorflow-gpu\lib\importlib\_bootstrap.py:222: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88 return f(*args, **kwds) TensorFlow Version: 1.9.0 Default GPU Device: /device:GPU:0输入（Input）部署 model_inputs 函数以创建用于神经网络的 占位符 (TF Placeholders)。请创建以下占位符： 输入图像占位符: 使用 image_width，image_height 和 image_channels 设置为 rank 4。 输入 Z 占位符: 设置为 rank 2，并命名为 z_dim。 学习速率占位符: 设置为 rank 0。 返回占位符元组的形状为 (tensor of real input images, tensor of z data, learning rate)。 12345678910111213141516171819202122import problem_unittests as testsdef model_inputs(image_width, image_height, image_channels, z_dim): """ Create the model inputs :param image_width: The input image width :param image_height: The input image height :param image_channels: The number of image channels :param z_dim: The dimension of Z :return: Tuple of (tensor of real input images, tensor of z data, learning rate) """ # TODO: Implement Function image_input = tf.placeholder(tf.float32, [None, image_width, image_height, image_channels], name='input_real') z_input = tf.placeholder(tf.float32, [None, z_dim], name='input_z') learning_rate = tf.placeholder(tf.float32, [], name='learning_rate') return image_input, z_input, learning_rate"""DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE"""tests.test_model_inputs(model_inputs) Tests Passed辨别器（Discriminator）部署 discriminator 函数创建辨别器神经网络以辨别 images。该函数应能够重复使用神经网络中的各种变量。 在 tf.variable_scope 中使用 “discriminator” 的变量空间名来重复使用该函数中的变量。 该函数应返回形如 (tensor output of the discriminator, tensor logits of the discriminator) 的元组。 12345678910111213141516171819202122232425262728293031def discriminator(images, reuse=False, alpha=0.1): """ Create the discriminator network :param image: Tensor of input image(s) :param reuse: Boolean if the weights should be reused :return: Tuple of (tensor output of the discriminator, tensor logits of the discriminator) """ # TODO: Implement Function with tf.variable_scope("discriminator", reuse=reuse): conv1 = tf.layers.conv2d(images,64, 5, strides=2, padding='same', activation=None, kernel_initializer= tf.contrib.layers.xavier_initializer()) relu1 = tf.maximum(alpha*conv1, conv1) conv2 = tf.layers.conv2d(relu1, 128, 5, strides=2, padding='same', activation=None, kernel_initializer= tf.contrib.layers.xavier_initializer()) bn2 = tf.layers.batch_normalization(conv2, trainable=True) relu2 = tf.maximum(alpha*bn2, bn2) conv3 = tf.layers.conv2d(relu2, 256, 5, strides=2, padding='same', activation=None, kernel_initializer= tf.contrib.layers.xavier_initializer()) bn3 = tf.layers.batch_normalization(conv3, trainable=True) relu3 = tf.maximum(alpha*bn3, bn3) flatten = tf.layers.flatten(relu3) logits = tf.layers.dense(flatten, 1) out = tf.nn.sigmoid(logits) return out, logits"""DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE"""tests.test_discriminator(discriminator, tf) Tests Passed生成器（Generator）部署 generator 函数以使用 z 生成图像。该函数应能够重复使用神经网络中的各种变量。在 tf.variable_scope 中使用 “generator” 的变量空间名来重复使用该函数中的变量。 该函数应返回所生成的 28 x 28 x out_channel_dim 维度图像。 1234567891011121314151617181920212223242526272829def generator(z, out_channel_dim, is_train=True, alpha=0.1): """ Create the generator network :param z: Input z :param out_channel_dim: The number of channels in the output image :param is_train: Boolean if generator is being used for training :return: The tensor output of the generator """ # TODO: Implement Function with tf.variable_scope('generator', reuse=not is_train): x1 = tf.layers.dense(z, 7*7*512) x1 = tf.reshape(x1, (-1, 7, 7, 512)) bn1 = tf.layers.batch_normalization(x1, trainable=is_train) relu1 = tf.maximum(alpha*bn1, bn1) x2 = tf.layers.conv2d_transpose(relu1, 256, 5, strides=2, padding='same', activation=None, kernel_initializer= tf.contrib.layers.xavier_initializer()) bn2 = tf.layers.batch_normalization(x2, trainable=is_train) relu2 = tf.maximum(alpha*bn2, bn2) logist = tf.layers.conv2d_transpose(relu2, out_channel_dim, 5, strides=2, padding='same', activation=None, kernel_initializer= tf.contrib.layers.xavier_initializer()) out = tf.tanh(logist) return out"""DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE"""tests.test_generator(generator, tf) Tests Passed损失函数（Loss）部署 model_loss 函数训练并计算 GANs 的损失。该函数应返回形如 (discriminator loss, generator loss) 的元组。 使用你已实现的函数： discriminator(images, reuse=False) generator(z, out_channel_dim, is_train=True) 1234567891011121314151617181920212223242526def model_loss(input_real, input_z, out_channel_dim, smooth=0.1): """ Get the loss for the discriminator and generator :param input_real: Images from the real dataset :param input_z: Z input :param out_channel_dim: The number of channels in the output image :return: A tuple of (discriminator loss, generator loss) """ # TODO: Implement Function g_model=generator(input_z, out_channel_dim, is_train=True) d_model_real,d_real_logits=discriminator(input_real) d_model_fake,d_fake_logits=discriminator(g_model,reuse=True) smooth=0.1 d_loss_real=tf.reduce_mean(tf.nn.sigmoid_cross_entropy_with_logits(logits=d_real_logits,labels=tf.ones_like(d_real_logits) * (1 - smooth))) d_loss_fake=tf.reduce_mean(tf.nn.sigmoid_cross_entropy_with_logits(logits=d_fake_logits,labels=tf.zeros_like(d_model_fake))) g_loss=tf.reduce_mean(tf.nn.sigmoid_cross_entropy_with_logits(logits=d_fake_logits,labels=tf.ones_like(d_model_fake))) d_loss=d_loss_real+d_loss_fake return d_loss,g_loss"""DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE"""tests.test_model_loss(model_loss) Tests Passed优化（Optimization）部署 model_opt 函数实现对 GANs 的优化。使用 tf.trainable_variables 获取可训练的所有变量。通过变量空间名 discriminator 和 generator 来过滤变量。该函数应返回形如 (discriminator training operation, generator training operation) 的元组。 123456789101112131415161718192021222324252627def model_opt(d_loss, g_loss, learning_rate, beta1): """ Get optimization operations :param d_loss: Discriminator loss Tensor :param g_loss: Generator loss Tensor :param learning_rate: Learning Rate Placeholder :param beta1: The exponential decay rate for the 1st moment in the optimizer :return: A tuple of (discriminator training operation, generator training operation) """ # TODO: Implement Function t_vars = tf.trainable_variables() d_vars = [var for var in t_vars if var.name.startswith('discriminator')] g_vars = [var for var in t_vars if var.name.startswith('generator')] update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS) with tf.control_dependencies(update_ops): d_train_opt = tf.train.AdamOptimizer(learning_rate, beta1=beta1).minimize(d_loss, var_list=d_vars) g_train_opt = tf.train.AdamOptimizer(learning_rate, beta1=beta1).minimize(g_loss, var_list=g_vars) return d_train_opt, g_train_opt"""DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE"""tests.test_model_opt(model_opt, tf) Tests Passed训练神经网络（Neural Network Training）输出显示使用该函数可以显示生成器 (Generator) 在训练过程中的当前输出，这会帮你评估 GANs 模型的训练程度。 12345678910111213141516171819202122232425"""DON'T MODIFY ANYTHING IN THIS CELL"""import numpy as npdef show_generator_output(sess, n_images, input_z, out_channel_dim, image_mode): """ Show example output for the generator :param sess: TensorFlow session :param n_images: Number of Images to display :param input_z: Input Z Tensor :param out_channel_dim: The number of channels in the output image :param image_mode: The mode to use for images ("RGB" or "L") """ cmap = None if image_mode == 'RGB' else 'gray' z_dim = input_z.get_shape().as_list()[-1] example_z = np.random.uniform(-1, 1, size=[n_images, z_dim]) samples = sess.run( generator(input_z, out_channel_dim, False), feed_dict=&#123;input_z: example_z&#125;) images_grid = helper.images_square_grid(samples, image_mode) pyplot.imshow(images_grid, cmap=cmap) pyplot.show() 训练部署 train 函数以建立并训练 GANs 模型。记得使用以下你已完成的函数： model_inputs(image_width, image_height, image_channels, z_dim) model_loss(input_real, input_z, out_channel_dim) model_opt(d_loss, g_loss, learning_rate, beta1) 使用 show_generator_output 函数显示 generator 在训练过程中的输出。 注意：在每个批次 (batch) 中运行 show_generator_output 函数会显著增加训练时间与该 notebook 的体积。推荐每 100 批次输出一次 generator 的输出。 123456789101112131415161718192021222324252627282930313233343536373839404142def train(epoch_count, batch_size, z_dim, learning_rate, beta1, get_batches, data_shape, data_image_mode): """ Train the GAN :param epoch_count: Number of epochs :param batch_size: Batch Size :param z_dim: Z dimension :param learning_rate: Learning Rate :param beta1: The exponential decay rate for the 1st moment in the optimizer :param get_batches: Function to get batches :param data_shape: Shape of the data :param data_image_mode: The image mode to use for images ("RGB" or "L") """ # TODO: Build Model input_real, input_z, lr = model_inputs(data_shape[1], data_shape[2], data_shape[3], z_dim) d_loss, g_loss = model_loss(input_real, input_z, data_shape[3]) d_opt, g_opt = model_opt(d_loss, g_loss, lr, beta1) samples, losses = [], [] with tf.Session() as sess: sess.run(tf.global_variables_initializer()) for epoch_i in range(epoch_count): steps = 0 for batch_images in get_batches(batch_size): # TODO: Train Model steps += 1 batch_images = batch_images * 2 batch_z = np.random.uniform(-1, 1, size=(batch_size, z_dim)) _ = sess.run(d_opt, feed_dict=&#123;input_real:batch_images, input_z:batch_z, lr:learning_rate&#125;) _ = sess.run(g_opt, feed_dict=&#123;input_z:batch_z, lr:learning_rate&#125;) if steps%10 == 0: train_loss_d = d_loss.eval(&#123;input_real:batch_images, input_z:batch_z&#125;) train_loss_g = g_loss.eval(&#123;input_z:batch_z&#125;) print("Epoch &#123;&#125;/&#123;&#125;...".format(epoch_i+1, epochs), "Batch &#123;&#125;...".format(steps), "Discriminator Loss: &#123;:.4f&#125;...".format(train_loss_d), "Generator Loss: &#123;:.4f&#125;".format(train_loss_g)) if steps%100 == 0: show_generator_output(sess, show_n_images, input_z, data_shape[3], data_image_mode) MNIST在 MNIST 上测试你的 GANs 模型。经过 2 次迭代，GANs 应该能够生成类似手写数字的图像。确保生成器 (generator) 低于辨别器 (discriminator) 的损失，或接近 0。 123456789101112131415batch_size = 64z_dim = 128learning_rate = 0.0002beta1 = 0.5"""DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE"""epochs = 2mnist_dataset = helper.Dataset('mnist', glob(os.path.join(data_dir, 'mnist/*.jpg')))with tf.Graph().as_default(): train(epochs, batch_size, z_dim, learning_rate, beta1, mnist_dataset.get_batches, mnist_dataset.shape, mnist_dataset.image_mode) Epoch 1/2... Batch 10... Discriminator Loss: 0.9627... Generator Loss: 0.7875 Epoch 1/2... Batch 20... Discriminator Loss: 0.9174... Generator Loss: 0.8130 Epoch 1/2... Batch 30... Discriminator Loss: 0.7045... Generator Loss: 1.2363 Epoch 1/2... Batch 40... Discriminator Loss: 0.7240... Generator Loss: 2.1126 Epoch 1/2... Batch 50... Discriminator Loss: 0.5128... Generator Loss: 1.8915 Epoch 1/2... Batch 60... Discriminator Loss: 0.8241... Generator Loss: 1.0503 Epoch 1/2... Batch 70... Discriminator Loss: 0.7746... Generator Loss: 1.4643 Epoch 1/2... Batch 80... Discriminator Loss: 0.5734... Generator Loss: 1.8580 Epoch 1/2... Batch 90... Discriminator Loss: 0.5254... Generator Loss: 2.3466 Epoch 1/2... Batch 100... Discriminator Loss: 0.5721... Generator Loss: 3.0006 Epoch 1/2... Batch 110... Discriminator Loss: 0.4951... Generator Loss: 2.8843 Epoch 1/2... Batch 120... Discriminator Loss: 0.6080... Generator Loss: 1.9425 Epoch 1/2... Batch 130... Discriminator Loss: 0.6788... Generator Loss: 1.9291 Epoch 1/2... Batch 140... Discriminator Loss: 0.5260... Generator Loss: 2.1446 Epoch 1/2... Batch 150... Discriminator Loss: 0.5936... Generator Loss: 2.2602 Epoch 1/2... Batch 160... Discriminator Loss: 0.9277... Generator Loss: 1.1499 Epoch 1/2... Batch 170... Discriminator Loss: 0.7266... Generator Loss: 2.0648 Epoch 1/2... Batch 180... Discriminator Loss: 0.9038... Generator Loss: 1.4034 Epoch 1/2... Batch 190... Discriminator Loss: 0.6906... Generator Loss: 2.4101 Epoch 1/2... Batch 200... Discriminator Loss: 0.6886... Generator Loss: 2.0620 Epoch 1/2... Batch 210... Discriminator Loss: 0.9148... Generator Loss: 1.5641 Epoch 1/2... Batch 220... Discriminator Loss: 1.1484... Generator Loss: 1.0639 Epoch 1/2... Batch 230... Discriminator Loss: 0.9669... Generator Loss: 1.3079 Epoch 1/2... Batch 240... Discriminator Loss: 0.7315... Generator Loss: 1.7730 Epoch 1/2... Batch 250... Discriminator Loss: 0.8537... Generator Loss: 1.7153 Epoch 1/2... Batch 260... Discriminator Loss: 0.8256... Generator Loss: 1.6790 Epoch 1/2... Batch 270... Discriminator Loss: 0.8870... Generator Loss: 2.2118 Epoch 1/2... Batch 280... Discriminator Loss: 0.9213... Generator Loss: 1.4661 Epoch 1/2... Batch 290... Discriminator Loss: 0.7770... Generator Loss: 1.9560 Epoch 1/2... Batch 300... Discriminator Loss: 0.8099... Generator Loss: 2.1415 Epoch 1/2... Batch 310... Discriminator Loss: 0.8594... Generator Loss: 2.2313 Epoch 1/2... Batch 320... Discriminator Loss: 0.9495... Generator Loss: 1.7784 Epoch 1/2... Batch 330... Discriminator Loss: 0.8249... Generator Loss: 1.7010 Epoch 1/2... Batch 340... Discriminator Loss: 0.8699... Generator Loss: 1.9127 Epoch 1/2... Batch 350... Discriminator Loss: 0.7958... Generator Loss: 1.8774 Epoch 1/2... Batch 360... Discriminator Loss: 0.8858... Generator Loss: 1.2416 Epoch 1/2... Batch 370... Discriminator Loss: 0.8622... Generator Loss: 1.4814 Epoch 1/2... Batch 380... Discriminator Loss: 0.8390... Generator Loss: 1.5083 Epoch 1/2... Batch 390... Discriminator Loss: 0.9377... Generator Loss: 1.2274 Epoch 1/2... Batch 400... Discriminator Loss: 0.7196... Generator Loss: 2.0331 Epoch 1/2... Batch 410... Discriminator Loss: 0.8298... Generator Loss: 1.6503 Epoch 1/2... Batch 420... Discriminator Loss: 0.7834... Generator Loss: 1.5748 Epoch 1/2... Batch 430... Discriminator Loss: 0.8089... Generator Loss: 2.0889 Epoch 1/2... Batch 440... Discriminator Loss: 0.8478... Generator Loss: 1.5553 Epoch 1/2... Batch 450... Discriminator Loss: 0.8038... Generator Loss: 1.5093 Epoch 1/2... Batch 460... Discriminator Loss: 0.7762... Generator Loss: 2.0020 Epoch 1/2... Batch 470... Discriminator Loss: 0.9601... Generator Loss: 1.3426 Epoch 1/2... Batch 480... Discriminator Loss: 0.7570... Generator Loss: 2.1164 Epoch 1/2... Batch 490... Discriminator Loss: 0.7255... Generator Loss: 1.8155 Epoch 1/2... Batch 500... Discriminator Loss: 0.7742... Generator Loss: 1.6010 Epoch 1/2... Batch 510... Discriminator Loss: 0.9511... Generator Loss: 1.4050 Epoch 1/2... Batch 520... Discriminator Loss: 0.7391... Generator Loss: 1.8236 Epoch 1/2... Batch 530... Discriminator Loss: 0.8647... Generator Loss: 1.6992 Epoch 1/2... Batch 540... Discriminator Loss: 0.6579... Generator Loss: 1.6406 Epoch 1/2... Batch 550... Discriminator Loss: 0.6725... Generator Loss: 2.1059 Epoch 1/2... Batch 560... Discriminator Loss: 0.9139... Generator Loss: 1.3907 Epoch 1/2... Batch 570... Discriminator Loss: 0.7361... Generator Loss: 2.0791 Epoch 1/2... Batch 580... Discriminator Loss: 0.7166... Generator Loss: 1.9413 Epoch 1/2... Batch 590... Discriminator Loss: 0.8389... Generator Loss: 1.3885 Epoch 1/2... Batch 600... Discriminator Loss: 0.7775... Generator Loss: 2.2436 Epoch 1/2... Batch 610... Discriminator Loss: 0.7631... Generator Loss: 2.0067 Epoch 1/2... Batch 620... Discriminator Loss: 0.8102... Generator Loss: 1.5625 Epoch 1/2... Batch 630... Discriminator Loss: 0.8196... Generator Loss: 1.8408 Epoch 1/2... Batch 640... Discriminator Loss: 0.7188... Generator Loss: 1.9150 Epoch 1/2... Batch 650... Discriminator Loss: 0.9867... Generator Loss: 1.1708 Epoch 1/2... Batch 660... Discriminator Loss: 0.7941... Generator Loss: 1.7650 Epoch 1/2... Batch 670... Discriminator Loss: 0.8267... Generator Loss: 1.9731 Epoch 1/2... Batch 680... Discriminator Loss: 0.9433... Generator Loss: 1.1614 Epoch 1/2... Batch 690... Discriminator Loss: 0.8899... Generator Loss: 1.3595 Epoch 1/2... Batch 700... Discriminator Loss: 0.7991... Generator Loss: 2.4998 Epoch 1/2... Batch 710... Discriminator Loss: 0.9115... Generator Loss: 1.4783 Epoch 1/2... Batch 720... Discriminator Loss: 0.8680... Generator Loss: 1.3549 Epoch 1/2... Batch 730... Discriminator Loss: 0.7776... Generator Loss: 1.8143 Epoch 1/2... Batch 740... Discriminator Loss: 0.8594... Generator Loss: 1.5717 Epoch 1/2... Batch 750... Discriminator Loss: 0.8480... Generator Loss: 1.9891 Epoch 1/2... Batch 760... Discriminator Loss: 0.8691... Generator Loss: 1.7379 Epoch 1/2... Batch 770... Discriminator Loss: 0.9642... Generator Loss: 2.5907 Epoch 1/2... Batch 780... Discriminator Loss: 0.9028... Generator Loss: 1.3877 Epoch 1/2... Batch 790... Discriminator Loss: 1.0270... Generator Loss: 0.9990 Epoch 1/2... Batch 800... Discriminator Loss: 0.8572... Generator Loss: 1.4752 Epoch 1/2... Batch 810... Discriminator Loss: 0.8880... Generator Loss: 1.5381 Epoch 1/2... Batch 820... Discriminator Loss: 0.8298... Generator Loss: 1.4535 Epoch 1/2... Batch 830... Discriminator Loss: 0.8860... Generator Loss: 1.2786 Epoch 1/2... Batch 840... Discriminator Loss: 0.8882... Generator Loss: 2.2311 Epoch 1/2... Batch 850... Discriminator Loss: 0.8000... Generator Loss: 1.6295 Epoch 1/2... Batch 860... Discriminator Loss: 0.8723... Generator Loss: 1.1965 Epoch 1/2... Batch 870... Discriminator Loss: 0.9579... Generator Loss: 1.2390 Epoch 1/2... Batch 880... Discriminator Loss: 0.7378... Generator Loss: 1.8470 Epoch 1/2... Batch 890... Discriminator Loss: 0.9657... Generator Loss: 1.0971 Epoch 1/2... Batch 900... Discriminator Loss: 0.8642... Generator Loss: 1.5896 Epoch 1/2... Batch 910... Discriminator Loss: 1.0032... Generator Loss: 1.3101 Epoch 1/2... Batch 920... Discriminator Loss: 0.9020... Generator Loss: 1.3205 Epoch 1/2... Batch 930... Discriminator Loss: 0.8533... Generator Loss: 1.5136 Epoch 2/2... Batch 10... Discriminator Loss: 0.9416... Generator Loss: 1.2490 Epoch 2/2... Batch 20... Discriminator Loss: 0.9764... Generator Loss: 1.1918 Epoch 2/2... Batch 30... Discriminator Loss: 1.0604... Generator Loss: 1.9076 Epoch 2/2... Batch 40... Discriminator Loss: 0.9644... Generator Loss: 1.0420 Epoch 2/2... Batch 50... Discriminator Loss: 1.0065... Generator Loss: 1.4173 Epoch 2/2... Batch 60... Discriminator Loss: 1.0605... Generator Loss: 0.9198 Epoch 2/2... Batch 70... Discriminator Loss: 0.9821... Generator Loss: 1.0946 Epoch 2/2... Batch 80... Discriminator Loss: 0.8265... Generator Loss: 1.5769 Epoch 2/2... Batch 90... Discriminator Loss: 0.9507... Generator Loss: 2.1309 Epoch 2/2... Batch 100... Discriminator Loss: 0.8979... Generator Loss: 1.2493 Epoch 2/2... Batch 110... Discriminator Loss: 0.9850... Generator Loss: 2.3388 Epoch 2/2... Batch 120... Discriminator Loss: 0.8296... Generator Loss: 2.0036 Epoch 2/2... Batch 130... Discriminator Loss: 0.8423... Generator Loss: 1.6824 Epoch 2/2... Batch 140... Discriminator Loss: 1.0202... Generator Loss: 1.7160 Epoch 2/2... Batch 150... Discriminator Loss: 0.8977... Generator Loss: 1.5909 Epoch 2/2... Batch 160... Discriminator Loss: 0.9121... Generator Loss: 1.5185 Epoch 2/2... Batch 170... Discriminator Loss: 0.8746... Generator Loss: 1.5487 Epoch 2/2... Batch 180... Discriminator Loss: 0.9337... Generator Loss: 1.5802 Epoch 2/2... Batch 190... Discriminator Loss: 0.9722... Generator Loss: 1.7139 Epoch 2/2... Batch 200... Discriminator Loss: 0.8821... Generator Loss: 1.2507 Epoch 2/2... Batch 210... Discriminator Loss: 0.8134... Generator Loss: 1.9155 Epoch 2/2... Batch 220... Discriminator Loss: 0.9798... Generator Loss: 1.2178 Epoch 2/2... Batch 230... Discriminator Loss: 0.9703... Generator Loss: 1.1664 Epoch 2/2... Batch 240... Discriminator Loss: 1.1046... Generator Loss: 1.1118 Epoch 2/2... Batch 250... Discriminator Loss: 0.8787... Generator Loss: 1.4165 Epoch 2/2... Batch 260... Discriminator Loss: 0.8558... Generator Loss: 2.2611 Epoch 2/2... Batch 270... Discriminator Loss: 1.2768... Generator Loss: 2.2397 Epoch 2/2... Batch 280... Discriminator Loss: 0.9799... Generator Loss: 1.3003 Epoch 2/2... Batch 290... Discriminator Loss: 1.1653... Generator Loss: 0.8523 Epoch 2/2... Batch 300... Discriminator Loss: 0.9194... Generator Loss: 1.5541 Epoch 2/2... Batch 310... Discriminator Loss: 0.9504... Generator Loss: 1.2357 Epoch 2/2... Batch 320... Discriminator Loss: 1.0290... Generator Loss: 1.5459 Epoch 2/2... Batch 330... Discriminator Loss: 0.9386... Generator Loss: 1.4610 Epoch 2/2... Batch 340... Discriminator Loss: 1.0624... Generator Loss: 0.9162 Epoch 2/2... Batch 350... Discriminator Loss: 0.8907... Generator Loss: 1.8487 Epoch 2/2... Batch 360... Discriminator Loss: 1.0106... Generator Loss: 1.3382 Epoch 2/2... Batch 370... Discriminator Loss: 0.9335... Generator Loss: 1.3463 Epoch 2/2... Batch 380... Discriminator Loss: 0.9040... Generator Loss: 1.3094 Epoch 2/2... Batch 390... Discriminator Loss: 0.9716... Generator Loss: 1.3650 Epoch 2/2... Batch 400... Discriminator Loss: 1.0267... Generator Loss: 1.0680 Epoch 2/2... Batch 410... Discriminator Loss: 1.0693... Generator Loss: 1.0447 Epoch 2/2... Batch 420... Discriminator Loss: 0.8992... Generator Loss: 1.4296 Epoch 2/2... Batch 430... Discriminator Loss: 1.0428... Generator Loss: 1.3955 Epoch 2/2... Batch 440... Discriminator Loss: 0.9420... Generator Loss: 1.2113 Epoch 2/2... Batch 450... Discriminator Loss: 0.8857... Generator Loss: 1.4255 Epoch 2/2... Batch 460... Discriminator Loss: 0.9020... Generator Loss: 1.3917 Epoch 2/2... Batch 470... Discriminator Loss: 1.0779... Generator Loss: 1.7242 Epoch 2/2... Batch 480... Discriminator Loss: 0.9909... Generator Loss: 1.0841 Epoch 2/2... Batch 490... Discriminator Loss: 1.0229... Generator Loss: 0.9844 Epoch 2/2... Batch 500... Discriminator Loss: 0.9904... Generator Loss: 1.2607 Epoch 2/2... Batch 510... Discriminator Loss: 1.0860... Generator Loss: 1.6045 Epoch 2/2... Batch 520... Discriminator Loss: 0.9960... Generator Loss: 1.3987 Epoch 2/2... Batch 530... Discriminator Loss: 0.9151... Generator Loss: 1.2345 Epoch 2/2... Batch 540... Discriminator Loss: 1.0506... Generator Loss: 0.9963 Epoch 2/2... Batch 550... Discriminator Loss: 0.9258... Generator Loss: 1.4107 Epoch 2/2... Batch 560... Discriminator Loss: 1.1630... Generator Loss: 0.7236 Epoch 2/2... Batch 570... Discriminator Loss: 1.1497... Generator Loss: 0.9518 Epoch 2/2... Batch 580... Discriminator Loss: 0.9784... Generator Loss: 1.2324 Epoch 2/2... Batch 590... Discriminator Loss: 0.8726... Generator Loss: 1.4524 Epoch 2/2... Batch 600... Discriminator Loss: 0.9668... Generator Loss: 1.2295 Epoch 2/2... Batch 610... Discriminator Loss: 1.0421... Generator Loss: 2.0669 Epoch 2/2... Batch 620... Discriminator Loss: 0.9521... Generator Loss: 1.2010 Epoch 2/2... Batch 630... Discriminator Loss: 0.9434... Generator Loss: 1.3111 Epoch 2/2... Batch 640... Discriminator Loss: 0.9762... Generator Loss: 1.0773 Epoch 2/2... Batch 650... Discriminator Loss: 1.1472... Generator Loss: 0.8091 Epoch 2/2... Batch 660... Discriminator Loss: 1.0226... Generator Loss: 1.2746 Epoch 2/2... Batch 670... Discriminator Loss: 1.1418... Generator Loss: 0.7758 Epoch 2/2... Batch 680... Discriminator Loss: 1.1074... Generator Loss: 1.1398 Epoch 2/2... Batch 690... Discriminator Loss: 1.0275... Generator Loss: 1.4793 Epoch 2/2... Batch 700... Discriminator Loss: 1.0233... Generator Loss: 1.2548 Epoch 2/2... Batch 710... Discriminator Loss: 1.2469... Generator Loss: 0.7513 Epoch 2/2... Batch 720... Discriminator Loss: 0.9388... Generator Loss: 1.3823 Epoch 2/2... Batch 730... Discriminator Loss: 1.0916... Generator Loss: 1.0123 Epoch 2/2... Batch 740... Discriminator Loss: 0.8532... Generator Loss: 1.4688 Epoch 2/2... Batch 750... Discriminator Loss: 1.0012... Generator Loss: 1.1721 Epoch 2/2... Batch 760... Discriminator Loss: 0.9329... Generator Loss: 1.1667 Epoch 2/2... Batch 770... Discriminator Loss: 0.9331... Generator Loss: 1.2019 Epoch 2/2... Batch 780... Discriminator Loss: 1.0651... Generator Loss: 1.2122 Epoch 2/2... Batch 790... Discriminator Loss: 1.0660... Generator Loss: 0.9788 Epoch 2/2... Batch 800... Discriminator Loss: 1.0204... Generator Loss: 1.0103 Epoch 2/2... Batch 810... Discriminator Loss: 0.9322... Generator Loss: 1.3958 Epoch 2/2... Batch 820... Discriminator Loss: 0.9664... Generator Loss: 1.3484 Epoch 2/2... Batch 830... Discriminator Loss: 0.9912... Generator Loss: 1.3500 Epoch 2/2... Batch 840... Discriminator Loss: 0.8798... Generator Loss: 1.5184 Epoch 2/2... Batch 850... Discriminator Loss: 0.9208... Generator Loss: 1.7758 Epoch 2/2... Batch 860... Discriminator Loss: 0.8183... Generator Loss: 1.5023 Epoch 2/2... Batch 870... Discriminator Loss: 1.1022... Generator Loss: 1.0484 Epoch 2/2... Batch 880... Discriminator Loss: 0.8392... Generator Loss: 1.3488 Epoch 2/2... Batch 890... Discriminator Loss: 0.9832... Generator Loss: 1.3378 Epoch 2/2... Batch 900... Discriminator Loss: 0.9039... Generator Loss: 1.4853 Epoch 2/2... Batch 910... Discriminator Loss: 0.9838... Generator Loss: 1.1301 Epoch 2/2... Batch 920... Discriminator Loss: 0.8898... Generator Loss: 1.3110 Epoch 2/2... Batch 930... Discriminator Loss: 1.1253... Generator Loss: 1.0081CelebA在 CelebA 上运行你的 GANs 模型。在一般的GPU上运行每次迭代大约需要 20 分钟。你可以运行整个迭代，或者当 GANs 开始产生真实人脸图像时停止它。 123456789101112131415batch_size = 32z_dim = 128learning_rate = 0.0002beta1 = 0.5"""DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE"""epochs = 1celeba_dataset = helper.Dataset('celeba', glob(os.path.join(data_dir, 'img_align_celeba/*.jpg')))with tf.Graph().as_default(): train(epochs, batch_size, z_dim, learning_rate, beta1, celeba_dataset.get_batches, celeba_dataset.shape, celeba_dataset.image_mode) Epoch 1/1... Batch 10... Discriminator Loss: 0.9981... Generator Loss: 0.7771 Epoch 1/1... Batch 20... Discriminator Loss: 0.9016... Generator Loss: 0.8664 Epoch 1/1... Batch 30... Discriminator Loss: 0.7067... Generator Loss: 1.2069 Epoch 1/1... Batch 40... Discriminator Loss: 0.5190... Generator Loss: 1.9941 Epoch 1/1... Batch 50... Discriminator Loss: 0.5118... Generator Loss: 2.4666 Epoch 1/1... Batch 60... Discriminator Loss: 0.6421... Generator Loss: 4.1267 Epoch 1/1... Batch 70... Discriminator Loss: 0.7517... Generator Loss: 1.2524 Epoch 1/1... Batch 80... Discriminator Loss: 0.5839... Generator Loss: 2.3504 Epoch 1/1... Batch 90... Discriminator Loss: 0.5472... Generator Loss: 2.1309 Epoch 1/1... Batch 100... Discriminator Loss: 0.5191... Generator Loss: 2.4419 Epoch 1/1... Batch 110... Discriminator Loss: 0.6108... Generator Loss: 2.5365 Epoch 1/1... Batch 120... Discriminator Loss: 0.7009... Generator Loss: 1.6806 Epoch 1/1... Batch 130... Discriminator Loss: 1.2114... Generator Loss: 2.1116 Epoch 1/1... Batch 140... Discriminator Loss: 0.8824... Generator Loss: 1.2442 Epoch 1/1... Batch 150... Discriminator Loss: 0.9787... Generator Loss: 1.0615 Epoch 1/1... Batch 160... Discriminator Loss: 0.9691... Generator Loss: 1.3978 Epoch 1/1... Batch 170... Discriminator Loss: 0.9818... Generator Loss: 1.1954 Epoch 1/1... Batch 180... Discriminator Loss: 0.9402... Generator Loss: 1.0828 Epoch 1/1... Batch 190... Discriminator Loss: 1.0999... Generator Loss: 1.2614 Epoch 1/1... Batch 200... Discriminator Loss: 1.2114... Generator Loss: 1.0437 Epoch 1/1... Batch 210... Discriminator Loss: 1.0086... Generator Loss: 1.1933 Epoch 1/1... Batch 220... Discriminator Loss: 1.1822... Generator Loss: 0.9971 Epoch 1/1... Batch 230... Discriminator Loss: 1.0865... Generator Loss: 1.2736 Epoch 1/1... Batch 240... Discriminator Loss: 1.0688... Generator Loss: 1.1071 Epoch 1/1... Batch 250... Discriminator Loss: 0.9626... Generator Loss: 1.7346 Epoch 1/1... Batch 260... Discriminator Loss: 1.1661... Generator Loss: 0.9037 Epoch 1/1... Batch 270... Discriminator Loss: 0.9950... Generator Loss: 1.1802 Epoch 1/1... Batch 280... Discriminator Loss: 1.1150... Generator Loss: 0.9306 Epoch 1/1... Batch 290... Discriminator Loss: 0.9315... Generator Loss: 1.2671 Epoch 1/1... Batch 300... Discriminator Loss: 1.2516... Generator Loss: 0.9549 Epoch 1/1... Batch 310... Discriminator Loss: 1.2923... Generator Loss: 0.7904 Epoch 1/1... Batch 320... Discriminator Loss: 0.9969... Generator Loss: 1.1599 Epoch 1/1... Batch 330... Discriminator Loss: 1.2161... Generator Loss: 0.8422 Epoch 1/1... Batch 340... Discriminator Loss: 1.1222... Generator Loss: 1.0251 Epoch 1/1... Batch 350... Discriminator Loss: 1.3111... Generator Loss: 0.7054 Epoch 1/1... Batch 360... Discriminator Loss: 1.2110... Generator Loss: 1.0047 Epoch 1/1... Batch 370... Discriminator Loss: 1.0935... Generator Loss: 1.0532 Epoch 1/1... Batch 380... Discriminator Loss: 1.2003... Generator Loss: 0.8454 Epoch 1/1... Batch 390... Discriminator Loss: 1.1732... Generator Loss: 0.8068 Epoch 1/1... Batch 400... Discriminator Loss: 1.1592... Generator Loss: 1.0911 Epoch 1/1... Batch 410... Discriminator Loss: 1.1188... Generator Loss: 1.1321 Epoch 1/1... Batch 420... Discriminator Loss: 1.2830... Generator Loss: 0.8053 Epoch 1/1... Batch 430... Discriminator Loss: 1.0457... Generator Loss: 0.9653 Epoch 1/1... Batch 440... Discriminator Loss: 0.9826... Generator Loss: 1.2868 Epoch 1/1... Batch 450... Discriminator Loss: 1.5117... Generator Loss: 0.7326 Epoch 1/1... Batch 460... Discriminator Loss: 0.9725... Generator Loss: 1.0978 Epoch 1/1... Batch 470... Discriminator Loss: 1.4267... Generator Loss: 0.8671 Epoch 1/1... Batch 480... Discriminator Loss: 1.2267... Generator Loss: 0.9280 Epoch 1/1... Batch 490... Discriminator Loss: 1.1766... Generator Loss: 0.9417 Epoch 1/1... Batch 500... Discriminator Loss: 1.1857... Generator Loss: 0.7930 Epoch 1/1... Batch 510... Discriminator Loss: 1.2500... Generator Loss: 0.9595 Epoch 1/1... Batch 520... Discriminator Loss: 1.2645... Generator Loss: 0.8823 Epoch 1/1... Batch 530... Discriminator Loss: 1.1794... Generator Loss: 0.9733 Epoch 1/1... Batch 540... Discriminator Loss: 1.4102... Generator Loss: 0.8095 Epoch 1/1... Batch 550... Discriminator Loss: 1.1388... Generator Loss: 0.9542 Epoch 1/1... Batch 560... Discriminator Loss: 1.1627... Generator Loss: 0.9303 Epoch 1/1... Batch 570... Discriminator Loss: 1.2920... Generator Loss: 0.9812 Epoch 1/1... Batch 580... Discriminator Loss: 1.2005... Generator Loss: 0.9594 Epoch 1/1... Batch 590... Discriminator Loss: 1.1743... Generator Loss: 0.9003 Epoch 1/1... Batch 600... Discriminator Loss: 1.2066... Generator Loss: 0.9200 Epoch 1/1... Batch 610... Discriminator Loss: 1.2498... Generator Loss: 0.9885 Epoch 1/1... Batch 620... Discriminator Loss: 1.1849... Generator Loss: 1.0087 Epoch 1/1... Batch 630... Discriminator Loss: 1.1608... Generator Loss: 0.9816 Epoch 1/1... Batch 640... Discriminator Loss: 1.2275... Generator Loss: 0.9283 Epoch 1/1... Batch 650... Discriminator Loss: 1.1646... Generator Loss: 0.9433 Epoch 1/1... Batch 660... Discriminator Loss: 1.2177... Generator Loss: 0.9632 Epoch 1/1... Batch 670... Discriminator Loss: 1.3778... Generator Loss: 0.8534 Epoch 1/1... Batch 680... Discriminator Loss: 1.2189... Generator Loss: 0.8926 Epoch 1/1... Batch 690... Discriminator Loss: 1.4000... Generator Loss: 0.8340 Epoch 1/1... Batch 700... Discriminator Loss: 1.2425... Generator Loss: 0.8198 Epoch 1/1... Batch 710... Discriminator Loss: 1.2259... Generator Loss: 0.8611 Epoch 1/1... Batch 720... Discriminator Loss: 1.2045... Generator Loss: 0.9232 Epoch 1/1... Batch 730... Discriminator Loss: 1.1803... Generator Loss: 0.9321 Epoch 1/1... Batch 740... Discriminator Loss: 1.2954... Generator Loss: 0.8308 Epoch 1/1... Batch 750... Discriminator Loss: 1.1874... Generator Loss: 1.0581 Epoch 1/1... Batch 760... Discriminator Loss: 1.3222... Generator Loss: 0.7852 Epoch 1/1... Batch 770... Discriminator Loss: 1.2697... Generator Loss: 0.9097 Epoch 1/1... Batch 780... Discriminator Loss: 1.2983... Generator Loss: 0.8731 Epoch 1/1... Batch 790... Discriminator Loss: 1.3264... Generator Loss: 0.7872 Epoch 1/1... Batch 800... Discriminator Loss: 1.2473... Generator Loss: 0.9322 Epoch 1/1... Batch 810... Discriminator Loss: 1.2221... Generator Loss: 0.8978 Epoch 1/1... Batch 820... Discriminator Loss: 1.2596... Generator Loss: 0.8352 Epoch 1/1... Batch 830... Discriminator Loss: 1.2443... Generator Loss: 0.9121 Epoch 1/1... Batch 840... Discriminator Loss: 1.2686... Generator Loss: 0.9653 Epoch 1/1... Batch 850... Discriminator Loss: 1.3832... Generator Loss: 0.7721 Epoch 1/1... Batch 860... Discriminator Loss: 1.2008... Generator Loss: 0.8735 Epoch 1/1... Batch 870... Discriminator Loss: 1.2842... Generator Loss: 0.8377 Epoch 1/1... Batch 880... Discriminator Loss: 1.1266... Generator Loss: 0.9060 Epoch 1/1... Batch 890... Discriminator Loss: 1.2850... Generator Loss: 0.8653 Epoch 1/1... Batch 900... Discriminator Loss: 1.3255... Generator Loss: 0.8536 Epoch 1/1... Batch 910... Discriminator Loss: 1.4506... Generator Loss: 0.6924 Epoch 1/1... Batch 920... Discriminator Loss: 1.2682... Generator Loss: 0.8340 Epoch 1/1... Batch 930... Discriminator Loss: 1.2845... Generator Loss: 0.8045 Epoch 1/1... Batch 940... Discriminator Loss: 1.3614... Generator Loss: 0.8227 Epoch 1/1... Batch 950... Discriminator Loss: 1.2370... Generator Loss: 0.8425 Epoch 1/1... Batch 960... Discriminator Loss: 1.1709... Generator Loss: 0.9615 Epoch 1/1... Batch 970... Discriminator Loss: 1.2701... Generator Loss: 0.8743 Epoch 1/1... Batch 980... Discriminator Loss: 1.2803... Generator Loss: 0.8770 Epoch 1/1... Batch 990... Discriminator Loss: 1.2514... Generator Loss: 0.9585 Epoch 1/1... Batch 1000... Discriminator Loss: 1.3493... Generator Loss: 0.7889 Epoch 1/1... Batch 1010... Discriminator Loss: 1.2175... Generator Loss: 0.9166 Epoch 1/1... Batch 1020... Discriminator Loss: 1.3008... Generator Loss: 0.8842 Epoch 1/1... Batch 1030... Discriminator Loss: 1.2665... Generator Loss: 0.9152 Epoch 1/1... Batch 1040... Discriminator Loss: 1.2192... Generator Loss: 0.9136 Epoch 1/1... Batch 1050... Discriminator Loss: 1.2416... Generator Loss: 0.8538 Epoch 1/1... Batch 1060... Discriminator Loss: 1.2799... Generator Loss: 0.8829 Epoch 1/1... Batch 1070... Discriminator Loss: 1.2771... Generator Loss: 0.8186 Epoch 1/1... Batch 1080... Discriminator Loss: 1.2694... Generator Loss: 0.9232 Epoch 1/1... Batch 1090... Discriminator Loss: 1.3148... Generator Loss: 0.8158 Epoch 1/1... Batch 1100... Discriminator Loss: 1.2851... Generator Loss: 0.8493 Epoch 1/1... Batch 1110... Discriminator Loss: 1.3952... Generator Loss: 0.7836 Epoch 1/1... Batch 1120... Discriminator Loss: 1.2444... Generator Loss: 0.8344 Epoch 1/1... Batch 1130... Discriminator Loss: 1.2850... Generator Loss: 0.9236 Epoch 1/1... Batch 1140... Discriminator Loss: 1.3081... Generator Loss: 0.8108 Epoch 1/1... Batch 1150... Discriminator Loss: 1.3350... Generator Loss: 0.7956 Epoch 1/1... Batch 1160... Discriminator Loss: 1.2242... Generator Loss: 0.9067 Epoch 1/1... Batch 1170... Discriminator Loss: 1.2988... Generator Loss: 0.8518 Epoch 1/1... Batch 1180... Discriminator Loss: 1.2646... Generator Loss: 0.8700 Epoch 1/1... Batch 1190... Discriminator Loss: 1.2182... Generator Loss: 0.8550 Epoch 1/1... Batch 1200... Discriminator Loss: 1.2484... Generator Loss: 0.9214 Epoch 1/1... Batch 1210... Discriminator Loss: 1.3718... Generator Loss: 0.8059 Epoch 1/1... Batch 1220... Discriminator Loss: 1.2959... Generator Loss: 0.8333 Epoch 1/1... Batch 1230... Discriminator Loss: 1.2722... Generator Loss: 0.9051 Epoch 1/1... Batch 1240... Discriminator Loss: 1.2833... Generator Loss: 0.8142 Epoch 1/1... Batch 1250... Discriminator Loss: 1.2560... Generator Loss: 0.8072 Epoch 1/1... Batch 1260... Discriminator Loss: 1.3153... Generator Loss: 0.8065 Epoch 1/1... Batch 1270... Discriminator Loss: 1.3130... Generator Loss: 0.8006 Epoch 1/1... Batch 1280... Discriminator Loss: 1.2618... Generator Loss: 0.8966 Epoch 1/1... Batch 1290... Discriminator Loss: 1.2786... Generator Loss: 0.8311 Epoch 1/1... Batch 1300... Discriminator Loss: 1.2449... Generator Loss: 0.8881 Epoch 1/1... Batch 1310... Discriminator Loss: 1.2607... Generator Loss: 0.8691 Epoch 1/1... Batch 1320... Discriminator Loss: 1.3255... Generator Loss: 0.8364 Epoch 1/1... Batch 1330... Discriminator Loss: 1.3190... Generator Loss: 0.8511 Epoch 1/1... Batch 1340... Discriminator Loss: 1.3341... Generator Loss: 0.8172 Epoch 1/1... Batch 1350... Discriminator Loss: 1.3062... Generator Loss: 0.7934 Epoch 1/1... Batch 1360... Discriminator Loss: 1.2737... Generator Loss: 0.8675 Epoch 1/1... Batch 1370... Discriminator Loss: 1.4014... Generator Loss: 0.7046 Epoch 1/1... Batch 1380... Discriminator Loss: 1.3793... Generator Loss: 0.7934 Epoch 1/1... Batch 1390... Discriminator Loss: 1.2920... Generator Loss: 0.7808 Epoch 1/1... Batch 1400... Discriminator Loss: 1.2964... Generator Loss: 0.8559 Epoch 1/1... Batch 1410... Discriminator Loss: 1.3307... Generator Loss: 0.8587 Epoch 1/1... Batch 1420... Discriminator Loss: 1.1907... Generator Loss: 0.9548 Epoch 1/1... Batch 1430... Discriminator Loss: 1.2613... Generator Loss: 0.8367 Epoch 1/1... Batch 1440... Discriminator Loss: 1.2975... Generator Loss: 0.8297 Epoch 1/1... Batch 1450... Discriminator Loss: 1.4721... Generator Loss: 0.8021 Epoch 1/1... Batch 1460... Discriminator Loss: 1.3033... Generator Loss: 0.8686 Epoch 1/1... Batch 1470... Discriminator Loss: 1.2740... Generator Loss: 0.9183 Epoch 1/1... Batch 1480... Discriminator Loss: 1.2828... Generator Loss: 0.8822 Epoch 1/1... Batch 1490... Discriminator Loss: 1.3281... Generator Loss: 0.7889 Epoch 1/1... Batch 1500... Discriminator Loss: 1.4039... Generator Loss: 0.7901 Epoch 1/1... Batch 1510... Discriminator Loss: 1.3994... Generator Loss: 0.8115 Epoch 1/1... Batch 1520... Discriminator Loss: 1.3938... Generator Loss: 0.8660 Epoch 1/1... Batch 1530... Discriminator Loss: 1.3472... Generator Loss: 0.8626 Epoch 1/1... Batch 1540... Discriminator Loss: 1.2848... Generator Loss: 0.8554 Epoch 1/1... Batch 1550... Discriminator Loss: 1.2706... Generator Loss: 0.8981 Epoch 1/1... Batch 1560... Discriminator Loss: 1.3040... Generator Loss: 0.8787 Epoch 1/1... Batch 1570... Discriminator Loss: 1.2928... Generator Loss: 0.8965 Epoch 1/1... Batch 1580... Discriminator Loss: 1.4242... Generator Loss: 0.8227 Epoch 1/1... Batch 1590... Discriminator Loss: 1.3095... Generator Loss: 0.8228 Epoch 1/1... Batch 1600... Discriminator Loss: 1.3139... Generator Loss: 0.8297 Epoch 1/1... Batch 1610... Discriminator Loss: 1.3187... Generator Loss: 0.8088 Epoch 1/1... Batch 1620... Discriminator Loss: 1.1701... Generator Loss: 0.9060 Epoch 1/1... Batch 1630... Discriminator Loss: 1.2032... Generator Loss: 0.9128 Epoch 1/1... Batch 1640... Discriminator Loss: 1.3423... Generator Loss: 0.8544 Epoch 1/1... Batch 1650... Discriminator Loss: 1.2836... Generator Loss: 0.8374 Epoch 1/1... Batch 1660... Discriminator Loss: 1.3496... Generator Loss: 0.8617 Epoch 1/1... Batch 1670... Discriminator Loss: 1.3002... Generator Loss: 0.8886 Epoch 1/1... Batch 1680... Discriminator Loss: 1.3113... Generator Loss: 0.8682 Epoch 1/1... Batch 1690... Discriminator Loss: 1.3523... Generator Loss: 0.8381 Epoch 1/1... Batch 1700... Discriminator Loss: 1.3383... Generator Loss: 0.8266 Epoch 1/1... Batch 1710... Discriminator Loss: 1.2662... Generator Loss: 0.8938 Epoch 1/1... Batch 1720... Discriminator Loss: 1.3351... Generator Loss: 0.8087 Epoch 1/1... Batch 1730... Discriminator Loss: 1.3067... Generator Loss: 0.8960 Epoch 1/1... Batch 1740... Discriminator Loss: 1.3567... Generator Loss: 0.7756 Epoch 1/1... Batch 1750... Discriminator Loss: 1.4145... Generator Loss: 0.8081 Epoch 1/1... Batch 1760... Discriminator Loss: 1.2260... Generator Loss: 0.9472 Epoch 1/1... Batch 1770... Discriminator Loss: 1.2291... Generator Loss: 0.9573 Epoch 1/1... Batch 1780... Discriminator Loss: 1.3257... Generator Loss: 0.8390 Epoch 1/1... Batch 1790... Discriminator Loss: 1.2925... Generator Loss: 0.9057 Epoch 1/1... Batch 1800... Discriminator Loss: 1.3113... Generator Loss: 0.7977 Epoch 1/1... Batch 1810... Discriminator Loss: 1.2760... Generator Loss: 0.8303 Epoch 1/1... Batch 1820... Discriminator Loss: 1.2022... Generator Loss: 0.8662 Epoch 1/1... Batch 1830... Discriminator Loss: 1.2934... Generator Loss: 0.7599 Epoch 1/1... Batch 1840... Discriminator Loss: 1.3896... Generator Loss: 0.7332 Epoch 1/1... Batch 1850... Discriminator Loss: 1.3435... Generator Loss: 0.7790 Epoch 1/1... Batch 1860... Discriminator Loss: 1.2905... Generator Loss: 0.8599 Epoch 1/1... Batch 1870... Discriminator Loss: 1.3372... Generator Loss: 0.8194 Epoch 1/1... Batch 1880... Discriminator Loss: 1.3292... Generator Loss: 0.8563 Epoch 1/1... Batch 1890... Discriminator Loss: 1.2922... Generator Loss: 0.8493 Epoch 1/1... Batch 1900... Discriminator Loss: 1.3670... Generator Loss: 0.9143 Epoch 1/1... Batch 1910... Discriminator Loss: 1.2610... Generator Loss: 0.8383 Epoch 1/1... Batch 1920... Discriminator Loss: 1.2835... Generator Loss: 0.8211 Epoch 1/1... Batch 1930... Discriminator Loss: 1.3084... Generator Loss: 0.7800 Epoch 1/1... Batch 1940... Discriminator Loss: 1.3329... Generator Loss: 0.8437 Epoch 1/1... Batch 1950... Discriminator Loss: 1.4528... Generator Loss: 0.7125 Epoch 1/1... Batch 1960... Discriminator Loss: 1.3187... Generator Loss: 0.8177 Epoch 1/1... Batch 1970... Discriminator Loss: 1.2423... Generator Loss: 0.9067 Epoch 1/1... Batch 1980... Discriminator Loss: 1.3378... Generator Loss: 0.7983 Epoch 1/1... Batch 1990... Discriminator Loss: 1.3147... Generator Loss: 0.8135 Epoch 1/1... Batch 2000... Discriminator Loss: 1.2507... Generator Loss: 0.8298 Epoch 1/1... Batch 2010... Discriminator Loss: 1.3365... Generator Loss: 0.8947 Epoch 1/1... Batch 2020... Discriminator Loss: 1.2580... Generator Loss: 0.8540 Epoch 1/1... Batch 2030... Discriminator Loss: 1.2834... Generator Loss: 0.8756 Epoch 1/1... Batch 2040... Discriminator Loss: 1.3726... Generator Loss: 0.7878 Epoch 1/1... Batch 2050... Discriminator Loss: 1.3191... Generator Loss: 0.8491 Epoch 1/1... Batch 2060... Discriminator Loss: 1.3068... Generator Loss: 0.8496 Epoch 1/1... Batch 2070... Discriminator Loss: 1.3405... Generator Loss: 0.8006 Epoch 1/1... Batch 2080... Discriminator Loss: 1.3170... Generator Loss: 0.8117 Epoch 1/1... Batch 2090... Discriminator Loss: 1.3434... Generator Loss: 0.8363 Epoch 1/1... Batch 2100... Discriminator Loss: 1.3048... Generator Loss: 0.8710 Epoch 1/1... Batch 2110... Discriminator Loss: 1.2579... Generator Loss: 0.9008 Epoch 1/1... Batch 2120... Discriminator Loss: 1.3002... Generator Loss: 0.8223 Epoch 1/1... Batch 2130... Discriminator Loss: 1.3369... Generator Loss: 0.7678 Epoch 1/1... Batch 2140... Discriminator Loss: 1.4217... Generator Loss: 0.7495 Epoch 1/1... Batch 2150... Discriminator Loss: 1.2846... Generator Loss: 0.8571 Epoch 1/1... Batch 2160... Discriminator Loss: 1.2974... Generator Loss: 0.8260 Epoch 1/1... Batch 2170... Discriminator Loss: 1.3440... Generator Loss: 0.7584 Epoch 1/1... Batch 2180... Discriminator Loss: 1.2794... Generator Loss: 0.8621 Epoch 1/1... Batch 2190... Discriminator Loss: 1.3800... Generator Loss: 0.8225 Epoch 1/1... Batch 2200... Discriminator Loss: 1.3725... Generator Loss: 0.8348 Epoch 1/1... Batch 2210... Discriminator Loss: 1.4011... Generator Loss: 0.8716 Epoch 1/1... Batch 2220... Discriminator Loss: 1.2680... Generator Loss: 0.7884 Epoch 1/1... Batch 2230... Discriminator Loss: 1.3279... Generator Loss: 0.8788 Epoch 1/1... Batch 2240... Discriminator Loss: 1.3336... Generator Loss: 0.8579 Epoch 1/1... Batch 2250... Discriminator Loss: 1.3311... Generator Loss: 0.8104 Epoch 1/1... Batch 2260... Discriminator Loss: 1.2884... Generator Loss: 0.8263 Epoch 1/1... Batch 2270... Discriminator Loss: 1.3730... Generator Loss: 0.8092 Epoch 1/1... Batch 2280... Discriminator Loss: 1.1840... Generator Loss: 0.8487 Epoch 1/1... Batch 2290... Discriminator Loss: 1.3045... Generator Loss: 0.7983 Epoch 1/1... Batch 2300... Discriminator Loss: 1.3425... Generator Loss: 0.7484 Epoch 1/1... Batch 2310... Discriminator Loss: 1.3543... Generator Loss: 0.8415 Epoch 1/1... Batch 2320... Discriminator Loss: 1.3897... Generator Loss: 0.8340 Epoch 1/1... Batch 2330... Discriminator Loss: 1.3158... Generator Loss: 0.7736 Epoch 1/1... Batch 2340... Discriminator Loss: 1.3775... Generator Loss: 0.8433 Epoch 1/1... Batch 2350... Discriminator Loss: 1.3236... Generator Loss: 0.8590 Epoch 1/1... Batch 2360... Discriminator Loss: 1.3130... Generator Loss: 0.8142 Epoch 1/1... Batch 2370... Discriminator Loss: 1.3289... Generator Loss: 0.8560 Epoch 1/1... Batch 2380... Discriminator Loss: 1.4008... Generator Loss: 0.8244 Epoch 1/1... Batch 2390... Discriminator Loss: 1.2796... Generator Loss: 0.8480 Epoch 1/1... Batch 2400... Discriminator Loss: 1.2258... Generator Loss: 0.8496 Epoch 1/1... Batch 2410... Discriminator Loss: 1.3604... Generator Loss: 0.8419 Epoch 1/1... Batch 2420... Discriminator Loss: 1.3860... Generator Loss: 0.8519 Epoch 1/1... Batch 2430... Discriminator Loss: 1.2405... Generator Loss: 0.8714 Epoch 1/1... Batch 2440... Discriminator Loss: 1.3507... Generator Loss: 0.8708 Epoch 1/1... Batch 2450... Discriminator Loss: 1.2694... Generator Loss: 0.8623 Epoch 1/1... Batch 2460... Discriminator Loss: 1.3077... Generator Loss: 0.8747 Epoch 1/1... Batch 2470... Discriminator Loss: 1.3550... Generator Loss: 0.7979 Epoch 1/1... Batch 2480... Discriminator Loss: 1.2798... Generator Loss: 0.9670 Epoch 1/1... Batch 2490... Discriminator Loss: 1.4202... Generator Loss: 0.7889 Epoch 1/1... Batch 2500... Discriminator Loss: 1.3324... Generator Loss: 0.8227 Epoch 1/1... Batch 2510... Discriminator Loss: 1.2895... Generator Loss: 0.8955 Epoch 1/1... Batch 2520... Discriminator Loss: 1.2875... Generator Loss: 0.8465 Epoch 1/1... Batch 2530... Discriminator Loss: 1.3957... Generator Loss: 0.8241 Epoch 1/1... Batch 2540... Discriminator Loss: 1.3018... Generator Loss: 0.9072 Epoch 1/1... Batch 2550... Discriminator Loss: 1.2491... Generator Loss: 0.8656 Epoch 1/1... Batch 2560... Discriminator Loss: 1.3848... Generator Loss: 0.8276 Epoch 1/1... Batch 2570... Discriminator Loss: 1.3409... Generator Loss: 0.7581 Epoch 1/1... Batch 2580... Discriminator Loss: 1.3751... Generator Loss: 0.7807 Epoch 1/1... Batch 2590... Discriminator Loss: 1.2439... Generator Loss: 0.9024 Epoch 1/1... Batch 2600... Discriminator Loss: 1.2971... Generator Loss: 0.8984 Epoch 1/1... Batch 2610... Discriminator Loss: 1.2999... Generator Loss: 0.8598 Epoch 1/1... Batch 2620... Discriminator Loss: 1.2436... Generator Loss: 0.8827 Epoch 1/1... Batch 2630... Discriminator Loss: 1.3084... Generator Loss: 0.8549 Epoch 1/1... Batch 2640... Discriminator Loss: 1.2893... Generator Loss: 0.8136 Epoch 1/1... Batch 2650... Discriminator Loss: 1.2818... Generator Loss: 0.8204 Epoch 1/1... Batch 2660... Discriminator Loss: 1.3016... Generator Loss: 0.8552 Epoch 1/1... Batch 2670... Discriminator Loss: 1.3060... Generator Loss: 0.7911 Epoch 1/1... Batch 2680... Discriminator Loss: 1.3459... Generator Loss: 0.7951 Epoch 1/1... Batch 2690... Discriminator Loss: 1.2889... Generator Loss: 0.8255 Epoch 1/1... Batch 2700... Discriminator Loss: 1.3028... Generator Loss: 0.8365 Epoch 1/1... Batch 2710... Discriminator Loss: 1.3038... Generator Loss: 0.8372 Epoch 1/1... Batch 2720... Discriminator Loss: 1.3204... Generator Loss: 0.8535 Epoch 1/1... Batch 2730... Discriminator Loss: 1.3587... Generator Loss: 0.7882 Epoch 1/1... Batch 2740... Discriminator Loss: 1.2938... Generator Loss: 0.8357 Epoch 1/1... Batch 2750... Discriminator Loss: 1.2775... Generator Loss: 0.8302 Epoch 1/1... Batch 2760... Discriminator Loss: 1.3236... Generator Loss: 0.8041 Epoch 1/1... Batch 2770... Discriminator Loss: 1.3390... Generator Loss: 0.7893 Epoch 1/1... Batch 2780... Discriminator Loss: 1.2987... Generator Loss: 0.8412 Epoch 1/1... Batch 2790... Discriminator Loss: 1.3107... Generator Loss: 0.8596 Epoch 1/1... Batch 2800... Discriminator Loss: 1.2503... Generator Loss: 0.9872 Epoch 1/1... Batch 2810... Discriminator Loss: 1.2915... Generator Loss: 0.8449 Epoch 1/1... Batch 2820... Discriminator Loss: 1.3148... Generator Loss: 0.8897 Epoch 1/1... Batch 2830... Discriminator Loss: 1.3492... Generator Loss: 0.7679 Epoch 1/1... Batch 2840... Discriminator Loss: 1.2644... Generator Loss: 0.8366 Epoch 1/1... Batch 2850... Discriminator Loss: 1.2778... Generator Loss: 0.8532 Epoch 1/1... Batch 2860... Discriminator Loss: 1.3265... Generator Loss: 0.8507 Epoch 1/1... Batch 2870... Discriminator Loss: 1.3529... Generator Loss: 0.7967 Epoch 1/1... Batch 2880... Discriminator Loss: 1.3491... Generator Loss: 0.7955 Epoch 1/1... Batch 2890... Discriminator Loss: 1.3173... Generator Loss: 0.8044 Epoch 1/1... Batch 2900... Discriminator Loss: 1.3518... Generator Loss: 0.8273 Epoch 1/1... Batch 2910... Discriminator Loss: 1.3295... Generator Loss: 0.8063 Epoch 1/1... Batch 2920... Discriminator Loss: 1.3080... Generator Loss: 0.8677 Epoch 1/1... Batch 2930... Discriminator Loss: 1.2582... Generator Loss: 0.8968 Epoch 1/1... Batch 2940... Discriminator Loss: 1.3414... Generator Loss: 0.8523 Epoch 1/1... Batch 2950... Discriminator Loss: 1.2716... Generator Loss: 0.9375 Epoch 1/1... Batch 2960... Discriminator Loss: 1.3844... Generator Loss: 0.7941 Epoch 1/1... Batch 2970... Discriminator Loss: 1.2301... Generator Loss: 0.8791 Epoch 1/1... Batch 2980... Discriminator Loss: 1.3126... Generator Loss: 0.8178 Epoch 1/1... Batch 2990... Discriminator Loss: 1.1923... Generator Loss: 0.9349 Epoch 1/1... Batch 3000... Discriminator Loss: 1.3141... Generator Loss: 0.8358 Epoch 1/1... Batch 3010... Discriminator Loss: 1.3868... Generator Loss: 0.7965 Epoch 1/1... Batch 3020... Discriminator Loss: 1.3403... Generator Loss: 0.7965 Epoch 1/1... Batch 3030... Discriminator Loss: 1.3207... Generator Loss: 0.8411 Epoch 1/1... Batch 3040... Discriminator Loss: 1.3025... Generator Loss: 0.8382 Epoch 1/1... Batch 3050... Discriminator Loss: 1.3255... Generator Loss: 0.8690 Epoch 1/1... Batch 3060... Discriminator Loss: 1.2922... Generator Loss: 0.9095 Epoch 1/1... Batch 3070... Discriminator Loss: 1.3520... Generator Loss: 0.8327 Epoch 1/1... Batch 3080... Discriminator Loss: 1.2829... Generator Loss: 0.8751 Epoch 1/1... Batch 3090... Discriminator Loss: 1.3533... Generator Loss: 0.8036 Epoch 1/1... Batch 3100... Discriminator Loss: 1.3917... Generator Loss: 0.7761 Epoch 1/1... Batch 3110... Discriminator Loss: 1.3683... Generator Loss: 0.8178 Epoch 1/1... Batch 3120... Discriminator Loss: 1.3576... Generator Loss: 0.8351 Epoch 1/1... Batch 3130... Discriminator Loss: 1.2910... Generator Loss: 0.8652 Epoch 1/1... Batch 3140... Discriminator Loss: 1.3098... Generator Loss: 0.8024 Epoch 1/1... Batch 3150... Discriminator Loss: 1.2481... Generator Loss: 0.8237 Epoch 1/1... Batch 3160... Discriminator Loss: 1.2747... Generator Loss: 0.8618 Epoch 1/1... Batch 3170... Discriminator Loss: 1.3122... Generator Loss: 0.7966 Epoch 1/1... Batch 3180... Discriminator Loss: 1.4232... Generator Loss: 0.7593 Epoch 1/1... Batch 3190... Discriminator Loss: 1.3122... Generator Loss: 0.8337 Epoch 1/1... Batch 3200... Discriminator Loss: 1.3739... Generator Loss: 0.7862 Epoch 1/1... Batch 3210... Discriminator Loss: 1.2702... Generator Loss: 0.9017 Epoch 1/1... Batch 3220... Discriminator Loss: 1.3077... Generator Loss: 0.8475 Epoch 1/1... Batch 3230... Discriminator Loss: 1.2826... Generator Loss: 0.8715 Epoch 1/1... Batch 3240... Discriminator Loss: 1.3612... Generator Loss: 0.7924 Epoch 1/1... Batch 3250... Discriminator Loss: 1.2673... Generator Loss: 0.8411 Epoch 1/1... Batch 3260... Discriminator Loss: 1.2608... Generator Loss: 0.9819 Epoch 1/1... Batch 3270... Discriminator Loss: 1.3917... Generator Loss: 0.7695 Epoch 1/1... Batch 3280... Discriminator Loss: 1.3742... Generator Loss: 0.8342 Epoch 1/1... Batch 3290... Discriminator Loss: 1.3867... Generator Loss: 0.7643 Epoch 1/1... Batch 3300... Discriminator Loss: 1.2463... Generator Loss: 0.8322 Epoch 1/1... Batch 3310... Discriminator Loss: 1.3915... Generator Loss: 0.8278 Epoch 1/1... Batch 3320... Discriminator Loss: 1.3851... Generator Loss: 0.7707 Epoch 1/1... Batch 3330... Discriminator Loss: 1.3772... Generator Loss: 0.7792 Epoch 1/1... Batch 3340... Discriminator Loss: 1.3331... Generator Loss: 0.7878 Epoch 1/1... Batch 3350... Discriminator Loss: 1.3180... Generator Loss: 0.7574 Epoch 1/1... Batch 3360... Discriminator Loss: 1.3590... Generator Loss: 0.7860 Epoch 1/1... Batch 3370... Discriminator Loss: 1.2984... Generator Loss: 0.7365 Epoch 1/1... Batch 3380... Discriminator Loss: 1.3231... Generator Loss: 0.9058 Epoch 1/1... Batch 3390... Discriminator Loss: 1.2917... Generator Loss: 0.8435 Epoch 1/1... Batch 3400... Discriminator Loss: 1.2712... Generator Loss: 0.8732 Epoch 1/1... Batch 3410... Discriminator Loss: 1.2184... Generator Loss: 0.9084 Epoch 1/1... Batch 3420... Discriminator Loss: 1.3361... Generator Loss: 0.8649 Epoch 1/1... Batch 3430... Discriminator Loss: 1.2314... Generator Loss: 0.8647 Epoch 1/1... Batch 3440... Discriminator Loss: 1.3229... Generator Loss: 0.7710 Epoch 1/1... Batch 3450... Discriminator Loss: 1.3640... Generator Loss: 0.7601 Epoch 1/1... Batch 3460... Discriminator Loss: 1.2722... Generator Loss: 0.8593 Epoch 1/1... Batch 3470... Discriminator Loss: 1.3355... Generator Loss: 0.8038 Epoch 1/1... Batch 3480... Discriminator Loss: 1.3809... Generator Loss: 0.7951 Epoch 1/1... Batch 3490... Discriminator Loss: 1.3439... Generator Loss: 0.8021 Epoch 1/1... Batch 3500... Discriminator Loss: 1.3409... Generator Loss: 0.8149 Epoch 1/1... Batch 3510... Discriminator Loss: 1.2773... Generator Loss: 0.7827 Epoch 1/1... Batch 3520... Discriminator Loss: 1.3282... Generator Loss: 0.8164 Epoch 1/1... Batch 3530... Discriminator Loss: 1.3193... Generator Loss: 0.8273 Epoch 1/1... Batch 3540... Discriminator Loss: 1.2965... Generator Loss: 0.8386 Epoch 1/1... Batch 3550... Discriminator Loss: 1.3552... Generator Loss: 0.7619 Epoch 1/1... Batch 3560... Discriminator Loss: 1.3685... Generator Loss: 0.7408 Epoch 1/1... Batch 3570... Discriminator Loss: 1.3477... Generator Loss: 0.7286 Epoch 1/1... Batch 3580... Discriminator Loss: 1.3254... Generator Loss: 0.7952 Epoch 1/1... Batch 3590... Discriminator Loss: 1.2705... Generator Loss: 0.9073 Epoch 1/1... Batch 3600... Discriminator Loss: 1.2291... Generator Loss: 0.7909 Epoch 1/1... Batch 3610... Discriminator Loss: 1.3415... Generator Loss: 0.7891 Epoch 1/1... Batch 3620... Discriminator Loss: 1.3242... Generator Loss: 0.8152 Epoch 1/1... Batch 3630... Discriminator Loss: 1.3095... Generator Loss: 0.8825 Epoch 1/1... Batch 3640... Discriminator Loss: 1.2908... Generator Loss: 0.8037 Epoch 1/1... Batch 3650... Discriminator Loss: 1.1980... Generator Loss: 0.8652 Epoch 1/1... Batch 3660... Discriminator Loss: 1.2996... Generator Loss: 0.8290 Epoch 1/1... Batch 3670... Discriminator Loss: 1.3239... Generator Loss: 0.8954 Epoch 1/1... Batch 3680... Discriminator Loss: 1.3265... Generator Loss: 0.8133 Epoch 1/1... Batch 3690... Discriminator Loss: 1.3589... Generator Loss: 0.8366 Epoch 1/1... Batch 3700... Discriminator Loss: 1.3285... Generator Loss: 0.7586 Epoch 1/1... Batch 3710... Discriminator Loss: 1.3426... Generator Loss: 0.7970 Epoch 1/1... Batch 3720... Discriminator Loss: 1.3014... Generator Loss: 0.8132 Epoch 1/1... Batch 3730... Discriminator Loss: 1.2428... Generator Loss: 0.8893 Epoch 1/1... Batch 3740... Discriminator Loss: 1.3326... Generator Loss: 0.8080 Epoch 1/1... Batch 3750... Discriminator Loss: 1.3782... Generator Loss: 0.7452 Epoch 1/1... Batch 3760... Discriminator Loss: 1.3101... Generator Loss: 0.8193 Epoch 1/1... Batch 3770... Discriminator Loss: 1.3348... Generator Loss: 0.8098 Epoch 1/1... Batch 3780... Discriminator Loss: 1.2942... Generator Loss: 0.8319 Epoch 1/1... Batch 3790... Discriminator Loss: 1.3768... Generator Loss: 0.8176 Epoch 1/1... Batch 3800... Discriminator Loss: 1.3896... Generator Loss: 0.7380 Epoch 1/1... Batch 3810... Discriminator Loss: 1.3274... Generator Loss: 0.8053 Epoch 1/1... Batch 3820... Discriminator Loss: 1.2823... Generator Loss: 0.8184 Epoch 1/1... Batch 3830... Discriminator Loss: 1.2471... Generator Loss: 0.8104 Epoch 1/1... Batch 3840... Discriminator Loss: 1.2882... Generator Loss: 0.8234 Epoch 1/1... Batch 3850... Discriminator Loss: 1.3539... Generator Loss: 0.8503 Epoch 1/1... Batch 3860... Discriminator Loss: 1.3514... Generator Loss: 0.7677 Epoch 1/1... Batch 3870... Discriminator Loss: 1.3691... Generator Loss: 0.7664 Epoch 1/1... Batch 3880... Discriminator Loss: 1.2723... Generator Loss: 0.8292 Epoch 1/1... Batch 3890... Discriminator Loss: 1.2938... Generator Loss: 0.8485 Epoch 1/1... Batch 3900... Discriminator Loss: 1.2657... Generator Loss: 0.8290 Epoch 1/1... Batch 3910... Discriminator Loss: 1.3379... Generator Loss: 0.8177 Epoch 1/1... Batch 3920... Discriminator Loss: 1.3608... Generator Loss: 0.7615 Epoch 1/1... Batch 3930... Discriminator Loss: 1.2909... Generator Loss: 0.8396 Epoch 1/1... Batch 3940... Discriminator Loss: 1.2430... Generator Loss: 0.8836 Epoch 1/1... Batch 3950... Discriminator Loss: 1.3357... Generator Loss: 0.7869 Epoch 1/1... Batch 3960... Discriminator Loss: 1.3905... Generator Loss: 0.7490 Epoch 1/1... Batch 3970... Discriminator Loss: 1.2970... Generator Loss: 0.8401 Epoch 1/1... Batch 3980... Discriminator Loss: 1.3955... Generator Loss: 0.8246 Epoch 1/1... Batch 3990... Discriminator Loss: 1.2858... Generator Loss: 0.8763 Epoch 1/1... Batch 4000... Discriminator Loss: 1.3529... Generator Loss: 0.7891 Epoch 1/1... Batch 4010... Discriminator Loss: 1.4170... Generator Loss: 0.7812 Epoch 1/1... Batch 4020... Discriminator Loss: 1.3103... Generator Loss: 0.8150 Epoch 1/1... Batch 4030... Discriminator Loss: 1.3286... Generator Loss: 0.8003 Epoch 1/1... Batch 4040... Discriminator Loss: 1.3047... Generator Loss: 0.8365 Epoch 1/1... Batch 4050... Discriminator Loss: 1.3102... Generator Loss: 0.8114 Epoch 1/1... Batch 4060... Discriminator Loss: 1.2617... Generator Loss: 0.8055 Epoch 1/1... Batch 4070... Discriminator Loss: 1.3449... Generator Loss: 0.7941 Epoch 1/1... Batch 4080... Discriminator Loss: 1.2300... Generator Loss: 0.8639 Epoch 1/1... Batch 4090... Discriminator Loss: 1.2184... Generator Loss: 0.8178 Epoch 1/1... Batch 4100... Discriminator Loss: 1.2310... Generator Loss: 0.8800 Epoch 1/1... Batch 4110... Discriminator Loss: 1.3564... Generator Loss: 0.8671 Epoch 1/1... Batch 4120... Discriminator Loss: 1.3549... Generator Loss: 0.7691 Epoch 1/1... Batch 4130... Discriminator Loss: 1.3613... Generator Loss: 0.7653 Epoch 1/1... Batch 4140... Discriminator Loss: 1.2941... Generator Loss: 0.8455 Epoch 1/1... Batch 4150... Discriminator Loss: 1.3126... Generator Loss: 0.9079 Epoch 1/1... Batch 4160... Discriminator Loss: 1.3377... Generator Loss: 0.7801 Epoch 1/1... Batch 4170... Discriminator Loss: 1.2799... Generator Loss: 0.8961 Epoch 1/1... Batch 4180... Discriminator Loss: 1.3762... Generator Loss: 0.7947 Epoch 1/1... Batch 4190... Discriminator Loss: 1.2743... Generator Loss: 0.8223 Epoch 1/1... Batch 4200... Discriminator Loss: 1.4002... Generator Loss: 0.7400 Epoch 1/1... Batch 4210... Discriminator Loss: 1.3046... Generator Loss: 0.7753 Epoch 1/1... Batch 4220... Discriminator Loss: 1.3160... Generator Loss: 0.7524 Epoch 1/1... Batch 4230... Discriminator Loss: 1.2531... Generator Loss: 0.8358 Epoch 1/1... Batch 4240... Discriminator Loss: 1.3581... Generator Loss: 0.8126 Epoch 1/1... Batch 4250... Discriminator Loss: 1.3100... Generator Loss: 0.8528 Epoch 1/1... Batch 4260... Discriminator Loss: 1.3058... Generator Loss: 0.8352 Epoch 1/1... Batch 4270... Discriminator Loss: 1.2798... Generator Loss: 0.8269 Epoch 1/1... Batch 4280... Discriminator Loss: 1.2786... Generator Loss: 0.8031 Epoch 1/1... Batch 4290... Discriminator Loss: 1.3932... Generator Loss: 0.7881 Epoch 1/1... Batch 4300... Discriminator Loss: 1.3067... Generator Loss: 0.8738 Epoch 1/1... Batch 4310... Discriminator Loss: 1.2686... Generator Loss: 0.8054 Epoch 1/1... Batch 4320... Discriminator Loss: 1.2720... Generator Loss: 0.8825 Epoch 1/1... Batch 4330... Discriminator Loss: 1.2665... Generator Loss: 0.9282 Epoch 1/1... Batch 4340... Discriminator Loss: 1.2414... Generator Loss: 0.8806 Epoch 1/1... Batch 4350... Discriminator Loss: 1.4383... Generator Loss: 0.7535 Epoch 1/1... Batch 4360... Discriminator Loss: 1.3076... Generator Loss: 0.8499 Epoch 1/1... Batch 4370... Discriminator Loss: 1.4077... Generator Loss: 0.7586 Epoch 1/1... Batch 4380... Discriminator Loss: 1.2816... Generator Loss: 0.7850 Epoch 1/1... Batch 4390... Discriminator Loss: 1.3159... Generator Loss: 0.8212 Epoch 1/1... Batch 4400... Discriminator Loss: 1.3342... Generator Loss: 0.8431 Epoch 1/1... Batch 4410... Discriminator Loss: 1.3371... Generator Loss: 0.8113 Epoch 1/1... Batch 4420... Discriminator Loss: 1.3655... Generator Loss: 0.7927 Epoch 1/1... Batch 4430... Discriminator Loss: 1.2952... Generator Loss: 0.7748 Epoch 1/1... Batch 4440... Discriminator Loss: 1.3367... Generator Loss: 0.8592 Epoch 1/1... Batch 4450... Discriminator Loss: 1.3337... Generator Loss: 0.7687 Epoch 1/1... Batch 4460... Discriminator Loss: 1.2751... Generator Loss: 0.8917 Epoch 1/1... Batch 4470... Discriminator Loss: 1.3085... Generator Loss: 0.7968 Epoch 1/1... Batch 4480... Discriminator Loss: 1.2881... Generator Loss: 0.8573 Epoch 1/1... Batch 4490... Discriminator Loss: 1.4326... Generator Loss: 0.7670 Epoch 1/1... Batch 4500... Discriminator Loss: 1.3825... Generator Loss: 0.7609 Epoch 1/1... Batch 4510... Discriminator Loss: 1.2894... Generator Loss: 0.8484 Epoch 1/1... Batch 4520... Discriminator Loss: 1.3021... Generator Loss: 0.8505 Epoch 1/1... Batch 4530... Discriminator Loss: 1.2849... Generator Loss: 0.8086 Epoch 1/1... Batch 4540... Discriminator Loss: 1.2771... Generator Loss: 0.8010 Epoch 1/1... Batch 4550... Discriminator Loss: 1.2811... Generator Loss: 0.8547 Epoch 1/1... Batch 4560... Discriminator Loss: 1.3396... Generator Loss: 0.8168 Epoch 1/1... Batch 4570... Discriminator Loss: 1.2975... Generator Loss: 0.8266 Epoch 1/1... Batch 4580... Discriminator Loss: 1.3142... Generator Loss: 0.8300 Epoch 1/1... Batch 4590... Discriminator Loss: 1.3294... Generator Loss: 0.8023 Epoch 1/1... Batch 4600... Discriminator Loss: 1.2443... Generator Loss: 0.8653 Epoch 1/1... Batch 4610... Discriminator Loss: 1.2628... Generator Loss: 0.8326 Epoch 1/1... Batch 4620... Discriminator Loss: 1.3692... Generator Loss: 0.8792 Epoch 1/1... Batch 4630... Discriminator Loss: 1.2902... Generator Loss: 0.8560 Epoch 1/1... Batch 4640... Discriminator Loss: 1.3932... Generator Loss: 0.8111 Epoch 1/1... Batch 4650... Discriminator Loss: 1.3283... Generator Loss: 0.8021 Epoch 1/1... Batch 4660... Discriminator Loss: 1.2426... Generator Loss: 0.8108 Epoch 1/1... Batch 4670... Discriminator Loss: 1.3419... Generator Loss: 0.7889 Epoch 1/1... Batch 4680... Discriminator Loss: 1.3336... Generator Loss: 0.8802 Epoch 1/1... Batch 4690... Discriminator Loss: 1.4898... Generator Loss: 0.7315 Epoch 1/1... Batch 4700... Discriminator Loss: 1.2889... Generator Loss: 0.8196 Epoch 1/1... Batch 4710... Discriminator Loss: 1.2783... Generator Loss: 0.8716 Epoch 1/1... Batch 4720... Discriminator Loss: 1.2672... Generator Loss: 0.8013 Epoch 1/1... Batch 4730... Discriminator Loss: 1.2786... Generator Loss: 0.8099 Epoch 1/1... Batch 4740... Discriminator Loss: 1.3510... Generator Loss: 0.8710 Epoch 1/1... Batch 4750... Discriminator Loss: 1.2683... Generator Loss: 0.8063 Epoch 1/1... Batch 4760... Discriminator Loss: 1.3469... Generator Loss: 0.7749 Epoch 1/1... Batch 4770... Discriminator Loss: 1.3882... Generator Loss: 0.7525 Epoch 1/1... Batch 4780... Discriminator Loss: 1.2547... Generator Loss: 0.8079 Epoch 1/1... Batch 4790... Discriminator Loss: 1.2679... Generator Loss: 0.7640 Epoch 1/1... Batch 4800... Discriminator Loss: 1.3050... Generator Loss: 0.7875 Epoch 1/1... Batch 4810... Discriminator Loss: 1.2812... Generator Loss: 0.8076 Epoch 1/1... Batch 4820... Discriminator Loss: 1.3955... Generator Loss: 0.7214 Epoch 1/1... Batch 4830... Discriminator Loss: 1.2530... Generator Loss: 0.8382 Epoch 1/1... Batch 4840... Discriminator Loss: 1.4249... Generator Loss: 0.7046 Epoch 1/1... Batch 4850... Discriminator Loss: 1.3317... Generator Loss: 0.8629 Epoch 1/1... Batch 4860... Discriminator Loss: 1.3185... Generator Loss: 0.7968 Epoch 1/1... Batch 4870... Discriminator Loss: 1.2795... Generator Loss: 0.8342 Epoch 1/1... Batch 4880... Discriminator Loss: 1.3066... Generator Loss: 0.7702 Epoch 1/1... Batch 4890... Discriminator Loss: 1.3028... Generator Loss: 0.8555 Epoch 1/1... Batch 4900... Discriminator Loss: 1.4136... Generator Loss: 0.8053 Epoch 1/1... Batch 4910... Discriminator Loss: 1.3422... Generator Loss: 0.8273 Epoch 1/1... Batch 4920... Discriminator Loss: 1.3285... Generator Loss: 0.8174 Epoch 1/1... Batch 4930... Discriminator Loss: 1.3329... Generator Loss: 0.8654 Epoch 1/1... Batch 4940... Discriminator Loss: 1.2712... Generator Loss: 0.8232 Epoch 1/1... Batch 4950... Discriminator Loss: 1.3622... Generator Loss: 0.8284 Epoch 1/1... Batch 4960... Discriminator Loss: 1.3010... Generator Loss: 0.8655 Epoch 1/1... Batch 4970... Discriminator Loss: 1.3434... Generator Loss: 0.8183 Epoch 1/1... Batch 4980... Discriminator Loss: 1.3286... Generator Loss: 0.8394 Epoch 1/1... Batch 4990... Discriminator Loss: 1.3694... Generator Loss: 0.7297 Epoch 1/1... Batch 5000... Discriminator Loss: 1.3579... Generator Loss: 0.7389 Epoch 1/1... Batch 5010... Discriminator Loss: 1.2931... Generator Loss: 0.8143 Epoch 1/1... Batch 5020... Discriminator Loss: 1.3720... Generator Loss: 0.7953 Epoch 1/1... Batch 5030... Discriminator Loss: 1.3592... Generator Loss: 0.7495 Epoch 1/1... Batch 5040... Discriminator Loss: 1.3033... Generator Loss: 0.8248 Epoch 1/1... Batch 5050... Discriminator Loss: 1.3155... Generator Loss: 0.7942 Epoch 1/1... Batch 5060... Discriminator Loss: 1.4277... Generator Loss: 0.7672 Epoch 1/1... Batch 5070... Discriminator Loss: 1.2471... Generator Loss: 0.8519 Epoch 1/1... Batch 5080... Discriminator Loss: 1.2884... Generator Loss: 0.8086 Epoch 1/1... Batch 5090... Discriminator Loss: 1.4163... Generator Loss: 0.8031 Epoch 1/1... Batch 5100... Discriminator Loss: 1.3056... Generator Loss: 0.7579 Epoch 1/1... Batch 5110... Discriminator Loss: 1.4004... Generator Loss: 0.7861 Epoch 1/1... Batch 5120... Discriminator Loss: 1.3525... Generator Loss: 0.7271 Epoch 1/1... Batch 5130... Discriminator Loss: 1.3151... Generator Loss: 0.8591 Epoch 1/1... Batch 5140... Discriminator Loss: 1.3548... Generator Loss: 0.8789 Epoch 1/1... Batch 5150... Discriminator Loss: 1.2994... Generator Loss: 0.8313 Epoch 1/1... Batch 5160... Discriminator Loss: 1.3001... Generator Loss: 0.8471 Epoch 1/1... Batch 5170... Discriminator Loss: 1.3916... Generator Loss: 0.7823 Epoch 1/1... Batch 5180... Discriminator Loss: 1.2965... Generator Loss: 0.8101 Epoch 1/1... Batch 5190... Discriminator Loss: 1.3385... Generator Loss: 0.7720 Epoch 1/1... Batch 5200... Discriminator Loss: 1.2931... Generator Loss: 0.7996 Epoch 1/1... Batch 5210... Discriminator Loss: 1.3912... Generator Loss: 0.7650 Epoch 1/1... Batch 5220... Discriminator Loss: 1.3143... Generator Loss: 0.8114 Epoch 1/1... Batch 5230... Discriminator Loss: 1.3636... Generator Loss: 0.8309 Epoch 1/1... Batch 5240... Discriminator Loss: 1.3117... Generator Loss: 0.7960 Epoch 1/1... Batch 5250... Discriminator Loss: 1.3172... Generator Loss: 0.8896 Epoch 1/1... Batch 5260... Discriminator Loss: 1.2934... Generator Loss: 0.7812 Epoch 1/1... Batch 5270... Discriminator Loss: 1.3503... Generator Loss: 0.8113 Epoch 1/1... Batch 5280... Discriminator Loss: 1.3331... Generator Loss: 0.8388 Epoch 1/1... Batch 5290... Discriminator Loss: 1.3293... Generator Loss: 0.7792 Epoch 1/1... Batch 5300... Discriminator Loss: 1.3105... Generator Loss: 0.8215 Epoch 1/1... Batch 5310... Discriminator Loss: 1.3783... Generator Loss: 0.8099 Epoch 1/1... Batch 5320... Discriminator Loss: 1.3120... Generator Loss: 0.7954 Epoch 1/1... Batch 5330... Discriminator Loss: 1.3131... Generator Loss: 0.8201 Epoch 1/1... Batch 5340... Discriminator Loss: 1.3457... Generator Loss: 0.8468 Epoch 1/1... Batch 5350... Discriminator Loss: 1.3018... Generator Loss: 0.8956 Epoch 1/1... Batch 5360... Discriminator Loss: 1.3404... Generator Loss: 0.8397 Epoch 1/1... Batch 5370... Discriminator Loss: 1.3293... Generator Loss: 0.7834 Epoch 1/1... Batch 5380... Discriminator Loss: 1.3534... Generator Loss: 0.7847 Epoch 1/1... Batch 5390... Discriminator Loss: 1.2718... Generator Loss: 0.8220 Epoch 1/1... Batch 5400... Discriminator Loss: 1.3758... Generator Loss: 0.8340 Epoch 1/1... Batch 5410... Discriminator Loss: 1.3026... Generator Loss: 0.8132 Epoch 1/1... Batch 5420... Discriminator Loss: 1.2829... Generator Loss: 0.8684 Epoch 1/1... Batch 5430... Discriminator Loss: 1.3299... Generator Loss: 0.7528 Epoch 1/1... Batch 5440... Discriminator Loss: 1.3757... Generator Loss: 0.7133 Epoch 1/1... Batch 5450... Discriminator Loss: 1.3801... Generator Loss: 0.7795 Epoch 1/1... Batch 5460... Discriminator Loss: 1.3484... Generator Loss: 0.8204 Epoch 1/1... Batch 5470... Discriminator Loss: 1.2706... Generator Loss: 0.7948 Epoch 1/1... Batch 5480... Discriminator Loss: 1.3762... Generator Loss: 0.8431 Epoch 1/1... Batch 5490... Discriminator Loss: 1.3252... Generator Loss: 0.8304 Epoch 1/1... Batch 5500... Discriminator Loss: 1.3369... Generator Loss: 0.7729 Epoch 1/1... Batch 5510... Discriminator Loss: 1.4130... Generator Loss: 0.7850 Epoch 1/1... Batch 5520... Discriminator Loss: 1.3532... Generator Loss: 0.7734 Epoch 1/1... Batch 5530... Discriminator Loss: 1.3917... Generator Loss: 0.8346 Epoch 1/1... Batch 5540... Discriminator Loss: 1.3131... Generator Loss: 0.8338 Epoch 1/1... Batch 5550... Discriminator Loss: 1.3492... Generator Loss: 0.7909 Epoch 1/1... Batch 5560... Discriminator Loss: 1.3527... Generator Loss: 0.7725 Epoch 1/1... Batch 5570... Discriminator Loss: 1.2277... Generator Loss: 0.9202 Epoch 1/1... Batch 5580... Discriminator Loss: 1.3408... Generator Loss: 0.7758 Epoch 1/1... Batch 5590... Discriminator Loss: 1.3723... Generator Loss: 0.8284 Epoch 1/1... Batch 5600... Discriminator Loss: 1.3419... Generator Loss: 0.8556 Epoch 1/1... Batch 5610... Discriminator Loss: 1.3395... Generator Loss: 0.8150 Epoch 1/1... Batch 5620... Discriminator Loss: 1.3994... Generator Loss: 0.7947 Epoch 1/1... Batch 5630... Discriminator Loss: 1.3185... Generator Loss: 0.7919 Epoch 1/1... Batch 5640... Discriminator Loss: 1.2763... Generator Loss: 0.7977 Epoch 1/1... Batch 5650... Discriminator Loss: 1.2532... Generator Loss: 0.8619 Epoch 1/1... Batch 5660... Discriminator Loss: 1.3280... Generator Loss: 0.8334 Epoch 1/1... Batch 5670... Discriminator Loss: 1.3137... Generator Loss: 0.8216 Epoch 1/1... Batch 5680... Discriminator Loss: 1.3308... Generator Loss: 0.7581 Epoch 1/1... Batch 5690... Discriminator Loss: 1.3349... Generator Loss: 0.8375 Epoch 1/1... Batch 5700... Discriminator Loss: 1.2810... Generator Loss: 0.8281 Epoch 1/1... Batch 5710... Discriminator Loss: 1.3527... Generator Loss: 0.8045 Epoch 1/1... Batch 5720... Discriminator Loss: 1.3274... Generator Loss: 0.7892 Epoch 1/1... Batch 5730... Discriminator Loss: 1.3928... Generator Loss: 0.7633 Epoch 1/1... Batch 5740... Discriminator Loss: 1.3577... Generator Loss: 0.7578 Epoch 1/1... Batch 5750... Discriminator Loss: 1.3330... Generator Loss: 0.7693 Epoch 1/1... Batch 5760... Discriminator Loss: 1.3158... Generator Loss: 0.8733 Epoch 1/1... Batch 5770... Discriminator Loss: 1.3807... Generator Loss: 0.7759 Epoch 1/1... Batch 5780... Discriminator Loss: 1.3689... Generator Loss: 0.8037 Epoch 1/1... Batch 5790... Discriminator Loss: 1.3303... Generator Loss: 0.7940 Epoch 1/1... Batch 5800... Discriminator Loss: 1.3786... Generator Loss: 0.8264 Epoch 1/1... Batch 5810... Discriminator Loss: 1.4830... Generator Loss: 0.7643 Epoch 1/1... Batch 5820... Discriminator Loss: 1.2637... Generator Loss: 0.8704 Epoch 1/1... Batch 5830... Discriminator Loss: 1.4025... Generator Loss: 0.7605 Epoch 1/1... Batch 5840... Discriminator Loss: 1.3078... Generator Loss: 0.8410 Epoch 1/1... Batch 5850... Discriminator Loss: 1.3142... Generator Loss: 0.7959 Epoch 1/1... Batch 5860... Discriminator Loss: 1.3680... Generator Loss: 0.8228 Epoch 1/1... Batch 5870... Discriminator Loss: 1.3091... Generator Loss: 0.7886 Epoch 1/1... Batch 5880... Discriminator Loss: 1.3858... Generator Loss: 0.7332 Epoch 1/1... Batch 5890... Discriminator Loss: 1.4162... Generator Loss: 0.7355 Epoch 1/1... Batch 5900... Discriminator Loss: 1.3403... Generator Loss: 0.7873 Epoch 1/1... Batch 5910... Discriminator Loss: 1.3423... Generator Loss: 0.8189 Epoch 1/1... Batch 5920... Discriminator Loss: 1.3084... Generator Loss: 0.8688 Epoch 1/1... Batch 5930... Discriminator Loss: 1.3679... Generator Loss: 0.7967 Epoch 1/1... Batch 5940... Discriminator Loss: 1.3655... Generator Loss: 0.7412 Epoch 1/1... Batch 5950... Discriminator Loss: 1.3869... Generator Loss: 0.7958 Epoch 1/1... Batch 5960... Discriminator Loss: 1.2983... Generator Loss: 0.8229 Epoch 1/1... Batch 5970... Discriminator Loss: 1.3505... Generator Loss: 0.7503 Epoch 1/1... Batch 5980... Discriminator Loss: 1.4133... Generator Loss: 0.7562 Epoch 1/1... Batch 5990... Discriminator Loss: 1.3111... Generator Loss: 0.8317 Epoch 1/1... Batch 6000... Discriminator Loss: 1.3121... Generator Loss: 0.7656 Epoch 1/1... Batch 6010... Discriminator Loss: 1.3509... Generator Loss: 0.8216 Epoch 1/1... Batch 6020... Discriminator Loss: 1.3577... Generator Loss: 0.8425 Epoch 1/1... Batch 6030... Discriminator Loss: 1.3097... Generator Loss: 0.8263 Epoch 1/1... Batch 6040... Discriminator Loss: 1.3628... Generator Loss: 0.8213 Epoch 1/1... Batch 6050... Discriminator Loss: 1.4178... Generator Loss: 0.7798 Epoch 1/1... Batch 6060... Discriminator Loss: 1.3381... Generator Loss: 0.7714 Epoch 1/1... Batch 6070... Discriminator Loss: 1.3002... Generator Loss: 0.9426 Epoch 1/1... Batch 6080... Discriminator Loss: 1.4101... Generator Loss: 0.7940 Epoch 1/1... Batch 6090... Discriminator Loss: 1.3257... Generator Loss: 0.7764 Epoch 1/1... Batch 6100... Discriminator Loss: 1.2809... Generator Loss: 0.8637 Epoch 1/1... Batch 6110... Discriminator Loss: 1.4133... Generator Loss: 0.8441 Epoch 1/1... Batch 6120... Discriminator Loss: 1.3348... Generator Loss: 0.8041 Epoch 1/1... Batch 6130... Discriminator Loss: 1.3513... Generator Loss: 0.7641 Epoch 1/1... Batch 6140... Discriminator Loss: 1.3314... Generator Loss: 0.8086 Epoch 1/1... Batch 6150... Discriminator Loss: 1.3151... Generator Loss: 0.8230 Epoch 1/1... Batch 6160... Discriminator Loss: 1.3487... Generator Loss: 0.8011 Epoch 1/1... Batch 6170... Discriminator Loss: 1.3268... Generator Loss: 0.8102 Epoch 1/1... Batch 6180... Discriminator Loss: 1.3856... Generator Loss: 0.7406 Epoch 1/1... Batch 6190... Discriminator Loss: 1.2937... Generator Loss: 0.8339 Epoch 1/1... Batch 6200... Discriminator Loss: 1.3867... Generator Loss: 0.7794 Epoch 1/1... Batch 6210... Discriminator Loss: 1.3403... Generator Loss: 0.8104 Epoch 1/1... Batch 6220... Discriminator Loss: 1.3504... Generator Loss: 0.8417 Epoch 1/1... Batch 6230... Discriminator Loss: 1.3556... Generator Loss: 0.8188 Epoch 1/1... Batch 6240... Discriminator Loss: 1.3525... Generator Loss: 0.8092 Epoch 1/1... Batch 6250... Discriminator Loss: 1.2981... Generator Loss: 0.8710 Epoch 1/1... Batch 6260... Discriminator Loss: 1.3105... Generator Loss: 0.7984 Epoch 1/1... Batch 6270... Discriminator Loss: 1.3825... Generator Loss: 0.8008 Epoch 1/1... Batch 6280... Discriminator Loss: 1.2986... Generator Loss: 0.7929 Epoch 1/1... Batch 6290... Discriminator Loss: 1.3711... Generator Loss: 0.7805 Epoch 1/1... Batch 6300... Discriminator Loss: 1.3232... Generator Loss: 0.8297 Epoch 1/1... Batch 6310... Discriminator Loss: 1.3037... Generator Loss: 0.8260 Epoch 1/1... Batch 6320... Discriminator Loss: 1.3527... Generator Loss: 0.7256 Epoch 1/1... Batch 6330... Discriminator Loss: 1.3105... Generator Loss: 0.8234提交项目提交本项目前，确保运行所有 cells 后保存该文件。 保存该文件为 “dlnd_face_generation.ipynb”， 并另存为 HTML 格式 “File” -&gt; “Download as”。提交项目时请附带 “helper.py” 和 “problem_unittests.py” 文件。]]></content>
      <categories>
        <category>Deep learning</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Dog classification]]></title>
    <url>%2F2019%2F06%2F26%2F1%2F</url>
    <content type="text"><![CDATA[卷积神经网络（Convolutional Neural Network, CNN）项目：实现一个狗品种识别算法App在这个notebook文件中，有些模板代码已经提供给你，但你还需要实现更多的功能来完成这个项目。除非有明确要求，你无须修改任何已给出的代码。以‘(练习)’开始的标题表示接下来的代码部分中有你需要实现的功能。这些部分都配有详细的指导，需要实现的部分也会在注释中以’TODO’标出。请仔细阅读所有的提示。 除了实现代码外，你还需要回答一些与项目及代码相关的问题。每个需要回答的问题都会以 ‘问题 X’ 标记。请仔细阅读每个问题，并且在问题后的 ‘回答’ 部分写出完整的答案。我们将根据 你对问题的回答 和 撰写代码实现的功能 来对你提交的项目进行评分。 提示：Code 和 Markdown 区域可通过 Shift + Enter 快捷键运行。此外，Markdown可以通过双击进入编辑模式。 项目中显示为_选做_的部分可以帮助你的项目脱颖而出，而不是仅仅达到通过的最低要求。如果你决定追求更高的挑战，请在此 notebook 中完成_选做_部分的代码。 让我们开始吧在这个notebook中，你将迈出第一步，来开发可以作为移动端或 Web应用程序一部分的算法。在这个项目的最后，你的程序将能够把用户提供的任何一个图像作为输入。如果可以从图像中检测到一只狗，它会输出对狗品种的预测。如果图像中是一个人脸，它会预测一个与其最相似的狗的种类。下面这张图展示了完成项目后可能的输出结果。（……实际上我们希望每个学生的输出结果不相同！） 在现实世界中，你需要拼凑一系列的模型来完成不同的任务；举个例子，用来预测狗种类的算法会与预测人类的算法不同。在做项目的过程中，你可能会遇到不少失败的预测，因为并不存在完美的算法和模型。你最终提交的不完美的解决方案也一定会给你带来一个有趣的学习经验！ 项目内容我们将这个notebook分为不同的步骤，你可以使用下面的链接来浏览此notebook。 Step 0: 导入数据集 Step 1: 检测人脸 Step 2: 检测狗狗 Step 3: 从头创建一个CNN来分类狗品种 Step 4: 使用一个CNN来区分狗的品种(使用迁移学习) Step 5: 建立一个CNN来分类狗的品种（使用迁移学习） Step 6: 完成你的算法 Step 7: 测试你的算法 在该项目中包含了如下的问题： 问题 1 问题 2 问题 3 问题 4 问题 5 问题 6 问题 7 问题 8 问题 9 问题 10 问题 11 步骤 0: 导入数据集导入狗数据集在下方的代码单元（cell）中，我们导入了一个狗图像的数据集。我们使用 scikit-learn 库中的 load_files 函数来获取一些变量： train_files, valid_files, test_files - 包含图像的文件路径的numpy数组 train_targets, valid_targets, test_targets - 包含独热编码分类标签的numpy数组 dog_names - 由字符串构成的与标签相对应的狗的种类 1234567891011121314151617181920212223242526from sklearn.datasets import load_files from keras.utils import np_utilsimport numpy as npfrom glob import glob# 定义函数来加载train，test和validation数据集def load_dataset(path): data = load_files(path) dog_files = np.array(data['filenames']) dog_targets = np_utils.to_categorical(np.array(data['target']), 133) return dog_files, dog_targets# 加载train，test和validation数据集train_files, train_targets = load_dataset('dogImages/train')valid_files, valid_targets = load_dataset('dogImages/valid')test_files, test_targets = load_dataset('dogImages/test')# 加载狗品种列表dog_names = [item[20:-1] for item in sorted(glob("dogImages/train/*/"))]# 打印数据统计描述print('There are %d total dog categories.' % len(dog_names))print('There are %s total dog images.\n' % len(np.hstack([train_files, valid_files, test_files])))print('There are %d training dog images.' % len(train_files))print('There are %d validation dog images.' % len(valid_files))print('There are %d test dog images.'% len(test_files)) Using TensorFlow backend. There are 133 total dog categories. There are 8351 total dog images. There are 6680 training dog images. There are 835 validation dog images. There are 836 test dog images.导入人脸数据集在下方的代码单元中，我们导入人脸图像数据集，文件所在路径存储在名为 human_files 的 numpy 数组。 123456789import randomrandom.seed(8675309)# 加载打乱后的人脸数据集的文件名human_files = np.array(glob("lfw/*/*"))random.shuffle(human_files)# 打印数据集的数据量print('There are %d total human images.' % len(human_files)) There are 13233 total human images. 步骤1：检测人脸我们将使用 OpenCV 中的 Haar feature-based cascade classifiers 来检测图像中的人脸。OpenCV 提供了很多预训练的人脸检测模型，它们以XML文件保存在 github。我们已经下载了其中一个检测模型，并且把它存储在 haarcascades 的目录中。 在如下代码单元中，我们将演示如何使用这个检测模型在样本图像中找到人脸。 123456789101112131415161718192021222324252627282930import cv2 import matplotlib.pyplot as plt %matplotlib inline # 提取预训练的人脸检测模型face_cascade = cv2.CascadeClassifier('haarcascades/haarcascade_frontalface_alt.xml')# 加载彩色（通道顺序为BGR）图像img = cv2.imread(human_files[3])# 将BGR图像进行灰度处理gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)# 在图像中找出脸faces = face_cascade.detectMultiScale(gray)# 打印图像中检测到的脸的个数print('Number of faces detected:', len(faces))# 获取每一个所检测到的脸的识别框for (x,y,w,h) in faces: # 在人脸图像中绘制出识别框 cv2.rectangle(img,(x,y),(x+w,y+h),(255,0,0),2) # 将BGR图像转变为RGB图像以打印cv_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)# 展示含有识别框的图像plt.imshow(cv_rgb)plt.show() Number of faces detected: 1 在使用任何一个检测模型之前，将图像转换为灰度图是常用过程。detectMultiScale 函数使用储存在 face_cascade 中的的数据，对输入的灰度图像进行分类。 在上方的代码中，faces 以 numpy 数组的形式，保存了识别到的面部信息。它其中每一行表示一个被检测到的脸，该数据包括如下四个信息：前两个元素 x、y 代表识别框左上角的 x 和 y 坐标（参照上图，注意 y 坐标的方向和我们默认的方向不同）；后两个元素代表识别框在 x 和 y 轴两个方向延伸的长度 w 和 d。 写一个人脸识别器我们可以将这个程序封装为一个函数。该函数的输入为人脸图像的路径，当图像中包含人脸时，该函数返回 True，反之返回 False。该函数定义如下所示。 123456# 如果img_path路径表示的图像检测到了脸，返回"True" def face_detector(img_path): img = cv2.imread(img_path) gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) faces = face_cascade.detectMultiScale(gray) return len(faces) &gt; 0 【练习】 评估人脸检测模型 问题 1:在下方的代码块中，使用 face_detector 函数，计算： human_files 的前100张图像中，能够检测到人脸的图像占比多少？ dog_files 的前100张图像中，能够检测到人脸的图像占比多少？ 理想情况下，人图像中检测到人脸的概率应当为100%，而狗图像中检测到人脸的概率应该为0%。你会发现我们的算法并非完美，但结果仍然是可以接受的。我们从每个数据集中提取前100个图像的文件路径，并将它们存储在human_files_short和dog_files_short中。 12345678910111213human_files_short = human_files[:100]dog_files_short = train_files[:100]## 请不要修改上方代码## TODO: 基于human_files_short和dog_files_short## 中的图像测试face_detector的表现face_result = np.vectorize(face_detector)human_face_result = face_result(human_files_short)dog_face_result = face_result(dog_files_short)print("human_files的前一百张图像中，能够检测到的人脸图像比例：%.4f%%" %(float(sum(human_face_result)/len(human_files_short))*100))print("dog_files的前一百张图像中，能够检测到的人脸图像比例：%.4f%%" %(float(sum(dog_face_result)/len(dog_files_short))*100)) human_files的前一百张图像中，能够检测到的人脸图像比例：99.0000% dog_files的前一百张图像中，能够检测到的人脸图像比例：11.0000% 问题 2:就算法而言，该算法成功与否的关键在于，用户能否提供含有清晰面部特征的人脸图像。那么你认为，这样的要求在实际使用中对用户合理吗？如果你觉得不合理，你能否想到一个方法，即使图像中并没有清晰的面部特征，也能够检测到人脸？ 回答: 不合理，有些时候一个的脸部没有完全出现在图片中，将会没有清晰的面部特征 使用卷积神经网络，通过训练好的网络提取特征，然后用作分类 选做：我们建议在你的算法中使用opencv的人脸检测模型去检测人类图像，不过你可以自由地探索其他的方法，尤其是尝试使用深度学习来解决它:)。请用下方的代码单元来设计和测试你的面部监测算法。如果你决定完成这个_选做_任务，你需要报告算法在每一个数据集上的表现。 12## (选做) TODO: 报告另一个面部检测算法在LFW数据集上的表现### 你可以随意使用所需的代码单元数 步骤 2: 检测狗狗在这个部分中，我们使用预训练的 ResNet-50 模型去检测图像中的狗。下方的第一行代码就是下载了 ResNet-50 模型的网络结构参数，以及基于 ImageNet 数据集的预训练权重。 ImageNet 这目前一个非常流行的数据集，常被用来测试图像分类等计算机视觉任务相关的算法。它包含超过一千万个 URL，每一个都链接到 1000 categories 中所对应的一个物体的图像。任给输入一个图像，该 ResNet-50 模型会返回一个对图像中物体的预测结果。 1234from keras.applications.resnet50 import ResNet50# 定义ResNet50模型ResNet50_model = ResNet50(weights='imagenet') 数据预处理 在使用 TensorFlow 作为后端的时候，在 Keras 中，CNN 的输入是一个4维数组（也被称作4维张量），它的各维度尺寸为 (nb_samples, rows, columns, channels)。其中 nb_samples 表示图像（或者样本）的总数，rows, columns, 和 channels 分别表示图像的行数、列数和通道数。 下方的 path_to_tensor 函数实现如下将彩色图像的字符串型的文件路径作为输入，返回一个4维张量，作为 Keras CNN 输入。因为我们的输入图像是彩色图像，因此它们具有三个通道（ channels 为 3）。 该函数首先读取一张图像，然后将其缩放为 224×224 的图像。 随后，该图像被调整为具有4个维度的张量。 对于任一输入图像，最后返回的张量的维度是：(1, 224, 224, 3)。 paths_to_tensor 函数将图像路径的字符串组成的 numpy 数组作为输入，并返回一个4维张量，各维度尺寸为 (nb_samples, 224, 224, 3)。 在这里，nb_samples是提供的图像路径的数据中的样本数量或图像数量。你也可以将 nb_samples 理解为数据集中3维张量的个数（每个3维张量表示一个不同的图像。 1234567891011121314from keras.preprocessing import image from tqdm import tqdmdef path_to_tensor(img_path): # 用PIL加载RGB图像为PIL.Image.Image类型 img = image.load_img(img_path, target_size=(224, 224)) # 将PIL.Image.Image类型转化为格式为(224, 224, 3)的3维张量 x = image.img_to_array(img) # 将3维张量转化为格式为(1, 224, 224, 3)的4维张量并返回 return np.expand_dims(x, axis=0)def paths_to_tensor(img_paths): list_of_tensors = [path_to_tensor(img_path) for img_path in tqdm(img_paths)] return np.vstack(list_of_tensors) 基于 ResNet-50 架构进行预测对于通过上述步骤得到的四维张量，在把它们输入到 ResNet-50 网络、或 Keras 中其他类似的预训练模型之前，还需要进行一些额外的处理： 首先，这些图像的通道顺序为 RGB，我们需要重排他们的通道顺序为 BGR。 其次，预训练模型的输入都进行了额外的归一化过程。因此我们在这里也要对这些张量进行归一化，即对所有图像所有像素都减去像素均值 [103.939, 116.779, 123.68]（以 RGB 模式表示，根据所有的 ImageNet 图像算出）。 导入的 preprocess_input 函数实现了这些功能。如果你对此很感兴趣，可以在 这里 查看 preprocess_input的代码。 在实现了图像处理的部分之后，我们就可以使用模型来进行预测。这一步通过 predict 方法来实现，它返回一个向量，向量的第 i 个元素表示该图像属于第 i 个 ImageNet 类别的概率。这通过如下的 ResNet50_predict_labels 函数实现。 通过对预测出的向量取用 argmax 函数（找到有最大概率值的下标序号），我们可以得到一个整数，即模型预测到的物体的类别。进而根据这个 清单，我们能够知道这具体是哪个品种的狗狗。 12345from keras.applications.resnet50 import preprocess_input, decode_predictionsdef ResNet50_predict_labels(img_path): # 返回img_path路径的图像的预测向量 img = preprocess_input(path_to_tensor(img_path)) return np.argmax(ResNet50_model.predict(img)) 完成狗检测模型在研究该 清单 的时候，你会注意到，狗类别对应的序号为151-268。因此，在检查预训练模型判断图像是否包含狗的时候，我们只需要检查如上的 ResNet50_predict_labels 函数是否返回一个介于151和268之间（包含区间端点）的值。 我们通过这些想法来完成下方的 dog_detector 函数，如果从图像中检测到狗就返回 True，否则返回 False。 123def dog_detector(img_path): prediction = ResNet50_predict_labels(img_path) return ((prediction &lt;= 268) &amp; (prediction &gt;= 151)) 【作业】评估狗狗检测模型 问题 3:在下方的代码块中，使用 dog_detector 函数，计算： human_files_short中图像检测到狗狗的百分比？ dog_files_short中图像检测到狗狗的百分比？ 1234567### TODO: 测试dog_detector函数在human_files_short和dog_files_short的表现dog_result = np.vectorize(dog_detector)human_picture_result = dog_result(human_files_short)dog_picture_result = dog_result(dog_files_short)print("human_files的前一百张图像中，能够检测到的狗狗比例：%.4f%%" %(float(sum(human_picture_result)/len(human_files_short))*100))print("dog_files的前一百张图像中，能够检测到的狗狗比例：%.4f%%" %(float(sum(dog_picture_result)/len(dog_files_short))*100)) human_files的前一百张图像中，能够检测到的狗狗比例：1.0000% dog_files的前一百张图像中，能够检测到的狗狗比例：100.0000% 步骤 3: 从头开始创建一个CNN来分类狗品种现在我们已经实现了一个函数，能够在图像中识别人类及狗狗。但我们需要更进一步的方法，来对狗的类别进行识别。在这一步中，你需要实现一个卷积神经网络来对狗的品种进行分类。你需要从头实现你的卷积神经网络（在这一阶段，你还不能使用迁移学习），并且你需要达到超过1%的测试集准确率。在本项目的步骤五种，你还有机会使用迁移学习来实现一个准确率大大提高的模型。 在添加卷积层的时候，注意不要加上太多的（可训练的）层。更多的参数意味着更长的训练时间，也就是说你更可能需要一个 GPU 来加速训练过程。万幸的是，Keras 提供了能够轻松预测每次迭代（epoch）花费时间所需的函数。你可以据此推断你算法所需的训练时间。 值得注意的是，对狗的图像进行分类是一项极具挑战性的任务。因为即便是一个正常人，也很难区分布列塔尼犬和威尔士史宾格犬。 布列塔尼犬（Brittany） 威尔士史宾格犬（Welsh Springer Spaniel） 不难发现其他的狗品种会有很小的类间差别（比如金毛寻回犬和美国水猎犬）。 金毛寻回犬（Curly-Coated Retriever） 美国水猎犬（American Water Spaniel） 同样，拉布拉多犬（labradors）有黄色、棕色和黑色这三种。那么你设计的基于视觉的算法将不得不克服这种较高的类间差别，以达到能够将这些不同颜色的同类狗分到同一个品种中。 黄色拉布拉多犬（Yellow Labrador） | 棕色拉布拉多犬（Chocolate Labrador） | 黑色拉布拉多犬（Black Labrador） | - | | 我们也提到了随机分类将得到一个非常低的结果：不考虑品种略有失衡的影响，随机猜测到正确品种的概率是1/133，相对应的准确率是低于1%的。 请记住，在深度学习领域，实践远远高于理论。大量尝试不同的框架吧，相信你的直觉！当然，玩得开心！ 数据预处理通过对每张图像的像素值除以255，我们对图像实现了归一化处理。 1234567from PIL import ImageFile ImageFile.LOAD_TRUNCATED_IMAGES = True # Keras中的数据预处理过程train_tensors = paths_to_tensor(train_files).astype('float32')/255valid_tensors = paths_to_tensor(valid_files).astype('float32')/255test_tensors = paths_to_tensor(test_files).astype('float32')/255 100%|████████████████████████████████████████████████████| 6680/6680 [00:58&lt;00:00, 114.97it/s] 100%|██████████████████████████████████████████████████████| 835/835 [00:06&lt;00:00, 121.39it/s] 100%|██████████████████████████████████████████████████████| 836/836 [00:06&lt;00:00, 124.04it/s]【练习】模型架构创建一个卷积神经网络来对狗品种进行分类。在你代码块的最后，执行 model.summary() 来输出你模型的总结信息。 我们已经帮你导入了一些所需的 Python 库，如有需要你可以自行导入。如果你在过程中遇到了困难，如下是给你的一点小提示——该模型能够在5个 epoch 内取得超过1%的测试准确率，并且能在CPU上很快地训练。 问题 4:在下方的代码块中尝试使用 Keras 搭建卷积网络的架构，并回答相关的问题。 你可以尝试自己搭建一个卷积网络的模型，那么你需要回答你搭建卷积网络的具体步骤（用了哪些层）以及为什么这样搭建。 你也可以根据上图提示的步骤搭建卷积网络，那么请说明为何如上的架构能够在该问题上取得很好的表现。 回答:CNN通过卷积层提取特征，多次进行卷积操作有利于提取中更多特征用于图像分类。通过池化层减少自由参数个数，防止过拟合。 1234567891011121314151617from keras.layers import Conv2D, MaxPooling2D, GlobalAveragePooling2Dfrom keras.layers import Dropout, Flatten, Densefrom keras.models import Sequentialmodel = Sequential()### TODO: 定义你的网络架构model.add(Conv2D(16,(2,2),input_shape=(224,224,3),activation='relu'))model.add(MaxPooling2D(pool_size=(3,3),strides=2))model.add(Conv2D(32,(2,2),activation='relu'))model.add(MaxPooling2D(pool_size=(2,2),strides=2))model.add(Conv2D(64,(2,2),activation='relu'))model.add(MaxPooling2D(pool_size=(2,2),strides=2))model.add(GlobalAveragePooling2D())model.add(Dense(units=133,activation='softmax'))model.summary() _________________________________________________________________ Layer (type) Output Shape Param # ================================================================= conv2d_1 (Conv2D) (None, 223, 223, 16) 208 _________________________________________________________________ max_pooling2d_2 (MaxPooling2 (None, 111, 111, 16) 0 _________________________________________________________________ conv2d_2 (Conv2D) (None, 110, 110, 32) 2080 _________________________________________________________________ max_pooling2d_3 (MaxPooling2 (None, 55, 55, 32) 0 _________________________________________________________________ conv2d_3 (Conv2D) (None, 54, 54, 64) 8256 _________________________________________________________________ max_pooling2d_4 (MaxPooling2 (None, 27, 27, 64) 0 _________________________________________________________________ global_average_pooling2d_1 ( (None, 64) 0 _________________________________________________________________ dense_1 (Dense) (None, 133) 8645 ================================================================= Total params: 19,189.0 Trainable params: 19,189.0 Non-trainable params: 0.0 _________________________________________________________________12## 编译模型model.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=['accuracy']) 【练习】训练模型 问题 5:在下方代码单元训练模型。使用模型检查点（model checkpointing）来储存具有最低验证集 loss 的模型。 可选题：你也可以对训练集进行 数据增强，来优化模型的表现。 123456789101112from keras.callbacks import ModelCheckpoint ### TODO: 设置训练模型的epochs的数量### 不要修改下方代码checkpointer = ModelCheckpoint(filepath='saved_models/weights.best.from_scratch.hdf5', verbose=1, save_best_only=True)model.fit(train_tensors, train_targets, validation_data=(valid_tensors, valid_targets), epochs=10, batch_size=20, callbacks=[checkpointer], verbose=1) Epoch 10/10 4300/6680 [==================&gt;...........] - ETA: 32s - loss: 4.5941 - acc: 0.0000e+ - ETA: 32s - loss: 4.8016 - acc: 0.0250 - ETA: 33s - loss: 4.6996 - acc: 0.01 - ETA: 33s - loss: 4.6529 - acc: 0.02 - ETA: 33s - loss: 4.6433 - acc: 0.02 - ETA: 33s - loss: 4.6076 - acc: 0.03 - ETA: 33s - loss: 4.5948 - acc: 0.03 - ETA: 33s - loss: 4.6082 - acc: 0.03 - ETA: 33s - loss: 4.6435 - acc: 0.03 - ETA: 32s - loss: 4.6236 - acc: 0.05 - ETA: 32s - loss: 4.6158 - acc: 0.05 - ETA: 32s - loss: 4.6118 - acc: 0.04 - ETA: 32s - loss: 4.6143 - acc: 0.04 - ETA: 32s - loss: 4.6104 - acc: 0.05 - ETA: 32s - loss: 4.6083 - acc: 0.05 - ETA: 32s - loss: 4.6032 - acc: 0.05 - ETA: 32s - loss: 4.6133 - acc: 0.04 - ETA: 32s - loss: 4.6168 - acc: 0.04 - ETA: 31s - loss: 4.6158 - acc: 0.04 - ETA: 31s - loss: 4.6243 - acc: 0.04 - ETA: 31s - loss: 4.6153 - acc: 0.04 - ETA: 31s - loss: 4.6246 - acc: 0.04 - ETA: 31s - loss: 4.6294 - acc: 0.03 - ETA: 31s - loss: 4.6262 - acc: 0.03 - ETA: 31s - loss: 4.6243 - acc: 0.04 - ETA: 31s - loss: 4.6161 - acc: 0.04 - ETA: 31s - loss: 4.6216 - acc: 0.04 - ETA: 30s - loss: 4.6182 - acc: 0.03 - ETA: 30s - loss: 4.6204 - acc: 0.04 - ETA: 30s - loss: 4.6030 - acc: 0.04 - ETA: 30s - loss: 4.6033 - acc: 0.04 - ETA: 30s - loss: 4.6030 - acc: 0.04 - ETA: 30s - loss: 4.6053 - acc: 0.04 - ETA: 30s - loss: 4.6087 - acc: 0.04 - ETA: 30s - loss: 4.6058 - acc: 0.04 - ETA: 30s - loss: 4.6020 - acc: 0.04 - ETA: 29s - loss: 4.6069 - acc: 0.04 - ETA: 29s - loss: 4.6077 - acc: 0.04 - ETA: 29s - loss: 4.6077 - acc: 0.04 - ETA: 29s - loss: 4.6111 - acc: 0.04 - ETA: 29s - loss: 4.6117 - acc: 0.04 - ETA: 29s - loss: 4.6150 - acc: 0.04 - ETA: 29s - loss: 4.6100 - acc: 0.04 - ETA: 29s - loss: 4.6069 - acc: 0.04 - ETA: 29s - loss: 4.6028 - acc: 0.04 - ETA: 29s - loss: 4.6028 - acc: 0.04 - ETA: 28s - loss: 4.5995 - acc: 0.04 - ETA: 28s - loss: 4.5973 - acc: 0.04 - ETA: 28s - loss: 4.6025 - acc: 0.04 - ETA: 28s - loss: 4.6043 - acc: 0.04 - ETA: 28s - loss: 4.6039 - acc: 0.04 - ETA: 28s - loss: 4.6089 - acc: 0.03 - ETA: 28s - loss: 4.6080 - acc: 0.03 - ETA: 28s - loss: 4.6122 - acc: 0.03 - ETA: 28s - loss: 4.6118 - acc: 0.03 - ETA: 28s - loss: 4.6159 - acc: 0.03 - ETA: 27s - loss: 4.6145 - acc: 0.03 - ETA: 27s - loss: 4.6111 - acc: 0.03 - ETA: 27s - loss: 4.6153 - acc: 0.03 - ETA: 27s - loss: 4.6127 - acc: 0.04 - ETA: 27s - loss: 4.6111 - acc: 0.04 - ETA: 27s - loss: 4.6154 - acc: 0.04 - ETA: 27s - loss: 4.6140 - acc: 0.04 - ETA: 27s - loss: 4.6151 - acc: 0.04 - ETA: 27s - loss: 4.6142 - acc: 0.04 - ETA: 27s - loss: 4.6135 - acc: 0.04 - ETA: 26s - loss: 4.6137 - acc: 0.04 - ETA: 26s - loss: 4.6134 - acc: 0.04 - ETA: 26s - loss: 4.6183 - acc: 0.04 - ETA: 26s - loss: 4.6151 - acc: 0.04 - ETA: 26s - loss: 4.6136 - acc: 0.04 - ETA: 26s - loss: 4.6132 - acc: 0.04 - ETA: 26s - loss: 4.6172 - acc: 0.04 - ETA: 26s - loss: 4.6199 - acc: 0.04 - ETA: 26s - loss: 4.6203 - acc: 0.04 - ETA: 26s - loss: 4.6199 - acc: 0.04 - ETA: 25s - loss: 4.6206 - acc: 0.04 - ETA: 25s - loss: 4.6182 - acc: 0.04 - ETA: 25s - loss: 4.6187 - acc: 0.04 - ETA: 25s - loss: 4.6200 - acc: 0.04 - ETA: 25s - loss: 4.6179 - acc: 0.04 - ETA: 25s - loss: 4.6206 - acc: 0.04 - ETA: 25s - loss: 4.6220 - acc: 0.04 - ETA: 25s - loss: 4.6253 - acc: 0.04 - ETA: 25s - loss: 4.6235 - acc: 0.04 - ETA: 25s - loss: 4.6234 - acc: 0.04 - ETA: 24s - loss: 4.6215 - acc: 0.04 - ETA: 24s - loss: 4.6221 - acc: 0.04 - ETA: 24s - loss: 4.6228 - acc: 0.04 - ETA: 24s - loss: 4.6247 - acc: 0.04 - ETA: 24s - loss: 4.6221 - acc: 0.04 - ETA: 24s - loss: 4.6212 - acc: 0.04 - ETA: 24s - loss: 4.6216 - acc: 0.03 - ETA: 24s - loss: 4.6196 - acc: 0.03 - ETA: 24s - loss: 4.6202 - acc: 0.03 - ETA: 24s - loss: 4.6200 - acc: 0.03 - ETA: 23s - loss: 4.6203 - acc: 0.03 - ETA: 23s - loss: 4.6197 - acc: 0.03 - ETA: 23s - loss: 4.6199 - acc: 0.03 - ETA: 23s - loss: 4.6218 - acc: 0.03 - ETA: 23s - loss: 4.6226 - acc: 0.03 - ETA: 23s - loss: 4.6259 - acc: 0.03 - ETA: 23s - loss: 4.6235 - acc: 0.03 - ETA: 23s - loss: 4.6249 - acc: 0.03 - ETA: 23s - loss: 4.6228 - acc: 0.03 - ETA: 23s - loss: 4.6235 - acc: 0.03 - ETA: 22s - loss: 4.6215 - acc: 0.03 - ETA: 22s - loss: 4.6226 - acc: 0.03 - ETA: 22s - loss: 4.6228 - acc: 0.03 - ETA: 22s - loss: 4.6237 - acc: 0.03 - ETA: 22s - loss: 4.6243 - acc: 0.03 - ETA: 22s - loss: 4.6235 - acc: 0.03 - ETA: 22s - loss: 4.6205 - acc: 0.03 - ETA: 22s - loss: 4.6202 - acc: 0.03 - ETA: 22s - loss: 4.6215 - acc: 0.03 - ETA: 22s - loss: 4.6212 - acc: 0.03 - ETA: 21s - loss: 4.6216 - acc: 0.03 - ETA: 21s - loss: 4.6224 - acc: 0.03 - ETA: 21s - loss: 4.6233 - acc: 0.03 - ETA: 21s - loss: 4.6222 - acc: 0.03 - ETA: 21s - loss: 4.6212 - acc: 0.03 - ETA: 21s - loss: 4.6208 - acc: 0.03 - ETA: 21s - loss: 4.6208 - acc: 0.03 - ETA: 21s - loss: 4.6213 - acc: 0.03 - ETA: 21s - loss: 4.6216 - acc: 0.03 - ETA: 20s - loss: 4.6228 - acc: 0.03 - ETA: 20s - loss: 4.6235 - acc: 0.03 - ETA: 20s - loss: 4.6229 - acc: 0.03 - ETA: 20s - loss: 4.6225 - acc: 0.03 - ETA: 20s - loss: 4.6247 - acc: 0.03 - ETA: 20s - loss: 4.6229 - acc: 0.03 - ETA: 20s - loss: 4.6244 - acc: 0.03 - ETA: 20s - loss: 4.6236 - acc: 0.03 - ETA: 20s - loss: 4.6239 - acc: 0.03 - ETA: 20s - loss: 4.6235 - acc: 0.03 - ETA: 19s - loss: 4.6243 - acc: 0.03 - ETA: 19s - loss: 4.6253 - acc: 0.03 - ETA: 19s - loss: 4.6235 - acc: 0.03 - ETA: 19s - loss: 4.6217 - acc: 0.03 - ETA: 19s - loss: 4.6237 - acc: 0.03 - ETA: 19s - loss: 4.6230 - acc: 0.03 - ETA: 19s - loss: 4.6219 - acc: 0.03 - ETA: 19s - loss: 4.6241 - acc: 0.03 - ETA: 19s - loss: 4.6238 - acc: 0.03 - ETA: 19s - loss: 4.6238 - acc: 0.03 - ETA: 18s - loss: 4.6240 - acc: 0.03 - ETA: 18s - loss: 4.6229 - acc: 0.03 - ETA: 18s - loss: 4.6239 - acc: 0.03 - ETA: 18s - loss: 4.6247 - acc: 0.03 - ETA: 18s - loss: 4.6235 - acc: 0.03 - ETA: 18s - loss: 4.6229 - acc: 0.03 - ETA: 18s - loss: 4.6228 - acc: 0.03 - ETA: 18s - loss: 4.6202 - acc: 0.03 - ETA: 18s - loss: 4.6206 - acc: 0.03 - ETA: 18s - loss: 4.6200 - acc: 0.03 - ETA: 17s - loss: 4.6187 - acc: 0.03 - ETA: 17s - loss: 4.6174 - acc: 0.03 - ETA: 17s - loss: 4.6184 - acc: 0.03 - ETA: 17s - loss: 4.6186 - acc: 0.03 - ETA: 17s - loss: 4.6188 - acc: 0.03 - ETA: 17s - loss: 4.6187 - acc: 0.03 - ETA: 17s - loss: 4.6191 - acc: 0.03 - ETA: 17s - loss: 4.6190 - acc: 0.03 - ETA: 17s - loss: 4.6163 - acc: 0.03 - ETA: 17s - loss: 4.6172 - acc: 0.03 - ETA: 16s - loss: 4.6175 - acc: 0.03 - ETA: 16s - loss: 4.6180 - acc: 0.03 - ETA: 16s - loss: 4.6174 - acc: 0.03 - ETA: 16s - loss: 4.6173 - acc: 0.03 - ETA: 16s - loss: 4.6163 - acc: 0.03 - ETA: 16s - loss: 4.6156 - acc: 0.03 - ETA: 16s - loss: 4.6147 - acc: 0.03 - ETA: 16s - loss: 4.6129 - acc: 0.03 - ETA: 16s - loss: 4.6135 - acc: 0.03 - ETA: 16s - loss: 4.6136 - acc: 0.03 - ETA: 15s - loss: 4.6131 - acc: 0.03 - ETA: 15s - loss: 4.6137 - acc: 0.03 - ETA: 15s - loss: 4.6137 - acc: 0.03 - ETA: 15s - loss: 4.6134 - acc: 0.03 - ETA: 15s - loss: 4.6142 - acc: 0.03 - ETA: 15s - loss: 4.6131 - acc: 0.03 - ETA: 15s - loss: 4.6133 - acc: 0.03 - ETA: 15s - loss: 4.6120 - acc: 0.03 - ETA: 15s - loss: 4.6119 - acc: 0.03 - ETA: 15s - loss: 4.6120 - acc: 0.03 - ETA: 14s - loss: 4.6121 - acc: 0.03 - ETA: 14s - loss: 4.6125 - acc: 0.03 - ETA: 14s - loss: 4.6130 - acc: 0.03 - ETA: 14s - loss: 4.6125 - acc: 0.03 - ETA: 14s - loss: 4.6121 - acc: 0.03 - ETA: 14s - loss: 4.6123 - acc: 0.03 - ETA: 14s - loss: 4.6124 - acc: 0.03 - ETA: 14s - loss: 4.6137 - acc: 0.03 - ETA: 14s - loss: 4.6144 - acc: 0.03 - ETA: 14s - loss: 4.6163 - acc: 0.03 - ETA: 13s - loss: 4.6164 - acc: 0.03 - ETA: 13s - loss: 4.6161 - acc: 0.03 - ETA: 13s - loss: 4.6166 - acc: 0.03 - ETA: 13s - loss: 4.6158 - acc: 0.03 - ETA: 13s - loss: 4.6147 - acc: 0.03 - ETA: 13s - loss: 4.6148 - acc: 0.03 - ETA: 13s - loss: 4.6155 - acc: 0.03 - ETA: 13s - loss: 4.6157 - acc: 0.03 - ETA: 13s - loss: 4.6159 - acc: 0.03 - ETA: 13s - loss: 4.6146 - acc: 0.03 - ETA: 12s - loss: 4.6140 - acc: 0.03 - ETA: 12s - loss: 4.6147 - acc: 0.03 - ETA: 12s - loss: 4.6146 - acc: 0.03 - ETA: 12s - loss: 4.6154 - acc: 0.03 - ETA: 12s - loss: 4.6159 - acc: 0.03 - ETA: 12s - loss: 4.6177 - acc: 0.03 - ETA: 12s - loss: 4.6176 - acc: 0.03 - ETA: 12s - loss: 4.6184 - acc: 0.03 - ETA: 12s - loss: 4.6190 - acc: 0.03 - ETA: 11s - loss: 4.6197 - acc: 0.03676660/6680 [============================&gt;.] - ETA: 11s - loss: 4.6189 - acc: 0.03 - ETA: 11s - loss: 4.6198 - acc: 0.03 - ETA: 11s - loss: 4.6201 - acc: 0.03 - ETA: 11s - loss: 4.6198 - acc: 0.03 - ETA: 11s - loss: 4.6198 - acc: 0.03 - ETA: 11s - loss: 4.6198 - acc: 0.03 - ETA: 11s - loss: 4.6187 - acc: 0.03 - ETA: 11s - loss: 4.6182 - acc: 0.03 - ETA: 11s - loss: 4.6180 - acc: 0.03 - ETA: 10s - loss: 4.6180 - acc: 0.03 - ETA: 10s - loss: 4.6189 - acc: 0.03 - ETA: 10s - loss: 4.6186 - acc: 0.03 - ETA: 10s - loss: 4.6182 - acc: 0.03 - ETA: 10s - loss: 4.6178 - acc: 0.03 - ETA: 10s - loss: 4.6183 - acc: 0.03 - ETA: 10s - loss: 4.6177 - acc: 0.03 - ETA: 10s - loss: 4.6172 - acc: 0.03 - ETA: 10s - loss: 4.6158 - acc: 0.03 - ETA: 10s - loss: 4.6161 - acc: 0.03 - ETA: 9s - loss: 4.6157 - acc: 0.0366 - ETA: 9s - loss: 4.6157 - acc: 0.036 - ETA: 9s - loss: 4.6159 - acc: 0.037 - ETA: 9s - loss: 4.6150 - acc: 0.037 - ETA: 9s - loss: 4.6144 - acc: 0.037 - ETA: 9s - loss: 4.6138 - acc: 0.037 - ETA: 9s - loss: 4.6142 - acc: 0.037 - ETA: 9s - loss: 4.6145 - acc: 0.037 - ETA: 9s - loss: 4.6141 - acc: 0.037 - ETA: 9s - loss: 4.6143 - acc: 0.037 - ETA: 8s - loss: 4.6147 - acc: 0.037 - ETA: 8s - loss: 4.6140 - acc: 0.037 - ETA: 8s - loss: 4.6135 - acc: 0.037 - ETA: 8s - loss: 4.6129 - acc: 0.037 - ETA: 8s - loss: 4.6132 - acc: 0.037 - ETA: 8s - loss: 4.6138 - acc: 0.037 - ETA: 8s - loss: 4.6135 - acc: 0.037 - ETA: 8s - loss: 4.6134 - acc: 0.037 - ETA: 8s - loss: 4.6140 - acc: 0.037 - ETA: 8s - loss: 4.6142 - acc: 0.037 - ETA: 7s - loss: 4.6144 - acc: 0.037 - ETA: 7s - loss: 4.6145 - acc: 0.036 - ETA: 7s - loss: 4.6142 - acc: 0.036 - ETA: 7s - loss: 4.6149 - acc: 0.037 - ETA: 7s - loss: 4.6142 - acc: 0.036 - ETA: 7s - loss: 4.6138 - acc: 0.036 - ETA: 7s - loss: 4.6148 - acc: 0.036 - ETA: 7s - loss: 4.6139 - acc: 0.037 - ETA: 7s - loss: 4.6137 - acc: 0.036 - ETA: 7s - loss: 4.6142 - acc: 0.037 - ETA: 6s - loss: 4.6130 - acc: 0.037 - ETA: 6s - loss: 4.6122 - acc: 0.037 - ETA: 6s - loss: 4.6122 - acc: 0.037 - ETA: 6s - loss: 4.6126 - acc: 0.037 - ETA: 6s - loss: 4.6122 - acc: 0.037 - ETA: 6s - loss: 4.6130 - acc: 0.037 - ETA: 6s - loss: 4.6122 - acc: 0.037 - ETA: 6s - loss: 4.6118 - acc: 0.037 - ETA: 6s - loss: 4.6113 - acc: 0.037 - ETA: 6s - loss: 4.6131 - acc: 0.037 - ETA: 5s - loss: 4.6134 - acc: 0.037 - ETA: 5s - loss: 4.6135 - acc: 0.037 - ETA: 5s - loss: 4.6137 - acc: 0.037 - ETA: 5s - loss: 4.6133 - acc: 0.037 - ETA: 5s - loss: 4.6123 - acc: 0.037 - ETA: 5s - loss: 4.6126 - acc: 0.037 - ETA: 5s - loss: 4.6129 - acc: 0.037 - ETA: 5s - loss: 4.6133 - acc: 0.037 - ETA: 5s - loss: 4.6132 - acc: 0.037 - ETA: 5s - loss: 4.6131 - acc: 0.037 - ETA: 4s - loss: 4.6135 - acc: 0.037 - ETA: 4s - loss: 4.6133 - acc: 0.037 - ETA: 4s - loss: 4.6133 - acc: 0.036 - ETA: 4s - loss: 4.6136 - acc: 0.037 - ETA: 4s - loss: 4.6132 - acc: 0.037 - ETA: 4s - loss: 4.6132 - acc: 0.037 - ETA: 4s - loss: 4.6125 - acc: 0.037 - ETA: 4s - loss: 4.6131 - acc: 0.037 - ETA: 4s - loss: 4.6131 - acc: 0.037 - ETA: 4s - loss: 4.6130 - acc: 0.037 - ETA: 3s - loss: 4.6137 - acc: 0.037 - ETA: 3s - loss: 4.6133 - acc: 0.037 - ETA: 3s - loss: 4.6143 - acc: 0.037 - ETA: 3s - loss: 4.6132 - acc: 0.037 - ETA: 3s - loss: 4.6136 - acc: 0.037 - ETA: 3s - loss: 4.6140 - acc: 0.037 - ETA: 3s - loss: 4.6144 - acc: 0.036 - ETA: 3s - loss: 4.6150 - acc: 0.036 - ETA: 3s - loss: 4.6149 - acc: 0.037 - ETA: 3s - loss: 4.6149 - acc: 0.037 - ETA: 2s - loss: 4.6151 - acc: 0.037 - ETA: 2s - loss: 4.6154 - acc: 0.036 - ETA: 2s - loss: 4.6155 - acc: 0.036 - ETA: 2s - loss: 4.6149 - acc: 0.036 - ETA: 2s - loss: 4.6144 - acc: 0.036 - ETA: 2s - loss: 4.6134 - acc: 0.036 - ETA: 2s - loss: 4.6136 - acc: 0.037 - ETA: 2s - loss: 4.6138 - acc: 0.037 - ETA: 2s - loss: 4.6129 - acc: 0.037 - ETA: 2s - loss: 4.6133 - acc: 0.037 - ETA: 1s - loss: 4.6144 - acc: 0.037 - ETA: 1s - loss: 4.6150 - acc: 0.037 - ETA: 1s - loss: 4.6150 - acc: 0.037 - ETA: 1s - loss: 4.6150 - acc: 0.037 - ETA: 1s - loss: 4.6148 - acc: 0.037 - ETA: 1s - loss: 4.6153 - acc: 0.038 - ETA: 1s - loss: 4.6152 - acc: 0.038 - ETA: 1s - loss: 4.6154 - acc: 0.038 - ETA: 1s - loss: 4.6149 - acc: 0.038 - ETA: 1s - loss: 4.6143 - acc: 0.038 - ETA: 0s - loss: 4.6137 - acc: 0.038 - ETA: 0s - loss: 4.6145 - acc: 0.038 - ETA: 0s - loss: 4.6153 - acc: 0.038 - ETA: 0s - loss: 4.6155 - acc: 0.038 - ETA: 0s - loss: 4.6158 - acc: 0.038 - ETA: 0s - loss: 4.6161 - acc: 0.037 - ETA: 0s - loss: 4.6157 - acc: 0.037 - ETA: 0s - loss: 4.6154 - acc: 0.037 - ETA: 0s - loss: 4.6160 - acc: 0.0377Epoch 00009: val_loss improved from 4.70605 to 4.68202, saving model to saved_models/weights.best.from_scratch.hdf5 6680/6680 [==============================] - 35s - loss: 4.6163 - acc: 0.0376 - val_loss: 4.6820 - val_acc: 0.0359 &lt;keras.callbacks.History at 0x1dc30b06908&gt;123## 加载具有最好验证loss的模型model.load_weights('saved_models/weights.best.from_scratch.hdf5') 测试模型在狗图像的测试数据集上试用你的模型。确保测试准确率大于1%。 123456# 获取测试数据集中每一个图像所预测的狗品种的indexdog_breed_predictions = [np.argmax(model.predict(np.expand_dims(tensor, axis=0))) for tensor in test_tensors]# 报告测试准确率test_accuracy = 100*np.sum(np.array(dog_breed_predictions)==np.argmax(test_targets, axis=1))/len(dog_breed_predictions)print('Test accuracy: %.4f%%' % test_accuracy) Test accuracy: 2.8708% 步骤 4: 使用一个CNN来区分狗的品种使用 迁移学习（Transfer Learning）的方法，能帮助我们在不损失准确率的情况下大大减少训练时间。在以下步骤中，你可以尝试使用迁移学习来训练你自己的CNN。 得到从图像中提取的特征向量（Bottleneck Features）1234bottleneck_features = np.load('bottleneck_features/DogVGG16Data.npz')train_VGG16 = bottleneck_features['train']valid_VGG16 = bottleneck_features['valid']test_VGG16 = bottleneck_features['test'] 模型架构该模型使用预训练的 VGG-16 模型作为固定的图像特征提取器，其中 VGG-16 最后一层卷积层的输出被直接输入到我们的模型。我们只需要添加一个全局平均池化层以及一个全连接层，其中全连接层使用 softmax 激活函数，对每一个狗的种类都包含一个节点。 12345VGG16_model = Sequential()VGG16_model.add(GlobalAveragePooling2D(input_shape=train_VGG16.shape[1:]))VGG16_model.add(Dense(133, activation='softmax'))VGG16_model.summary() _________________________________________________________________ Layer (type) Output Shape Param # ================================================================= global_average_pooling2d_2 ( (None, 512) 0 _________________________________________________________________ dense_2 (Dense) (None, 133) 68229 ================================================================= Total params: 68,229.0 Trainable params: 68,229.0 Non-trainable params: 0.0 _________________________________________________________________123## 编译模型VGG16_model.compile(loss='categorical_crossentropy', optimizer='rmsprop', metrics=['accuracy']) 12345678## 训练模型checkpointer = ModelCheckpoint(filepath='saved_models/weights.best.VGG16.hdf5', verbose=1, save_best_only=True)VGG16_model.fit(train_VGG16, train_targets, validation_data=(valid_VGG16, valid_targets), epochs=20, batch_size=20, callbacks=[checkpointer], verbose=1) Train on 6680 samples, validate on 835 samples Epoch 1/20 6560/6680 [============================&gt;.] - ETA: 116s - loss: 14.5417 - acc: 0.0000e+ - ETA: 14s - loss: 15.1006 - acc: 0.0111 - ETA: 8s - loss: 14.7703 - acc: 0.014 - ETA: 6s - loss: 14.8021 - acc: 0.01 - ETA: 5s - loss: 14.5485 - acc: 0.02 - ETA: 4s - loss: 14.4764 - acc: 0.02 - ETA: 4s - loss: 14.3825 - acc: 0.02 - ETA: 3s - loss: 14.2818 - acc: 0.03 - ETA: 3s - loss: 14.1786 - acc: 0.03 - ETA: 3s - loss: 14.1721 - acc: 0.03 - ETA: 2s - loss: 14.0742 - acc: 0.03 - ETA: 2s - loss: 14.0336 - acc: 0.04 - ETA: 2s - loss: 13.9145 - acc: 0.04 - ETA: 2s - loss: 13.8753 - acc: 0.04 - ETA: 2s - loss: 13.8026 - acc: 0.04 - ETA: 2s - loss: 13.7170 - acc: 0.05 - ETA: 1s - loss: 13.6609 - acc: 0.05 - ETA: 1s - loss: 13.6038 - acc: 0.05 - ETA: 1s - loss: 13.5152 - acc: 0.06 - ETA: 1s - loss: 13.4061 - acc: 0.06 - ETA: 1s - loss: 13.3569 - acc: 0.06 - ETA: 1s - loss: 13.2835 - acc: 0.06 - ETA: 1s - loss: 13.1807 - acc: 0.07 - ETA: 1s - loss: 13.1386 - acc: 0.07 - ETA: 1s - loss: 13.1219 - acc: 0.07 - ETA: 1s - loss: 13.0601 - acc: 0.08 - ETA: 1s - loss: 13.0323 - acc: 0.08 - ETA: 0s - loss: 13.0134 - acc: 0.08 - ETA: 0s - loss: 12.9677 - acc: 0.08 - ETA: 0s - loss: 12.8962 - acc: 0.08 - ETA: 0s - loss: 12.8907 - acc: 0.08 - ETA: 0s - loss: 12.8406 - acc: 0.09 - ETA: 0s - loss: 12.7948 - acc: 0.09 - ETA: 0s - loss: 12.7807 - acc: 0.09 - ETA: 0s - loss: 12.7363 - acc: 0.09 - ETA: 0s - loss: 12.7031 - acc: 0.10 - ETA: 0s - loss: 12.6948 - acc: 0.10 - ETA: 0s - loss: 12.6566 - acc: 0.10 - ETA: 0s - loss: 12.6318 - acc: 0.10 - ETA: 0s - loss: 12.5984 - acc: 0.10 - ETA: 0s - loss: 12.6081 - acc: 0.10 - ETA: 0s - loss: 12.5765 - acc: 0.1082Epoch 00000: val_loss improved from inf to 11.21598, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 12.5515 - acc: 0.1100 - val_loss: 11.2160 - val_acc: 0.1916 Epoch 2/20 6540/6680 [============================&gt;.] - ETA: 2s - loss: 10.7310 - acc: 0.25 - ETA: 2s - loss: 10.6853 - acc: 0.23 - ETA: 2s - loss: 10.5496 - acc: 0.24 - ETA: 2s - loss: 10.7041 - acc: 0.23 - ETA: 2s - loss: 10.5462 - acc: 0.23 - ETA: 2s - loss: 10.6823 - acc: 0.23 - ETA: 2s - loss: 10.5500 - acc: 0.24 - ETA: 1s - loss: 10.6576 - acc: 0.23 - ETA: 1s - loss: 10.6291 - acc: 0.23 - ETA: 1s - loss: 10.6166 - acc: 0.23 - ETA: 1s - loss: 10.6002 - acc: 0.24 - ETA: 1s - loss: 10.6196 - acc: 0.24 - ETA: 1s - loss: 10.5935 - acc: 0.24 - ETA: 1s - loss: 10.5174 - acc: 0.24 - ETA: 1s - loss: 10.5965 - acc: 0.24 - ETA: 1s - loss: 10.6440 - acc: 0.24 - ETA: 1s - loss: 10.6391 - acc: 0.24 - ETA: 1s - loss: 10.6920 - acc: 0.24 - ETA: 1s - loss: 10.6834 - acc: 0.24 - ETA: 1s - loss: 10.7207 - acc: 0.23 - ETA: 1s - loss: 10.7492 - acc: 0.23 - ETA: 1s - loss: 10.7824 - acc: 0.23 - ETA: 1s - loss: 10.7770 - acc: 0.23 - ETA: 1s - loss: 10.7792 - acc: 0.23 - ETA: 0s - loss: 10.7738 - acc: 0.23 - ETA: 0s - loss: 10.8192 - acc: 0.23 - ETA: 0s - loss: 10.7941 - acc: 0.24 - ETA: 0s - loss: 10.7601 - acc: 0.24 - ETA: 0s - loss: 10.7438 - acc: 0.24 - ETA: 0s - loss: 10.7570 - acc: 0.24 - ETA: 0s - loss: 10.7552 - acc: 0.24 - ETA: 0s - loss: 10.7436 - acc: 0.24 - ETA: 0s - loss: 10.7302 - acc: 0.24 - ETA: 0s - loss: 10.7407 - acc: 0.25 - ETA: 0s - loss: 10.7300 - acc: 0.25 - ETA: 0s - loss: 10.7171 - acc: 0.25 - ETA: 0s - loss: 10.7196 - acc: 0.25 - ETA: 0s - loss: 10.7204 - acc: 0.25 - ETA: 0s - loss: 10.7209 - acc: 0.25 - ETA: 0s - loss: 10.7071 - acc: 0.25 - ETA: 0s - loss: 10.7207 - acc: 0.25 - ETA: 0s - loss: 10.7138 - acc: 0.2540Epoch 00001: val_loss improved from 11.21598 to 10.71026, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 10.7049 - acc: 0.2549 - val_loss: 10.7103 - val_acc: 0.2551 Epoch 3/20 6640/6680 [============================&gt;.] - ETA: 2s - loss: 8.3306 - acc: 0.400 - ETA: 2s - loss: 9.5591 - acc: 0.355 - ETA: 2s - loss: 9.9084 - acc: 0.344 - ETA: 2s - loss: 9.9087 - acc: 0.342 - ETA: 2s - loss: 9.7852 - acc: 0.340 - ETA: 1s - loss: 9.9821 - acc: 0.329 - ETA: 1s - loss: 10.1898 - acc: 0.32 - ETA: 1s - loss: 10.2557 - acc: 0.32 - ETA: 1s - loss: 10.3741 - acc: 0.31 - ETA: 1s - loss: 10.2817 - acc: 0.31 - ETA: 1s - loss: 10.1927 - acc: 0.32 - ETA: 1s - loss: 10.2258 - acc: 0.31 - ETA: 1s - loss: 10.2107 - acc: 0.31 - ETA: 1s - loss: 10.2017 - acc: 0.31 - ETA: 1s - loss: 10.2660 - acc: 0.31 - ETA: 1s - loss: 10.2499 - acc: 0.31 - ETA: 1s - loss: 10.2902 - acc: 0.31 - ETA: 1s - loss: 10.2158 - acc: 0.31 - ETA: 1s - loss: 10.2441 - acc: 0.31 - ETA: 1s - loss: 10.2311 - acc: 0.31 - ETA: 1s - loss: 10.1910 - acc: 0.32 - ETA: 1s - loss: 10.2102 - acc: 0.32 - ETA: 1s - loss: 10.2734 - acc: 0.31 - ETA: 1s - loss: 10.2956 - acc: 0.31 - ETA: 0s - loss: 10.3169 - acc: 0.31 - ETA: 0s - loss: 10.2765 - acc: 0.31 - ETA: 0s - loss: 10.2649 - acc: 0.31 - ETA: 0s - loss: 10.2587 - acc: 0.31 - ETA: 0s - loss: 10.2953 - acc: 0.31 - ETA: 0s - loss: 10.2908 - acc: 0.31 - ETA: 0s - loss: 10.3031 - acc: 0.31 - ETA: 0s - loss: 10.3427 - acc: 0.31 - ETA: 0s - loss: 10.3412 - acc: 0.31 - ETA: 0s - loss: 10.3345 - acc: 0.31 - ETA: 0s - loss: 10.3498 - acc: 0.31 - ETA: 0s - loss: 10.3587 - acc: 0.31 - ETA: 0s - loss: 10.3654 - acc: 0.31 - ETA: 0s - loss: 10.3756 - acc: 0.31 - ETA: 0s - loss: 10.3815 - acc: 0.31 - ETA: 0s - loss: 10.3772 - acc: 0.31 - ETA: 0s - loss: 10.3855 - acc: 0.31 - ETA: 0s - loss: 10.3961 - acc: 0.30 - ETA: 0s - loss: 10.3994 - acc: 0.3090Epoch 00002: val_loss improved from 10.71026 to 10.52035, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 10.3930 - acc: 0.3094 - val_loss: 10.5204 - val_acc: 0.2814 Epoch 4/20 6620/6680 [============================&gt;.] - ETA: 2s - loss: 12.1513 - acc: 0.25 - ETA: 2s - loss: 10.5722 - acc: 0.30 - ETA: 2s - loss: 10.3198 - acc: 0.32 - ETA: 2s - loss: 10.2740 - acc: 0.32 - ETA: 2s - loss: 10.5196 - acc: 0.31 - ETA: 2s - loss: 10.6302 - acc: 0.30 - ETA: 1s - loss: 10.5214 - acc: 0.31 - ETA: 1s - loss: 10.3773 - acc: 0.32 - ETA: 1s - loss: 10.4181 - acc: 0.31 - ETA: 1s - loss: 10.4782 - acc: 0.31 - ETA: 1s - loss: 10.3883 - acc: 0.32 - ETA: 1s - loss: 10.4552 - acc: 0.31 - ETA: 1s - loss: 10.4043 - acc: 0.31 - ETA: 1s - loss: 10.3756 - acc: 0.32 - ETA: 1s - loss: 10.3837 - acc: 0.31 - ETA: 1s - loss: 10.2869 - acc: 0.32 - ETA: 1s - loss: 10.2071 - acc: 0.32 - ETA: 1s - loss: 10.1680 - acc: 0.32 - ETA: 1s - loss: 10.1948 - acc: 0.32 - ETA: 1s - loss: 10.1984 - acc: 0.32 - ETA: 1s - loss: 10.2322 - acc: 0.32 - ETA: 1s - loss: 10.2297 - acc: 0.32 - ETA: 1s - loss: 10.2108 - acc: 0.32 - ETA: 1s - loss: 10.2262 - acc: 0.32 - ETA: 0s - loss: 10.2504 - acc: 0.32 - ETA: 0s - loss: 10.2396 - acc: 0.32 - ETA: 0s - loss: 10.1915 - acc: 0.32 - ETA: 0s - loss: 10.1368 - acc: 0.32 - ETA: 0s - loss: 10.1178 - acc: 0.33 - ETA: 0s - loss: 10.1015 - acc: 0.33 - ETA: 0s - loss: 10.1230 - acc: 0.32 - ETA: 0s - loss: 10.1191 - acc: 0.32 - ETA: 0s - loss: 10.1214 - acc: 0.33 - ETA: 0s - loss: 10.1248 - acc: 0.32 - ETA: 0s - loss: 10.1419 - acc: 0.32 - ETA: 0s - loss: 10.1500 - acc: 0.32 - ETA: 0s - loss: 10.1506 - acc: 0.32 - ETA: 0s - loss: 10.1703 - acc: 0.32 - ETA: 0s - loss: 10.1612 - acc: 0.32 - ETA: 0s - loss: 10.1603 - acc: 0.32 - ETA: 0s - loss: 10.1654 - acc: 0.32 - ETA: 0s - loss: 10.1520 - acc: 0.32 - ETA: 0s - loss: 10.1396 - acc: 0.3299Epoch 00003: val_loss improved from 10.52035 to 10.28915, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 10.1364 - acc: 0.3302 - val_loss: 10.2892 - val_acc: 0.2958 Epoch 5/20 6520/6680 [============================&gt;.] - ETA: 2s - loss: 9.0330 - acc: 0.400 - ETA: 2s - loss: 9.8361 - acc: 0.368 - ETA: 2s - loss: 10.1016 - acc: 0.35 - ETA: 2s - loss: 10.2052 - acc: 0.35 - ETA: 2s - loss: 10.0266 - acc: 0.35 - ETA: 2s - loss: 10.1128 - acc: 0.35 - ETA: 1s - loss: 10.0588 - acc: 0.35 - ETA: 1s - loss: 10.0062 - acc: 0.35 - ETA: 1s - loss: 10.0939 - acc: 0.34 - ETA: 1s - loss: 10.0726 - acc: 0.35 - ETA: 1s - loss: 10.0495 - acc: 0.35 - ETA: 1s - loss: 10.0237 - acc: 0.35 - ETA: 1s - loss: 10.0468 - acc: 0.35 - ETA: 1s - loss: 10.0030 - acc: 0.35 - ETA: 1s - loss: 10.0347 - acc: 0.35 - ETA: 1s - loss: 10.0181 - acc: 0.35 - ETA: 1s - loss: 10.0012 - acc: 0.35 - ETA: 1s - loss: 9.9640 - acc: 0.3596 - ETA: 1s - loss: 9.9974 - acc: 0.358 - ETA: 1s - loss: 9.9807 - acc: 0.358 - ETA: 1s - loss: 9.9265 - acc: 0.362 - ETA: 1s - loss: 9.9095 - acc: 0.361 - ETA: 1s - loss: 9.9650 - acc: 0.358 - ETA: 1s - loss: 9.9806 - acc: 0.357 - ETA: 0s - loss: 9.9740 - acc: 0.357 - ETA: 0s - loss: 9.9268 - acc: 0.360 - ETA: 0s - loss: 9.9340 - acc: 0.359 - ETA: 0s - loss: 9.9712 - acc: 0.357 - ETA: 0s - loss: 9.9885 - acc: 0.355 - ETA: 0s - loss: 9.9714 - acc: 0.356 - ETA: 0s - loss: 9.9559 - acc: 0.356 - ETA: 0s - loss: 9.9626 - acc: 0.355 - ETA: 0s - loss: 9.9425 - acc: 0.357 - ETA: 0s - loss: 9.9349 - acc: 0.357 - ETA: 0s - loss: 9.9427 - acc: 0.355 - ETA: 0s - loss: 9.9346 - acc: 0.356 - ETA: 0s - loss: 9.9228 - acc: 0.356 - ETA: 0s - loss: 9.9058 - acc: 0.357 - ETA: 0s - loss: 9.9059 - acc: 0.356 - ETA: 0s - loss: 9.9292 - acc: 0.354 - ETA: 0s - loss: 9.9275 - acc: 0.354 - ETA: 0s - loss: 9.9343 - acc: 0.3541Epoch 00004: val_loss improved from 10.28915 to 10.07849, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 9.9519 - acc: 0.3533 - val_loss: 10.0785 - val_acc: 0.3078 Epoch 6/20 6520/6680 [============================&gt;.] - ETA: 2s - loss: 8.3866 - acc: 0.450 - ETA: 2s - loss: 10.0937 - acc: 0.34 - ETA: 2s - loss: 9.7600 - acc: 0.3750 - ETA: 2s - loss: 9.6629 - acc: 0.383 - ETA: 2s - loss: 9.8101 - acc: 0.372 - ETA: 2s - loss: 9.9438 - acc: 0.362 - ETA: 2s - loss: 9.8382 - acc: 0.367 - ETA: 1s - loss: 9.7850 - acc: 0.369 - ETA: 1s - loss: 9.6892 - acc: 0.373 - ETA: 1s - loss: 9.6896 - acc: 0.373 - ETA: 1s - loss: 9.6129 - acc: 0.375 - ETA: 1s - loss: 9.6462 - acc: 0.374 - ETA: 1s - loss: 9.6811 - acc: 0.370 - ETA: 1s - loss: 9.7033 - acc: 0.369 - ETA: 1s - loss: 9.6609 - acc: 0.373 - ETA: 1s - loss: 9.6695 - acc: 0.374 - ETA: 1s - loss: 9.6721 - acc: 0.372 - ETA: 1s - loss: 9.6931 - acc: 0.369 - ETA: 1s - loss: 9.6691 - acc: 0.371 - ETA: 1s - loss: 9.6663 - acc: 0.370 - ETA: 1s - loss: 9.6511 - acc: 0.370 - ETA: 1s - loss: 9.6628 - acc: 0.369 - ETA: 1s - loss: 9.7172 - acc: 0.364 - ETA: 1s - loss: 9.6802 - acc: 0.366 - ETA: 0s - loss: 9.6693 - acc: 0.366 - ETA: 0s - loss: 9.6647 - acc: 0.365 - ETA: 0s - loss: 9.6719 - acc: 0.365 - ETA: 0s - loss: 9.6586 - acc: 0.366 - ETA: 0s - loss: 9.6321 - acc: 0.367 - ETA: 0s - loss: 9.6236 - acc: 0.367 - ETA: 0s - loss: 9.6241 - acc: 0.367 - ETA: 0s - loss: 9.6307 - acc: 0.366 - ETA: 0s - loss: 9.6084 - acc: 0.367 - ETA: 0s - loss: 9.6025 - acc: 0.368 - ETA: 0s - loss: 9.6269 - acc: 0.366 - ETA: 0s - loss: 9.6438 - acc: 0.365 - ETA: 0s - loss: 9.6422 - acc: 0.365 - ETA: 0s - loss: 9.6208 - acc: 0.366 - ETA: 0s - loss: 9.6209 - acc: 0.366 - ETA: 0s - loss: 9.6063 - acc: 0.367 - ETA: 0s - loss: 9.5794 - acc: 0.368 - ETA: 0s - loss: 9.5856 - acc: 0.3676Epoch 00005: val_loss improved from 10.07849 to 9.73418, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 9.5836 - acc: 0.3680 - val_loss: 9.7342 - val_acc: 0.3269 Epoch 7/20 6620/6680 [============================&gt;.] - ETA: 1s - loss: 8.2345 - acc: 0.400 - ETA: 2s - loss: 9.0365 - acc: 0.400 - ETA: 2s - loss: 9.1624 - acc: 0.391 - ETA: 2s - loss: 9.3301 - acc: 0.390 - ETA: 2s - loss: 9.3720 - acc: 0.389 - ETA: 1s - loss: 9.2283 - acc: 0.396 - ETA: 1s - loss: 9.3445 - acc: 0.389 - ETA: 1s - loss: 9.3488 - acc: 0.392 - ETA: 1s - loss: 9.3508 - acc: 0.393 - ETA: 1s - loss: 9.4630 - acc: 0.387 - ETA: 1s - loss: 9.5512 - acc: 0.381 - ETA: 1s - loss: 9.5051 - acc: 0.382 - ETA: 1s - loss: 9.5105 - acc: 0.380 - ETA: 1s - loss: 9.5097 - acc: 0.380 - ETA: 1s - loss: 9.5059 - acc: 0.380 - ETA: 1s - loss: 9.4551 - acc: 0.382 - ETA: 1s - loss: 9.3602 - acc: 0.388 - ETA: 1s - loss: 9.3789 - acc: 0.387 - ETA: 1s - loss: 9.3692 - acc: 0.388 - ETA: 1s - loss: 9.3420 - acc: 0.389 - ETA: 1s - loss: 9.3177 - acc: 0.390 - ETA: 1s - loss: 9.3196 - acc: 0.390 - ETA: 1s - loss: 9.3195 - acc: 0.390 - ETA: 1s - loss: 9.2833 - acc: 0.392 - ETA: 0s - loss: 9.3043 - acc: 0.391 - ETA: 0s - loss: 9.3063 - acc: 0.391 - ETA: 0s - loss: 9.3225 - acc: 0.389 - ETA: 0s - loss: 9.2842 - acc: 0.391 - ETA: 0s - loss: 9.2840 - acc: 0.391 - ETA: 0s - loss: 9.2901 - acc: 0.391 - ETA: 0s - loss: 9.2849 - acc: 0.392 - ETA: 0s - loss: 9.2796 - acc: 0.392 - ETA: 0s - loss: 9.2443 - acc: 0.394 - ETA: 0s - loss: 9.2491 - acc: 0.394 - ETA: 0s - loss: 9.2629 - acc: 0.393 - ETA: 0s - loss: 9.2713 - acc: 0.392 - ETA: 0s - loss: 9.2693 - acc: 0.392 - ETA: 0s - loss: 9.2771 - acc: 0.391 - ETA: 0s - loss: 9.2647 - acc: 0.392 - ETA: 0s - loss: 9.2684 - acc: 0.392 - ETA: 0s - loss: 9.2549 - acc: 0.393 - ETA: 0s - loss: 9.2368 - acc: 0.3944Epoch 00006: val_loss improved from 9.73418 to 9.50479, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 9.2400 - acc: 0.3945 - val_loss: 9.5048 - val_acc: 0.3329 Epoch 8/20 6600/6680 [============================&gt;.] - ETA: 2s - loss: 7.2668 - acc: 0.550 - ETA: 2s - loss: 9.6827 - acc: 0.366 - ETA: 2s - loss: 9.2905 - acc: 0.394 - ETA: 2s - loss: 9.4611 - acc: 0.380 - ETA: 2s - loss: 9.3606 - acc: 0.383 - ETA: 1s - loss: 9.3669 - acc: 0.385 - ETA: 1s - loss: 9.4514 - acc: 0.380 - ETA: 1s - loss: 9.4125 - acc: 0.385 - ETA: 1s - loss: 9.3156 - acc: 0.392 - ETA: 1s - loss: 9.3449 - acc: 0.392 - ETA: 1s - loss: 9.1051 - acc: 0.406 - ETA: 1s - loss: 9.1387 - acc: 0.402 - ETA: 1s - loss: 9.1393 - acc: 0.404 - ETA: 1s - loss: 9.1300 - acc: 0.404 - ETA: 1s - loss: 9.1165 - acc: 0.405 - ETA: 1s - loss: 9.1167 - acc: 0.406 - ETA: 1s - loss: 9.1112 - acc: 0.407 - ETA: 1s - loss: 9.0676 - acc: 0.410 - ETA: 1s - loss: 9.0732 - acc: 0.411 - ETA: 1s - loss: 9.0485 - acc: 0.413 - ETA: 1s - loss: 9.0495 - acc: 0.413 - ETA: 1s - loss: 8.9979 - acc: 0.416 - ETA: 1s - loss: 8.9594 - acc: 0.418 - ETA: 0s - loss: 8.9665 - acc: 0.418 - ETA: 0s - loss: 9.0083 - acc: 0.415 - ETA: 0s - loss: 9.0404 - acc: 0.414 - ETA: 0s - loss: 9.0123 - acc: 0.416 - ETA: 0s - loss: 8.9999 - acc: 0.416 - ETA: 0s - loss: 9.0125 - acc: 0.416 - ETA: 0s - loss: 9.0281 - acc: 0.415 - ETA: 0s - loss: 9.0316 - acc: 0.415 - ETA: 0s - loss: 9.0339 - acc: 0.415 - ETA: 0s - loss: 9.0262 - acc: 0.415 - ETA: 0s - loss: 9.0089 - acc: 0.415 - ETA: 0s - loss: 9.0356 - acc: 0.414 - ETA: 0s - loss: 9.0632 - acc: 0.412 - ETA: 0s - loss: 9.0481 - acc: 0.414 - ETA: 0s - loss: 9.0570 - acc: 0.413 - ETA: 0s - loss: 9.0762 - acc: 0.412 - ETA: 0s - loss: 9.0722 - acc: 0.412 - ETA: 0s - loss: 9.0678 - acc: 0.413 - ETA: 0s - loss: 9.0668 - acc: 0.4138Epoch 00007: val_loss improved from 9.50479 to 9.44717, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 9.0582 - acc: 0.4142 - val_loss: 9.4472 - val_acc: 0.3485 Epoch 9/20 6580/6680 [============================&gt;.] - ETA: 2s - loss: 12.0887 - acc: 0.25 - ETA: 2s - loss: 9.2708 - acc: 0.4167 - ETA: 2s - loss: 9.6955 - acc: 0.391 - ETA: 2s - loss: 9.1532 - acc: 0.424 - ETA: 1s - loss: 9.1979 - acc: 0.419 - ETA: 1s - loss: 9.2743 - acc: 0.414 - ETA: 1s - loss: 9.2209 - acc: 0.417 - ETA: 1s - loss: 9.2222 - acc: 0.415 - ETA: 1s - loss: 9.1374 - acc: 0.420 - ETA: 1s - loss: 9.1648 - acc: 0.418 - ETA: 1s - loss: 9.1626 - acc: 0.417 - ETA: 1s - loss: 9.1549 - acc: 0.418 - ETA: 1s - loss: 9.1334 - acc: 0.418 - ETA: 1s - loss: 9.0545 - acc: 0.424 - ETA: 1s - loss: 9.0456 - acc: 0.425 - ETA: 1s - loss: 8.9808 - acc: 0.430 - ETA: 1s - loss: 8.9437 - acc: 0.432 - ETA: 1s - loss: 8.9089 - acc: 0.434 - ETA: 1s - loss: 8.8552 - acc: 0.436 - ETA: 1s - loss: 8.8521 - acc: 0.437 - ETA: 1s - loss: 8.8315 - acc: 0.438 - ETA: 1s - loss: 8.8280 - acc: 0.438 - ETA: 1s - loss: 8.8382 - acc: 0.437 - ETA: 0s - loss: 8.8622 - acc: 0.435 - ETA: 0s - loss: 8.8581 - acc: 0.435 - ETA: 0s - loss: 8.8589 - acc: 0.435 - ETA: 0s - loss: 8.8524 - acc: 0.435 - ETA: 0s - loss: 8.8760 - acc: 0.434 - ETA: 0s - loss: 8.8869 - acc: 0.433 - ETA: 0s - loss: 8.9146 - acc: 0.431 - ETA: 0s - loss: 8.9260 - acc: 0.431 - ETA: 0s - loss: 8.9289 - acc: 0.430 - ETA: 0s - loss: 8.9365 - acc: 0.430 - ETA: 0s - loss: 8.9416 - acc: 0.430 - ETA: 0s - loss: 8.9583 - acc: 0.429 - ETA: 0s - loss: 8.9771 - acc: 0.428 - ETA: 0s - loss: 8.9670 - acc: 0.428 - ETA: 0s - loss: 8.9780 - acc: 0.427 - ETA: 0s - loss: 8.9853 - acc: 0.427 - ETA: 0s - loss: 9.0050 - acc: 0.426 - ETA: 0s - loss: 9.0059 - acc: 0.426 - ETA: 0s - loss: 9.0242 - acc: 0.4249Epoch 00008: val_loss improved from 9.44717 to 9.40818, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 9.0131 - acc: 0.4257 - val_loss: 9.4082 - val_acc: 0.3617 Epoch 10/20 6660/6680 [============================&gt;.] - ETA: 2s - loss: 10.5413 - acc: 0.30 - ETA: 2s - loss: 8.7304 - acc: 0.4500 - ETA: 2s - loss: 8.8214 - acc: 0.441 - ETA: 2s - loss: 8.6870 - acc: 0.450 - ETA: 2s - loss: 8.7576 - acc: 0.447 - ETA: 1s - loss: 8.7869 - acc: 0.446 - ETA: 1s - loss: 8.8185 - acc: 0.444 - ETA: 1s - loss: 8.6890 - acc: 0.452 - ETA: 1s - loss: 8.7227 - acc: 0.449 - ETA: 1s - loss: 8.7540 - acc: 0.446 - ETA: 1s - loss: 8.8289 - acc: 0.441 - ETA: 1s - loss: 8.9009 - acc: 0.437 - ETA: 1s - loss: 9.0692 - acc: 0.427 - ETA: 1s - loss: 9.1264 - acc: 0.423 - ETA: 1s - loss: 9.1518 - acc: 0.420 - ETA: 1s - loss: 9.2022 - acc: 0.417 - ETA: 1s - loss: 9.0900 - acc: 0.424 - ETA: 1s - loss: 9.0053 - acc: 0.430 - ETA: 1s - loss: 8.9991 - acc: 0.431 - ETA: 1s - loss: 9.0728 - acc: 0.426 - ETA: 1s - loss: 9.0748 - acc: 0.426 - ETA: 1s - loss: 9.0467 - acc: 0.428 - ETA: 1s - loss: 9.0320 - acc: 0.428 - ETA: 1s - loss: 9.0264 - acc: 0.429 - ETA: 0s - loss: 9.0417 - acc: 0.428 - ETA: 0s - loss: 9.0737 - acc: 0.426 - ETA: 0s - loss: 9.0663 - acc: 0.426 - ETA: 0s - loss: 9.0796 - acc: 0.425 - ETA: 0s - loss: 9.0557 - acc: 0.426 - ETA: 0s - loss: 9.0709 - acc: 0.425 - ETA: 0s - loss: 9.0241 - acc: 0.428 - ETA: 0s - loss: 9.0213 - acc: 0.428 - ETA: 0s - loss: 8.9846 - acc: 0.431 - ETA: 0s - loss: 8.9529 - acc: 0.433 - ETA: 0s - loss: 8.9772 - acc: 0.431 - ETA: 0s - loss: 8.9695 - acc: 0.432 - ETA: 0s - loss: 8.9937 - acc: 0.430 - ETA: 0s - loss: 8.9741 - acc: 0.431 - ETA: 0s - loss: 8.9773 - acc: 0.431 - ETA: 0s - loss: 9.0108 - acc: 0.429 - ETA: 0s - loss: 8.9927 - acc: 0.430 - ETA: 0s - loss: 8.9857 - acc: 0.430 - ETA: 0s - loss: 8.9781 - acc: 0.4315Epoch 00009: val_loss improved from 9.40818 to 9.35232, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 8.9875 - acc: 0.4310 - val_loss: 9.3523 - val_acc: 0.3605 Epoch 11/20 6660/6680 [============================&gt;.] - ETA: 2s - loss: 12.0912 - acc: 0.25 - ETA: 2s - loss: 8.6220 - acc: 0.4611 - ETA: 2s - loss: 8.5541 - acc: 0.464 - ETA: 2s - loss: 8.8635 - acc: 0.445 - ETA: 2s - loss: 8.8674 - acc: 0.445 - ETA: 2s - loss: 8.9075 - acc: 0.443 - ETA: 1s - loss: 9.1050 - acc: 0.431 - ETA: 1s - loss: 9.0865 - acc: 0.432 - ETA: 1s - loss: 8.9663 - acc: 0.438 - ETA: 1s - loss: 8.9812 - acc: 0.437 - ETA: 1s - loss: 9.0263 - acc: 0.434 - ETA: 1s - loss: 8.9850 - acc: 0.436 - ETA: 1s - loss: 9.0310 - acc: 0.433 - ETA: 1s - loss: 9.0112 - acc: 0.435 - ETA: 1s - loss: 9.0423 - acc: 0.432 - ETA: 1s - loss: 9.0450 - acc: 0.432 - ETA: 1s - loss: 8.9326 - acc: 0.438 - ETA: 1s - loss: 8.9075 - acc: 0.440 - ETA: 1s - loss: 8.8888 - acc: 0.441 - ETA: 1s - loss: 8.8909 - acc: 0.441 - ETA: 1s - loss: 8.9219 - acc: 0.438 - ETA: 1s - loss: 8.9034 - acc: 0.439 - ETA: 1s - loss: 8.9107 - acc: 0.438 - ETA: 1s - loss: 8.9109 - acc: 0.438 - ETA: 0s - loss: 8.9150 - acc: 0.438 - ETA: 0s - loss: 8.9164 - acc: 0.438 - ETA: 0s - loss: 8.9065 - acc: 0.438 - ETA: 0s - loss: 8.9302 - acc: 0.436 - ETA: 0s - loss: 8.9223 - acc: 0.436 - ETA: 0s - loss: 8.9557 - acc: 0.433 - ETA: 0s - loss: 8.9564 - acc: 0.433 - ETA: 0s - loss: 8.9903 - acc: 0.431 - ETA: 0s - loss: 8.9784 - acc: 0.432 - ETA: 0s - loss: 8.9469 - acc: 0.434 - ETA: 0s - loss: 8.9347 - acc: 0.434 - ETA: 0s - loss: 8.9220 - acc: 0.434 - ETA: 0s - loss: 8.9488 - acc: 0.433 - ETA: 0s - loss: 8.9715 - acc: 0.432 - ETA: 0s - loss: 8.9566 - acc: 0.433 - ETA: 0s - loss: 8.9445 - acc: 0.434 - ETA: 0s - loss: 8.9375 - acc: 0.434 - ETA: 0s - loss: 8.9377 - acc: 0.433 - ETA: 0s - loss: 8.9253 - acc: 0.4342Epoch 00010: val_loss improved from 9.35232 to 9.31277, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 8.9198 - acc: 0.4344 - val_loss: 9.3128 - val_acc: 0.3665 Epoch 12/20 6660/6680 [============================&gt;.] - ETA: 2s - loss: 8.8699 - acc: 0.450 - ETA: 2s - loss: 8.8791 - acc: 0.443 - ETA: 2s - loss: 9.2277 - acc: 0.421 - ETA: 2s - loss: 9.3085 - acc: 0.414 - ETA: 2s - loss: 9.2248 - acc: 0.420 - ETA: 2s - loss: 9.2272 - acc: 0.420 - ETA: 1s - loss: 9.0505 - acc: 0.427 - ETA: 1s - loss: 8.9463 - acc: 0.433 - ETA: 1s - loss: 8.8876 - acc: 0.435 - ETA: 1s - loss: 8.9155 - acc: 0.433 - ETA: 1s - loss: 8.9608 - acc: 0.430 - ETA: 1s - loss: 8.9833 - acc: 0.427 - ETA: 1s - loss: 8.9760 - acc: 0.429 - ETA: 1s - loss: 8.9209 - acc: 0.432 - ETA: 1s - loss: 8.8675 - acc: 0.434 - ETA: 1s - loss: 8.8957 - acc: 0.432 - ETA: 1s - loss: 8.8490 - acc: 0.436 - ETA: 1s - loss: 8.8641 - acc: 0.435 - ETA: 1s - loss: 8.8570 - acc: 0.436 - ETA: 1s - loss: 8.8490 - acc: 0.436 - ETA: 1s - loss: 8.8577 - acc: 0.436 - ETA: 1s - loss: 8.8286 - acc: 0.437 - ETA: 1s - loss: 8.8207 - acc: 0.437 - ETA: 1s - loss: 8.8192 - acc: 0.437 - ETA: 0s - loss: 8.7596 - acc: 0.440 - ETA: 0s - loss: 8.7686 - acc: 0.440 - ETA: 0s - loss: 8.7561 - acc: 0.441 - ETA: 0s - loss: 8.7862 - acc: 0.439 - ETA: 0s - loss: 8.8182 - acc: 0.437 - ETA: 0s - loss: 8.8499 - acc: 0.435 - ETA: 0s - loss: 8.8599 - acc: 0.434 - ETA: 0s - loss: 8.8521 - acc: 0.434 - ETA: 0s - loss: 8.8505 - acc: 0.434 - ETA: 0s - loss: 8.8441 - acc: 0.434 - ETA: 0s - loss: 8.8508 - acc: 0.433 - ETA: 0s - loss: 8.8296 - acc: 0.434 - ETA: 0s - loss: 8.7963 - acc: 0.436 - ETA: 0s - loss: 8.7696 - acc: 0.438 - ETA: 0s - loss: 8.7774 - acc: 0.437 - ETA: 0s - loss: 8.7486 - acc: 0.439 - ETA: 0s - loss: 8.7476 - acc: 0.439 - ETA: 0s - loss: 8.7363 - acc: 0.440 - ETA: 0s - loss: 8.7425 - acc: 0.4402Epoch 00011: val_loss improved from 9.31277 to 9.19319, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 8.7380 - acc: 0.4406 - val_loss: 9.1932 - val_acc: 0.3677 Epoch 13/20 6660/6680 [============================&gt;.] - ETA: 2s - loss: 9.6709 - acc: 0.400 - ETA: 2s - loss: 9.0701 - acc: 0.433 - ETA: 2s - loss: 8.7094 - acc: 0.450 - ETA: 2s - loss: 8.9159 - acc: 0.434 - ETA: 2s - loss: 8.7540 - acc: 0.443 - ETA: 2s - loss: 8.7802 - acc: 0.443 - ETA: 2s - loss: 8.7873 - acc: 0.440 - ETA: 1s - loss: 8.8040 - acc: 0.440 - ETA: 1s - loss: 8.8777 - acc: 0.436 - ETA: 1s - loss: 8.7509 - acc: 0.445 - ETA: 1s - loss: 8.7814 - acc: 0.441 - ETA: 1s - loss: 8.8008 - acc: 0.440 - ETA: 1s - loss: 8.8282 - acc: 0.438 - ETA: 1s - loss: 8.8563 - acc: 0.436 - ETA: 1s - loss: 8.7944 - acc: 0.438 - ETA: 1s - loss: 8.7574 - acc: 0.441 - ETA: 1s - loss: 8.7233 - acc: 0.443 - ETA: 1s - loss: 8.6528 - acc: 0.447 - ETA: 1s - loss: 8.7110 - acc: 0.444 - ETA: 1s - loss: 8.6707 - acc: 0.447 - ETA: 1s - loss: 8.6790 - acc: 0.446 - ETA: 1s - loss: 8.6875 - acc: 0.445 - ETA: 1s - loss: 8.7143 - acc: 0.443 - ETA: 1s - loss: 8.7591 - acc: 0.440 - ETA: 0s - loss: 8.7213 - acc: 0.442 - ETA: 0s - loss: 8.7066 - acc: 0.443 - ETA: 0s - loss: 8.7017 - acc: 0.443 - ETA: 0s - loss: 8.6843 - acc: 0.445 - ETA: 0s - loss: 8.6451 - acc: 0.447 - ETA: 0s - loss: 8.6776 - acc: 0.446 - ETA: 0s - loss: 8.6780 - acc: 0.446 - ETA: 0s - loss: 8.6794 - acc: 0.446 - ETA: 0s - loss: 8.6549 - acc: 0.447 - ETA: 0s - loss: 8.6251 - acc: 0.449 - ETA: 0s - loss: 8.6312 - acc: 0.449 - ETA: 0s - loss: 8.6133 - acc: 0.449 - ETA: 0s - loss: 8.6085 - acc: 0.449 - ETA: 0s - loss: 8.6229 - acc: 0.448 - ETA: 0s - loss: 8.5951 - acc: 0.450 - ETA: 0s - loss: 8.6089 - acc: 0.449 - ETA: 0s - loss: 8.5972 - acc: 0.450 - ETA: 0s - loss: 8.6044 - acc: 0.450 - ETA: 0s - loss: 8.6030 - acc: 0.4503Epoch 00012: val_loss improved from 9.19319 to 9.09968, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 8.6039 - acc: 0.4503 - val_loss: 9.0997 - val_acc: 0.3737 Epoch 14/20 6600/6680 [============================&gt;.] - ETA: 2s - loss: 8.0833 - acc: 0.500 - ETA: 2s - loss: 7.9762 - acc: 0.475 - ETA: 2s - loss: 8.0988 - acc: 0.475 - ETA: 2s - loss: 8.2304 - acc: 0.468 - ETA: 2s - loss: 8.4241 - acc: 0.460 - ETA: 2s - loss: 8.3955 - acc: 0.463 - ETA: 1s - loss: 8.3710 - acc: 0.466 - ETA: 1s - loss: 8.4363 - acc: 0.461 - ETA: 1s - loss: 8.3602 - acc: 0.467 - ETA: 1s - loss: 8.4272 - acc: 0.462 - ETA: 1s - loss: 8.4889 - acc: 0.459 - ETA: 1s - loss: 8.4659 - acc: 0.460 - ETA: 1s - loss: 8.4489 - acc: 0.460 - ETA: 1s - loss: 8.4651 - acc: 0.459 - ETA: 1s - loss: 8.4726 - acc: 0.459 - ETA: 1s - loss: 8.4789 - acc: 0.460 - ETA: 1s - loss: 8.4737 - acc: 0.460 - ETA: 1s - loss: 8.4209 - acc: 0.465 - ETA: 1s - loss: 8.4076 - acc: 0.466 - ETA: 1s - loss: 8.4513 - acc: 0.463 - ETA: 1s - loss: 8.4860 - acc: 0.461 - ETA: 1s - loss: 8.4777 - acc: 0.461 - ETA: 1s - loss: 8.4652 - acc: 0.461 - ETA: 0s - loss: 8.4369 - acc: 0.463 - ETA: 0s - loss: 8.4403 - acc: 0.463 - ETA: 0s - loss: 8.4417 - acc: 0.463 - ETA: 0s - loss: 8.4901 - acc: 0.461 - ETA: 0s - loss: 8.4646 - acc: 0.462 - ETA: 0s - loss: 8.4402 - acc: 0.464 - ETA: 0s - loss: 8.4331 - acc: 0.465 - ETA: 0s - loss: 8.4448 - acc: 0.464 - ETA: 0s - loss: 8.4382 - acc: 0.465 - ETA: 0s - loss: 8.4127 - acc: 0.466 - ETA: 0s - loss: 8.4178 - acc: 0.466 - ETA: 0s - loss: 8.4245 - acc: 0.465 - ETA: 0s - loss: 8.4351 - acc: 0.465 - ETA: 0s - loss: 8.4590 - acc: 0.463 - ETA: 0s - loss: 8.4744 - acc: 0.462 - ETA: 0s - loss: 8.4875 - acc: 0.461 - ETA: 0s - loss: 8.5239 - acc: 0.459 - ETA: 0s - loss: 8.5071 - acc: 0.460 - ETA: 0s - loss: 8.4923 - acc: 0.4611Epoch 00013: val_loss improved from 9.09968 to 9.02432, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 8.4945 - acc: 0.4609 - val_loss: 9.0243 - val_acc: 0.3832 Epoch 15/20 6540/6680 [============================&gt;.] - ETA: 2s - loss: 8.0597 - acc: 0.500 - ETA: 2s - loss: 7.7348 - acc: 0.511 - ETA: 2s - loss: 7.6988 - acc: 0.517 - ETA: 2s - loss: 7.6839 - acc: 0.518 - ETA: 2s - loss: 8.0778 - acc: 0.487 - ETA: 1s - loss: 8.2128 - acc: 0.481 - ETA: 1s - loss: 8.2431 - acc: 0.479 - ETA: 1s - loss: 8.2230 - acc: 0.480 - ETA: 1s - loss: 8.2400 - acc: 0.480 - ETA: 1s - loss: 8.2592 - acc: 0.477 - ETA: 1s - loss: 8.3886 - acc: 0.468 - ETA: 1s - loss: 8.3508 - acc: 0.469 - ETA: 1s - loss: 8.4142 - acc: 0.466 - ETA: 1s - loss: 8.4350 - acc: 0.463 - ETA: 1s - loss: 8.4459 - acc: 0.462 - ETA: 1s - loss: 8.4199 - acc: 0.464 - ETA: 1s - loss: 8.3878 - acc: 0.466 - ETA: 1s - loss: 8.4439 - acc: 0.462 - ETA: 1s - loss: 8.4381 - acc: 0.462 - ETA: 1s - loss: 8.3570 - acc: 0.467 - ETA: 1s - loss: 8.4112 - acc: 0.463 - ETA: 1s - loss: 8.4703 - acc: 0.460 - ETA: 1s - loss: 8.4437 - acc: 0.461 - ETA: 1s - loss: 8.4212 - acc: 0.462 - ETA: 0s - loss: 8.4230 - acc: 0.463 - ETA: 0s - loss: 8.3813 - acc: 0.465 - ETA: 0s - loss: 8.3550 - acc: 0.467 - ETA: 0s - loss: 8.3341 - acc: 0.468 - ETA: 0s - loss: 8.3402 - acc: 0.467 - ETA: 0s - loss: 8.3507 - acc: 0.466 - ETA: 0s - loss: 8.3100 - acc: 0.468 - ETA: 0s - loss: 8.2703 - acc: 0.470 - ETA: 0s - loss: 8.2871 - acc: 0.469 - ETA: 0s - loss: 8.2706 - acc: 0.470 - ETA: 0s - loss: 8.2775 - acc: 0.470 - ETA: 0s - loss: 8.2967 - acc: 0.469 - ETA: 0s - loss: 8.3360 - acc: 0.467 - ETA: 0s - loss: 8.3711 - acc: 0.465 - ETA: 0s - loss: 8.3926 - acc: 0.463 - ETA: 0s - loss: 8.4085 - acc: 0.463 - ETA: 0s - loss: 8.4057 - acc: 0.463 - ETA: 0s - loss: 8.4076 - acc: 0.4633Epoch 00014: val_loss improved from 9.02432 to 8.91660, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 8.3920 - acc: 0.4644 - val_loss: 8.9166 - val_acc: 0.3868 Epoch 16/20 6560/6680 [============================&gt;.] - ETA: 2s - loss: 12.0887 - acc: 0.25 - ETA: 2s - loss: 8.2049 - acc: 0.4833 - ETA: 2s - loss: 8.6565 - acc: 0.450 - ETA: 2s - loss: 8.5016 - acc: 0.462 - ETA: 2s - loss: 8.5907 - acc: 0.451 - ETA: 1s - loss: 8.6131 - acc: 0.451 - ETA: 1s - loss: 8.5280 - acc: 0.456 - ETA: 1s - loss: 8.6642 - acc: 0.448 - ETA: 1s - loss: 8.6524 - acc: 0.450 - ETA: 1s - loss: 8.6537 - acc: 0.450 - ETA: 1s - loss: 8.6456 - acc: 0.450 - ETA: 1s - loss: 8.5778 - acc: 0.455 - ETA: 1s - loss: 8.5358 - acc: 0.458 - ETA: 1s - loss: 8.5225 - acc: 0.460 - ETA: 1s - loss: 8.5338 - acc: 0.459 - ETA: 1s - loss: 8.5639 - acc: 0.458 - ETA: 1s - loss: 8.5262 - acc: 0.461 - ETA: 1s - loss: 8.4544 - acc: 0.465 - ETA: 1s - loss: 8.4077 - acc: 0.468 - ETA: 1s - loss: 8.4162 - acc: 0.468 - ETA: 1s - loss: 8.4043 - acc: 0.469 - ETA: 1s - loss: 8.3909 - acc: 0.470 - ETA: 1s - loss: 8.4357 - acc: 0.468 - ETA: 0s - loss: 8.3979 - acc: 0.470 - ETA: 0s - loss: 8.3751 - acc: 0.471 - ETA: 0s - loss: 8.4056 - acc: 0.469 - ETA: 0s - loss: 8.4288 - acc: 0.468 - ETA: 0s - loss: 8.4194 - acc: 0.469 - ETA: 0s - loss: 8.4167 - acc: 0.468 - ETA: 0s - loss: 8.4501 - acc: 0.466 - ETA: 0s - loss: 8.4375 - acc: 0.467 - ETA: 0s - loss: 8.4504 - acc: 0.466 - ETA: 0s - loss: 8.4243 - acc: 0.467 - ETA: 0s - loss: 8.4146 - acc: 0.468 - ETA: 0s - loss: 8.4049 - acc: 0.468 - ETA: 0s - loss: 8.4071 - acc: 0.468 - ETA: 0s - loss: 8.4005 - acc: 0.468 - ETA: 0s - loss: 8.3920 - acc: 0.468 - ETA: 0s - loss: 8.3994 - acc: 0.468 - ETA: 0s - loss: 8.3471 - acc: 0.471 - ETA: 0s - loss: 8.3407 - acc: 0.472 - ETA: 0s - loss: 8.3453 - acc: 0.4716Epoch 00015: val_loss improved from 8.91660 to 8.90740, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 8.3284 - acc: 0.4728 - val_loss: 8.9074 - val_acc: 0.3820 Epoch 17/20 6560/6680 [============================&gt;.] - ETA: 2s - loss: 8.8653 - acc: 0.450 - ETA: 2s - loss: 8.5181 - acc: 0.466 - ETA: 2s - loss: 8.5173 - acc: 0.464 - ETA: 2s - loss: 8.4232 - acc: 0.470 - ETA: 2s - loss: 8.3326 - acc: 0.478 - ETA: 2s - loss: 8.3004 - acc: 0.480 - ETA: 1s - loss: 8.2294 - acc: 0.484 - ETA: 1s - loss: 8.2982 - acc: 0.478 - ETA: 1s - loss: 8.3229 - acc: 0.477 - ETA: 1s - loss: 8.3090 - acc: 0.478 - ETA: 1s - loss: 8.2953 - acc: 0.479 - ETA: 1s - loss: 8.2948 - acc: 0.479 - ETA: 1s - loss: 8.2091 - acc: 0.485 - ETA: 1s - loss: 8.1594 - acc: 0.488 - ETA: 1s - loss: 8.0511 - acc: 0.495 - ETA: 1s - loss: 8.0778 - acc: 0.493 - ETA: 1s - loss: 8.1012 - acc: 0.491 - ETA: 1s - loss: 8.1599 - acc: 0.488 - ETA: 1s - loss: 8.2219 - acc: 0.484 - ETA: 1s - loss: 8.2294 - acc: 0.484 - ETA: 1s - loss: 8.2114 - acc: 0.485 - ETA: 1s - loss: 8.2188 - acc: 0.485 - ETA: 1s - loss: 8.2485 - acc: 0.483 - ETA: 1s - loss: 8.2826 - acc: 0.480 - ETA: 0s - loss: 8.2536 - acc: 0.481 - ETA: 0s - loss: 8.2953 - acc: 0.479 - ETA: 0s - loss: 8.2599 - acc: 0.481 - ETA: 0s - loss: 8.2778 - acc: 0.480 - ETA: 0s - loss: 8.3126 - acc: 0.478 - ETA: 0s - loss: 8.3088 - acc: 0.478 - ETA: 0s - loss: 8.3269 - acc: 0.476 - ETA: 0s - loss: 8.3446 - acc: 0.475 - ETA: 0s - loss: 8.3038 - acc: 0.478 - ETA: 0s - loss: 8.3216 - acc: 0.477 - ETA: 0s - loss: 8.3178 - acc: 0.477 - ETA: 0s - loss: 8.3117 - acc: 0.477 - ETA: 0s - loss: 8.3050 - acc: 0.477 - ETA: 0s - loss: 8.2712 - acc: 0.479 - ETA: 0s - loss: 8.2962 - acc: 0.478 - ETA: 0s - loss: 8.2729 - acc: 0.479 - ETA: 0s - loss: 8.2585 - acc: 0.480 - ETA: 0s - loss: 8.2598 - acc: 0.4803Epoch 00016: val_loss improved from 8.90740 to 8.75791, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 8.2691 - acc: 0.4795 - val_loss: 8.7579 - val_acc: 0.3892 Epoch 18/20 6580/6680 [============================&gt;.] - ETA: 1s - loss: 6.5289 - acc: 0.550 - ETA: 2s - loss: 7.0979 - acc: 0.543 - ETA: 2s - loss: 7.9643 - acc: 0.490 - ETA: 2s - loss: 7.7101 - acc: 0.502 - ETA: 2s - loss: 7.8133 - acc: 0.495 - ETA: 2s - loss: 7.8368 - acc: 0.493 - ETA: 1s - loss: 7.9209 - acc: 0.491 - ETA: 1s - loss: 7.8476 - acc: 0.496 - ETA: 1s - loss: 7.8405 - acc: 0.497 - ETA: 1s - loss: 7.8416 - acc: 0.495 - ETA: 1s - loss: 7.8073 - acc: 0.498 - ETA: 1s - loss: 7.7689 - acc: 0.499 - ETA: 1s - loss: 7.8496 - acc: 0.494 - ETA: 1s - loss: 7.9522 - acc: 0.489 - ETA: 1s - loss: 7.9692 - acc: 0.489 - ETA: 1s - loss: 7.9630 - acc: 0.489 - ETA: 1s - loss: 7.9885 - acc: 0.489 - ETA: 1s - loss: 8.0040 - acc: 0.488 - ETA: 1s - loss: 8.0638 - acc: 0.486 - ETA: 1s - loss: 8.0820 - acc: 0.485 - ETA: 1s - loss: 8.0918 - acc: 0.485 - ETA: 1s - loss: 8.1237 - acc: 0.482 - ETA: 1s - loss: 8.1160 - acc: 0.482 - ETA: 1s - loss: 8.0988 - acc: 0.482 - ETA: 0s - loss: 8.1375 - acc: 0.479 - ETA: 0s - loss: 8.1412 - acc: 0.479 - ETA: 0s - loss: 8.1518 - acc: 0.478 - ETA: 0s - loss: 8.1139 - acc: 0.480 - ETA: 0s - loss: 8.1174 - acc: 0.480 - ETA: 0s - loss: 8.0939 - acc: 0.482 - ETA: 0s - loss: 8.1057 - acc: 0.480 - ETA: 0s - loss: 8.0945 - acc: 0.482 - ETA: 0s - loss: 8.0405 - acc: 0.485 - ETA: 0s - loss: 8.0468 - acc: 0.484 - ETA: 0s - loss: 8.0366 - acc: 0.485 - ETA: 0s - loss: 8.0382 - acc: 0.485 - ETA: 0s - loss: 8.0343 - acc: 0.485 - ETA: 0s - loss: 8.0016 - acc: 0.487 - ETA: 0s - loss: 7.9765 - acc: 0.489 - ETA: 0s - loss: 7.9774 - acc: 0.489 - ETA: 0s - loss: 7.9944 - acc: 0.488 - ETA: 0s - loss: 7.9763 - acc: 0.490 - ETA: 0s - loss: 7.9952 - acc: 0.4892Epoch 00017: val_loss improved from 8.75791 to 8.63126, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 8.0145 - acc: 0.4880 - val_loss: 8.6313 - val_acc: 0.3988 Epoch 19/20 6600/6680 [============================&gt;.] - ETA: 2s - loss: 5.6414 - acc: 0.650 - ETA: 2s - loss: 7.9768 - acc: 0.500 - ETA: 2s - loss: 7.7379 - acc: 0.511 - ETA: 2s - loss: 8.2281 - acc: 0.484 - ETA: 2s - loss: 8.0992 - acc: 0.492 - ETA: 1s - loss: 8.0807 - acc: 0.492 - ETA: 1s - loss: 8.0520 - acc: 0.494 - ETA: 1s - loss: 7.9096 - acc: 0.503 - ETA: 1s - loss: 7.9436 - acc: 0.501 - ETA: 1s - loss: 8.1100 - acc: 0.491 - ETA: 1s - loss: 8.0756 - acc: 0.493 - ETA: 1s - loss: 8.1143 - acc: 0.491 - ETA: 1s - loss: 8.1526 - acc: 0.488 - ETA: 1s - loss: 8.1394 - acc: 0.489 - ETA: 1s - loss: 8.1104 - acc: 0.490 - ETA: 1s - loss: 8.0939 - acc: 0.491 - ETA: 1s - loss: 8.1161 - acc: 0.490 - ETA: 1s - loss: 8.1209 - acc: 0.489 - ETA: 1s - loss: 8.0940 - acc: 0.491 - ETA: 1s - loss: 8.0531 - acc: 0.493 - ETA: 1s - loss: 8.0259 - acc: 0.494 - ETA: 1s - loss: 7.9659 - acc: 0.497 - ETA: 1s - loss: 7.9382 - acc: 0.498 - ETA: 0s - loss: 7.9690 - acc: 0.497 - ETA: 0s - loss: 7.9790 - acc: 0.496 - ETA: 0s - loss: 7.9687 - acc: 0.497 - ETA: 0s - loss: 7.9498 - acc: 0.498 - ETA: 0s - loss: 7.9865 - acc: 0.495 - ETA: 0s - loss: 7.9949 - acc: 0.494 - ETA: 0s - loss: 8.0127 - acc: 0.493 - ETA: 0s - loss: 7.9879 - acc: 0.495 - ETA: 0s - loss: 7.9710 - acc: 0.496 - ETA: 0s - loss: 7.9825 - acc: 0.495 - ETA: 0s - loss: 7.9688 - acc: 0.496 - ETA: 0s - loss: 7.9630 - acc: 0.496 - ETA: 0s - loss: 7.9582 - acc: 0.496 - ETA: 0s - loss: 7.9416 - acc: 0.497 - ETA: 0s - loss: 7.9294 - acc: 0.498 - ETA: 0s - loss: 7.9277 - acc: 0.498 - ETA: 0s - loss: 7.9212 - acc: 0.498 - ETA: 0s - loss: 7.9377 - acc: 0.497 - ETA: 0s - loss: 7.9177 - acc: 0.4988Epoch 00018: val_loss improved from 8.63126 to 8.47696, saving model to saved_models/weights.best.VGG16.hdf5 6680/6680 [==============================] - 2s - loss: 7.9001 - acc: 0.5000 - val_loss: 8.4770 - val_acc: 0.4096 Epoch 20/20 6540/6680 [============================&gt;.] - ETA: 2s - loss: 4.0316 - acc: 0.750 - ETA: 2s - loss: 6.6298 - acc: 0.588 - ETA: 2s - loss: 7.4347 - acc: 0.535 - ETA: 2s - loss: 7.1845 - acc: 0.552 - ETA: 2s - loss: 7.6124 - acc: 0.522 - ETA: 1s - loss: 7.6207 - acc: 0.523 - ETA: 1s - loss: 7.7182 - acc: 0.517 - ETA: 1s - loss: 7.7321 - acc: 0.515 - ETA: 1s - loss: 7.7138 - acc: 0.515 - ETA: 1s - loss: 7.6969 - acc: 0.517 - ETA: 1s - loss: 7.7433 - acc: 0.514 - ETA: 1s - loss: 7.8370 - acc: 0.509 - ETA: 1s - loss: 7.8823 - acc: 0.506 - ETA: 1s - loss: 7.8192 - acc: 0.510 - ETA: 1s - loss: 7.8459 - acc: 0.507 - ETA: 1s - loss: 7.7872 - acc: 0.511 - ETA: 1s - loss: 7.8335 - acc: 0.507 - ETA: 1s - loss: 7.8077 - acc: 0.508 - ETA: 1s - loss: 7.8050 - acc: 0.509 - ETA: 1s - loss: 7.8398 - acc: 0.507 - ETA: 1s - loss: 7.8141 - acc: 0.508 - ETA: 1s - loss: 7.8498 - acc: 0.506 - ETA: 1s - loss: 7.8770 - acc: 0.504 - ETA: 1s - loss: 7.8649 - acc: 0.504 - ETA: 0s - loss: 7.8359 - acc: 0.506 - ETA: 0s - loss: 7.8493 - acc: 0.506 - ETA: 0s - loss: 7.8497 - acc: 0.506 - ETA: 0s - loss: 7.8667 - acc: 0.505 - ETA: 0s - loss: 7.8676 - acc: 0.504 - ETA: 0s - loss: 7.8882 - acc: 0.503 - ETA: 0s - loss: 7.8508 - acc: 0.505 - ETA: 0s - loss: 7.8463 - acc: 0.505 - ETA: 0s - loss: 7.8595 - acc: 0.504 - ETA: 0s - loss: 7.8709 - acc: 0.504 - ETA: 0s - loss: 7.8772 - acc: 0.503 - ETA: 0s - loss: 7.8623 - acc: 0.504 - ETA: 0s - loss: 7.8511 - acc: 0.505 - ETA: 0s - loss: 7.8718 - acc: 0.503 - ETA: 0s - loss: 7.8610 - acc: 0.504 - ETA: 0s - loss: 7.8532 - acc: 0.505 - ETA: 0s - loss: 7.8270 - acc: 0.506 - ETA: 0s - loss: 7.8353 - acc: 0.5058Epoch 00019: val_loss did not improve 6680/6680 [==============================] - 2s - loss: 7.8393 - acc: 0.5057 - val_loss: 8.5213 - val_acc: 0.4168 &lt;keras.callbacks.History at 0x1dc39a36e80&gt;123## 加载具有最好验证loss的模型VGG16_model.load_weights('saved_models/weights.best.VGG16.hdf5') 测试模型现在，我们可以测试此CNN在狗图像测试数据集中识别品种的效果如何。我们在下方打印出测试准确率。 123456# 获取测试数据集中每一个图像所预测的狗品种的indexVGG16_predictions = [np.argmax(VGG16_model.predict(np.expand_dims(feature, axis=0))) for feature in test_VGG16]# 报告测试准确率test_accuracy = 100*np.sum(np.array(VGG16_predictions)==np.argmax(test_targets, axis=1))/len(VGG16_predictions)print('Test accuracy: %.4f%%' % test_accuracy) Test accuracy: 40.7895%使用模型预测狗的品种123456789from extract_bottleneck_features import *def VGG16_predict_breed(img_path): # 提取bottleneck特征 bottleneck_feature = extract_VGG16(path_to_tensor(img_path)) # 获取预测向量 predicted_vector = VGG16_model.predict(bottleneck_feature) # 返回此模型预测的狗的品种 return dog_names[np.argmax(predicted_vector)] 步骤 5: 建立一个CNN来分类狗的品种（使用迁移学习）现在你将使用迁移学习来建立一个CNN，从而可以从图像中识别狗的品种。你的 CNN 在测试集上的准确率必须至少达到60%。 在步骤4中，我们使用了迁移学习来创建一个使用基于 VGG-16 提取的特征向量来搭建一个 CNN。在本部分内容中，你必须使用另一个预训练模型来搭建一个 CNN。为了让这个任务更易实现，我们已经预先对目前 keras 中可用的几种网络进行了预训练： VGG-19 bottleneck features ResNet-50 bottleneck features Inception bottleneck features Xception bottleneck features 这些文件被命名为为： Dog{network}Data.npz其中 {network} 可以是 VGG19、Resnet50、InceptionV3 或 Xception 中的一个。选择上方网络架构中的一个，下载相对应的bottleneck特征，并将所下载的文件保存在目录 bottleneck_features/ 中。 【练习】获取模型的特征向量在下方代码块中，通过运行下方代码提取训练、测试与验证集相对应的bottleneck特征。 bottleneck_features = np.load(&apos;bottleneck_features/Dog{network}Data.npz&apos;) train_{network} = bottleneck_features[&apos;train&apos;] valid_{network} = bottleneck_features[&apos;valid&apos;] test_{network} = bottleneck_features[&apos;test&apos;]12345### TODO: 从另一个预训练的CNN获取bottleneck特征bottleneck_features_Xception = np.load('bottleneck_features/DogXceptionData.npz')train_Xception = bottleneck_features_Xception['train']valid_Xception = bottleneck_features_Xception['valid']test_Xception = bottleneck_features_Xception['test'] 【练习】模型架构建立一个CNN来分类狗品种。在你的代码单元块的最后，通过运行如下代码输出网络的结构： &lt;your model&apos;s name&gt;.summary() 问题 6:在下方的代码块中尝试使用 Keras 搭建最终的网络架构，并回答你实现最终 CNN 架构的步骤与每一步的作用，并描述你在迁移学习过程中，使用该网络架构的原因。 回答:GlobalAveragePooling2D层把多维的输入一维化，batch_size不影响Dropout层防止过拟合，同时加快训练Dense units=256增加分类信息Dense units=133，activation=’softmax’作为分类的输出 *选择Xpection的原因是Xception模块首先使用1 *1的卷积核将特征图的各个通道映射到一个新的空间，在这一过程中学习通道间的相关性；再通过常规的3 *3或5 *5的卷积核进行卷积，以同时学习空间上的相关性和通道间的相关性。能有更多有效的特征用于分类 早期的VGG16迁移学习，本身特征太少，使用全局平均池化层，大大损失了图像的特征 从Flatten层到最后的输出tensor，参数减少的太快 可能VGG-16分辨效果不如VGG-19 1train_Xception.shape[1:] (7, 7, 2048)12345678910111213### TODO: 定义你的框架from keras.layers import Conv2D, MaxPool2D, GlobalAveragePooling2D, Dense, Flatten, Dropoutfrom keras.models import SequentialXception_model = Sequential()Xception_model.add(GlobalAveragePooling2D(input_shape = train_Xception.shape[1:]))Xception_model.add(Dense(units=1024, activation='relu'))Xception_model.add(Dropout(0.2))Xception_model.add(Dense(units=256,activation='relu'))Xception_model.add(Dropout(0.2))Xception_model.add(Dense(units=133,activation='softmax'))Xception_model.summary() _________________________________________________________________ Layer (type) Output Shape Param # ================================================================= global_average_pooling2d_3 ( (None, 2048) 0 _________________________________________________________________ dense_3 (Dense) (None, 1024) 2098176 _________________________________________________________________ dropout_1 (Dropout) (None, 1024) 0 _________________________________________________________________ dense_4 (Dense) (None, 256) 262400 _________________________________________________________________ dropout_2 (Dropout) (None, 256) 0 _________________________________________________________________ dense_5 (Dense) (None, 133) 34181 ================================================================= Total params: 2,394,757.0 Trainable params: 2,394,757.0 Non-trainable params: 0.0 _________________________________________________________________12### TODO: 编译模型Xception_model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy']) 【练习】训练模型 问题 7:在下方代码单元中训练你的模型。使用模型检查点（model checkpointing）来储存具有最低验证集 loss 的模型。 当然，你也可以对训练集进行 数据增强 以优化模型的表现，不过这不是必须的步骤。 123456789### TODO: 训练模型from keras.callbacks import ModelCheckpointcheckpointer = ModelCheckpoint(filepath='saved_models/weights.best.Xception.hdf5', verbose=1, save_best_only=True)Xception_model.fit(train_Xception, train_targets, validation_data=(valid_Xception,valid_targets), epochs=10, batch_size=20, callbacks=[checkpointer],verbose=1) Epoch 10/10 6660/6680 [============================&gt;.] - ETA: 8s - loss: 0.1982 - acc: 0.950 - ETA: 7s - loss: 0.2594 - acc: 0.900 - ETA: 7s - loss: 0.2090 - acc: 0.921 - ETA: 7s - loss: 0.1633 - acc: 0.945 - ETA: 7s - loss: 0.1569 - acc: 0.946 - ETA: 7s - loss: 0.1568 - acc: 0.953 - ETA: 7s - loss: 0.1803 - acc: 0.947 - ETA: 7s - loss: 0.1835 - acc: 0.942 - ETA: 7s - loss: 0.1802 - acc: 0.941 - ETA: 7s - loss: 0.1663 - acc: 0.944 - ETA: 7s - loss: 0.1600 - acc: 0.946 - ETA: 7s - loss: 0.1588 - acc: 0.946 - ETA: 7s - loss: 0.1548 - acc: 0.947 - ETA: 7s - loss: 0.1629 - acc: 0.943 - ETA: 6s - loss: 0.1671 - acc: 0.942 - ETA: 6s - loss: 0.1658 - acc: 0.944 - ETA: 6s - loss: 0.1646 - acc: 0.943 - ETA: 6s - loss: 0.1663 - acc: 0.941 - ETA: 6s - loss: 0.1600 - acc: 0.945 - ETA: 6s - loss: 0.1710 - acc: 0.944 - ETA: 6s - loss: 0.1665 - acc: 0.945 - ETA: 6s - loss: 0.1656 - acc: 0.945 - ETA: 6s - loss: 0.1690 - acc: 0.944 - ETA: 6s - loss: 0.1863 - acc: 0.943 - ETA: 6s - loss: 0.1957 - acc: 0.941 - ETA: 6s - loss: 0.1998 - acc: 0.939 - ETA: 6s - loss: 0.1969 - acc: 0.940 - ETA: 6s - loss: 0.1944 - acc: 0.941 - ETA: 6s - loss: 0.1985 - acc: 0.941 - ETA: 5s - loss: 0.2019 - acc: 0.941 - ETA: 5s - loss: 0.2045 - acc: 0.940 - ETA: 5s - loss: 0.2012 - acc: 0.940 - ETA: 5s - loss: 0.1965 - acc: 0.941 - ETA: 5s - loss: 0.1986 - acc: 0.940 - ETA: 5s - loss: 0.1970 - acc: 0.941 - ETA: 5s - loss: 0.1957 - acc: 0.941 - ETA: 5s - loss: 0.1922 - acc: 0.942 - ETA: 5s - loss: 0.1887 - acc: 0.943 - ETA: 5s - loss: 0.1866 - acc: 0.945 - ETA: 5s - loss: 0.1846 - acc: 0.944 - ETA: 5s - loss: 0.1869 - acc: 0.943 - ETA: 5s - loss: 0.1848 - acc: 0.944 - ETA: 5s - loss: 0.1828 - acc: 0.944 - ETA: 4s - loss: 0.1879 - acc: 0.944 - ETA: 4s - loss: 0.1845 - acc: 0.944 - ETA: 4s - loss: 0.1856 - acc: 0.944 - ETA: 4s - loss: 0.1849 - acc: 0.944 - ETA: 4s - loss: 0.1832 - acc: 0.944 - ETA: 4s - loss: 0.1808 - acc: 0.945 - ETA: 4s - loss: 0.1804 - acc: 0.945 - ETA: 4s - loss: 0.1817 - acc: 0.944 - ETA: 4s - loss: 0.1846 - acc: 0.944 - ETA: 4s - loss: 0.1829 - acc: 0.945 - ETA: 4s - loss: 0.1823 - acc: 0.945 - ETA: 4s - loss: 0.1856 - acc: 0.944 - ETA: 4s - loss: 0.1844 - acc: 0.945 - ETA: 4s - loss: 0.1835 - acc: 0.945 - ETA: 4s - loss: 0.1823 - acc: 0.946 - ETA: 4s - loss: 0.1809 - acc: 0.946 - ETA: 4s - loss: 0.1835 - acc: 0.946 - ETA: 4s - loss: 0.1827 - acc: 0.946 - ETA: 3s - loss: 0.1815 - acc: 0.946 - ETA: 3s - loss: 0.1812 - acc: 0.946 - ETA: 3s - loss: 0.1823 - acc: 0.946 - ETA: 3s - loss: 0.1830 - acc: 0.946 - ETA: 3s - loss: 0.1835 - acc: 0.945 - ETA: 3s - loss: 0.1842 - acc: 0.944 - ETA: 3s - loss: 0.1848 - acc: 0.944 - ETA: 3s - loss: 0.1849 - acc: 0.944 - ETA: 3s - loss: 0.1865 - acc: 0.944 - ETA: 3s - loss: 0.1851 - acc: 0.944 - ETA: 3s - loss: 0.1839 - acc: 0.945 - ETA: 3s - loss: 0.1828 - acc: 0.945 - ETA: 3s - loss: 0.1830 - acc: 0.945 - ETA: 3s - loss: 0.1824 - acc: 0.945 - ETA: 3s - loss: 0.1819 - acc: 0.945 - ETA: 3s - loss: 0.1834 - acc: 0.945 - ETA: 3s - loss: 0.1861 - acc: 0.945 - ETA: 2s - loss: 0.1851 - acc: 0.945 - ETA: 2s - loss: 0.1850 - acc: 0.945 - ETA: 2s - loss: 0.1852 - acc: 0.945 - ETA: 2s - loss: 0.1851 - acc: 0.944 - ETA: 2s - loss: 0.1850 - acc: 0.944 - ETA: 2s - loss: 0.1843 - acc: 0.944 - ETA: 2s - loss: 0.1852 - acc: 0.944 - ETA: 2s - loss: 0.1850 - acc: 0.944 - ETA: 2s - loss: 0.1857 - acc: 0.943 - ETA: 2s - loss: 0.1858 - acc: 0.942 - ETA: 2s - loss: 0.1854 - acc: 0.942 - ETA: 2s - loss: 0.1843 - acc: 0.943 - ETA: 2s - loss: 0.1839 - acc: 0.943 - ETA: 2s - loss: 0.1833 - acc: 0.943 - ETA: 2s - loss: 0.1831 - acc: 0.943 - ETA: 1s - loss: 0.1833 - acc: 0.943 - ETA: 1s - loss: 0.1863 - acc: 0.942 - ETA: 1s - loss: 0.1872 - acc: 0.942 - ETA: 1s - loss: 0.1876 - acc: 0.941 - ETA: 1s - loss: 0.1873 - acc: 0.941 - ETA: 1s - loss: 0.1891 - acc: 0.941 - ETA: 1s - loss: 0.1885 - acc: 0.941 - ETA: 1s - loss: 0.1902 - acc: 0.941 - ETA: 1s - loss: 0.1915 - acc: 0.940 - ETA: 1s - loss: 0.1932 - acc: 0.940 - ETA: 1s - loss: 0.1933 - acc: 0.940 - ETA: 1s - loss: 0.1948 - acc: 0.940 - ETA: 1s - loss: 0.1937 - acc: 0.940 - ETA: 1s - loss: 0.1932 - acc: 0.940 - ETA: 1s - loss: 0.1922 - acc: 0.940 - ETA: 1s - loss: 0.1930 - acc: 0.940 - ETA: 1s - loss: 0.1933 - acc: 0.940 - ETA: 0s - loss: 0.1935 - acc: 0.940 - ETA: 0s - loss: 0.1943 - acc: 0.940 - ETA: 0s - loss: 0.1960 - acc: 0.939 - ETA: 0s - loss: 0.1964 - acc: 0.939 - ETA: 0s - loss: 0.1977 - acc: 0.939 - ETA: 0s - loss: 0.1989 - acc: 0.939 - ETA: 0s - loss: 0.1980 - acc: 0.939 - ETA: 0s - loss: 0.1986 - acc: 0.938 - ETA: 0s - loss: 0.2002 - acc: 0.938 - ETA: 0s - loss: 0.1993 - acc: 0.938 - ETA: 0s - loss: 0.2000 - acc: 0.938 - ETA: 0s - loss: 0.2005 - acc: 0.938 - ETA: 0s - loss: 0.2000 - acc: 0.938 - ETA: 0s - loss: 0.1995 - acc: 0.938 - ETA: 0s - loss: 0.2007 - acc: 0.938 - ETA: 0s - loss: 0.2032 - acc: 0.937 - ETA: 0s - loss: 0.2037 - acc: 0.9375Epoch 00009: val_loss did not improve 6680/6680 [==============================] - 8s - loss: 0.2035 - acc: 0.9376 - val_loss: 0.7865 - val_acc: 0.8216 &lt;keras.callbacks.History at 0x1dc3e4f5dd8&gt;12### TODO: 加载具有最佳验证loss的模型权重Xception_model.load_weights('saved_models/weights.best.Xception.hdf5') 【练习】测试模型 问题 8:在狗图像的测试数据集上试用你的模型。确保测试准确率大于60%。 12345### TODO: 在测试集上计算分类准确率Xception_predictions = [np.argmax(Xception_model.predict(np.expand_dims(feature,axis=0))) for feature in test_Xception]test_accuracy = 100*np.sum(np.array(Xception_predictions)==np.argmax(test_targets, axis=1))/len(Xception_predictions)print('Test accuracy: %.4f%%' % test_accuracy) Test accuracy: 80.9809% 【练习】使用模型测试狗的品种实现一个函数，它的输入为图像路径，功能为预测对应图像的类别，输出为你模型预测出的狗类别（Affenpinscher, Afghan_hound 等）。 与步骤5中的模拟函数类似，你的函数应当包含如下三个步骤： 根据选定的模型载入图像特征（bottleneck features） 将图像特征输输入到你的模型中，并返回预测向量。注意，在该向量上使用 argmax 函数可以返回狗种类的序号。 使用在步骤0中定义的 dog_names 数组来返回对应的狗种类名称。 提取图像特征过程中使用到的函数可以在 extract_bottleneck_features.py 中找到。同时，他们应已在之前的代码块中被导入。根据你选定的 CNN 网络，你可以使用 extract_{network} 函数来获得对应的图像特征，其中 {network} 代表 VGG19, Resnet50, InceptionV3, 或 Xception 中的一个。 问题 9:12345678910### TODO: 写一个函数，该函数将图像的路径作为输入### 然后返回此模型所预测的狗的品种import extract_bottleneck_featuresdef predict_dog_class(image_path): # 提取bottleneck特征 bottleneck_Xception_feature = extract_Xception(path_to_tensor(image_path)) # 获得预测向量 predicted_vec = Xception_model.predict(bottleneck_Xception_feature) # 返回预测种类 return dog_names[np.argmax(predicted_vec)] 步骤 6: 完成你的算法实现一个算法，它的输入为图像的路径，它能够区分图像是否包含一个人、狗或两者都不包含，然后： 如果从图像中检测到一只狗，返回被预测的品种。 如果从图像中检测到人，返回最相像的狗品种。 如果两者都不能在图像中检测到，输出错误提示。 我们非常欢迎你来自己编写检测图像中人类与狗的函数，你可以随意地使用上方完成的 face_detector 和 dog_detector 函数。你需要在步骤5使用你的CNN来预测狗品种。 下面提供了算法的示例输出，但你可以自由地设计自己的模型！ 问题 10:在下方代码块中完成你的代码。 123456789101112131415161718192021222324252627282930313233### TODO: 设计你的算法### 自由地使用所需的代码单元数吧def image_check(image_paths): if face_detector(image_paths): #如果检测到的是人 #返回最相像的狗品种 looks_like_dog_type = predict_dog_class(image_paths) #加载彩色（通道顺序为BGR）图像 human_img = cv2.imread(image_paths) # 将BGR图像进行灰度处理 human_gray = cv2.cvtColor(human_img,cv2.COLOR_BGR2GRAY) # 在图像中找出脸 faces = face_cascade.detectMultiScale(human_gray) # 获取每一个所检测到的脸的识别框 for (x,y,w,h) in faces: # 在人脸图像中绘制出识别框 cv2.rectangle(human_img,(x,y),(x+w,y+h),(255,0,0),2) # 将BGR图像转变为RGB图像以打印 cv_rgb = cv2.cvtColor(human_img, cv2.COLOR_BGR2RGB) # 展示含有识别框的图像 plt.imshow(cv_rgb) plt.show() # 打印图像,并输出你最像的狗的种类是： print("You mostly looks like a &#123;&#125; for a dog breed..\n\n".format(looks_like_dog_type)) elif dog_detector(image_paths): #如果检测到狗狗,返回被预测的狗的品种 print("Hey, awesome dog \n\n") dog_breed = predict_dog_class(image_paths) dog_img = cv2.imread(image_paths) plt.imshow(dog_img) plt.show() print("it's breed is &#123;&#125;.\n\n".format(dog_breed)) else: print("sorry,it's a wrong image ,i don't know it is!") 步骤 7: 测试你的算法在这个部分中，你将尝试一下你的新算法！算法认为你看起来像什么类型的狗？如果你有一只狗，它可以准确地预测你的狗的品种吗？如果你有一只猫，它会将你的猫误判为一只狗吗？ 问题 11:在下方编写代码，用至少6张现实中的图片来测试你的算法。你可以使用任意照片，不过请至少使用两张人类图片（要征得当事人同意哦）和两张狗的图片。同时请回答如下问题： 输出结果比你预想的要好吗 :) ？或者更糟 :( ？ 提出至少三点改进你的模型的想法。 1.更好 2.首先，可以降低学习率增大epochs；其次增加输出前的fc中的units数目；最后，可以尝试ResNet-50的迁移学习方案； 1234567## TODO: 在你的电脑上，在步骤6中，至少在6张图片上运行你的算法。## 自由地使用所需的代码单元数吧print("dog classifier demo")for i in range(3): index = int(np.random.choice(len(human_files_short), 1, replace=True)) image_check(human_files_short[index]) image_check(dog_files_short[index]) dog classifier demo ^___^,You mostly looks like a Smooth_fox_terrier for a dog breed.. ^___^,You mostly looks like a Icelandic_sheepdog for a dog breed.. ^___^,You mostly looks like a Smooth_fox_terrier for a dog breed.. Hey, awesome dog it&apos;s breed is American_staffordshire_terrier. ^___^,You mostly looks like a Petit_basset_griffon_vendeen for a dog breed.. Hey, awesome dog it&apos;s breed is Curly-coated_retriever.注意: 当你写完了所有的代码，并且回答了所有的问题。你就可以把你的 iPython Notebook 导出成 HTML 文件。你可以在菜单栏，这样导出File -&gt; Download as -&gt; HTML (.html)把这个 HTML 和这个 iPython notebook 一起做为你的作业提交。]]></content>
      <categories>
        <category>Deep learning</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Discrete Harmonic Map]]></title>
    <url>%2F2019%2F06%2F25%2F1%2F</url>
    <content type="text"><![CDATA[输入密码，查看文章。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>Computer vision</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>Computer vision</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Image Warpper]]></title>
    <url>%2F2019%2F06%2F23%2F1%2F</url>
    <content type="text"><![CDATA[Bezier Curve Evaluation AlgorithmA bézier line is an arc that is strictly based on a set number of points instead of on an ellipse. A bézier curve uses at least four points to draw on. Bézier curves can be combined to form a Bézier spline, or generalized to higher dimensions to form Bézier surfaces Linear Bézier curvesGiven distinct points $P_0$ and $P_1$, a linear Bézier curve is simply a straight line between those two points. The curve is given by$$B ( t ) = P_0 + t ( P_1-P_0) = (1 - t)P_0 + tP_1 , 0 \leq t \leq 1$$The coeficients, $b_i$ are the control points or Bézier points and together with the basis function $B_{i,n}(t)$determine the shape of the curve. Lines drawn between consecutive control points of the curve form the control polygon. A cubic Bezier curve together with its control polyg`on is shown in Fig. 1.1. Bezier curves have the following properties: Geometry invariance property: Partition of unity property of the Bernstein polynomial assures the invariance of the shape of the Bézier curve under translation and rotation of its control points ![avatar](./Bezier curve.png)Fig. 1.1. $Slerp(p, q, t)$, linear interplate two control points $p$ and $q$, 12345inline CPoint CBezier::lerp( CPoint &amp; p, CPoint &amp; q, double t )&#123; CPoint r = p * ( 1- t) + q * t; return r;&#125;; $deBoor(C0, C1, C2, C3, t)$, compute a point on the Bezier curve at parametert 1234567891011inline CPoint CBezier::deBoor( CPoint &amp; c0, CPoint &amp; c1, CPoint &amp; c2, CPoint &amp; c3, double t )&#123; //Modify this procedure CPoint C01 = lerp( c0, c1, t ); CPoint C12 = lerp( c1, c2, t ); CPoint C23 = lerp( c2, c3, t ); CPoint C012 = lerp( C01, C12, t ); CPoint C123 = lerp( C12, C23, t ); CPoint C0123 = lerp( C012, C123, t ); return C0123;&#125;; Bezier Surface Evaluation Algorithm Given a control net $C[4][4]$, and $2D$ parameters $uv$, evaluate the point on the Bezier surface constructed from the control net at the parameters $uv$, the algorithm evaluate the point p[k] on four Bezier curves controlled by points m_control_net$[k][0]$, m_control_net$[k][1]$, m_control_net$[k][2]$, m_control_net$[k][3]$, then evaluate the point on the Bezier curve controlled by $D[0], D[1], D[2], uv[3]$. 1234567891011inline CPoint CBezier::evaluate( CPoint2 uv )&#123; //Modify this procedure CPoint D[4]; for (int k = 0; k &lt; 4; k++) &#123; D[k] = deBoor(m_control_net[k][0], m_control_net[k][1], m_control_net[k][2], m_control_net[k][3], uv[0]); &#125; CPoint r = deBoor( D[0], D[1], D[2], D[3], uv[1] ); return r;&#125;; Image Warpping The image is embedded in the unit square, the unit square is deformed by a nonlinear mapping $\phi :S \rightarrow \Re^2 $, where $S$ is the unit square. The mapping is modeled as Bezier surface, controlled by the control net. $$\phi(u, v) = \sum_{i=0}^3\sum_{j=0}^3B_3^i(u)B_3^j(v)C_{ij},$$where ${C_{ij} }$ form the control net,$B_3^i$ is the Bernstein polynomial, $$B_3^i(t) = C_3^i(1 − t)^i t^{3−i} ,$$ SummaryResult Fig. 4.1. Image Warpper On Brad Pitt Fig. 4.2. Image Warpper On Lake Fig. 4.3. Image Warpper On Wu Explain your algorithm for each requirement 1. The first algorithm generates Bezier Line by $Slerp(p, q, t)$ and $deBoor(C0, C1, C2, C3, t)$ The second algorithm generates Bezier Surface by iterating $deBoor(C0, C1, C2, C3, t)$]]></content>
      <categories>
        <category>Computer vision</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>Computer vision</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F06%2F22%2Fhello-world%2F</url>
    <content type="text"><![CDATA[输入密码，查看文章。 Incorrect Password! No content to display! U2FsdGVkX1/An3zizFG/xF0E0VmJFQpQdZO88DUolNCAxfyPRBk+j6Qlig+tlHU1omAZ4vG8qPv399dSmNmP8mtHcP7RsbLvV2ZZgvNtsDYe/b4zUooN6iZmt/mZzVzgoa4Ef01Zwqpchu5C+lgvGiI2nFmmtRuUmq6YFY/AueW2SSOuZtZF4QTf4ABpFMDF48/0v7TiJ8lknSSnYxKgpviWMGb4iCLnAbehx5umMQ9y6ClizCLcRRjcH5LvI6MtTOkImX7J/KnklFTmpI7rSArWJc/XRRBTeMeZ3zY+SvDjI+w0DvqLrN7PRwNZE0A0hSxVbBvGrehiDCG5OjzRV1yUDks/bnvduM6MixZnZDXBOWhPWU/KEg1W/DvxKzDFI1jJL2NWxOeednjhkTRB7DZBcTbUtvm4PSKaGRm49NBBN8HVBMpTEXLIb+4/4cIvDimZyo09vrXJBsjo33hT4MZrRGB6L+OmnZkI+XcJPQS9o6rmtDddyow12j+yOjxHZ42YOHWQlBeAQWdbdkA/SELdDyGLEl08F+AP4e1w+tBvzcd5TFqsiNm/4CqzniLo6FaPs5lPnDD8MndBjzbDaxuvLgEfqrT7rDL9EX6WXjVC2YpR4+P2J28VUdVDDu9msKer9Ghg34SXmUF9KZ3C2W0YqBUnqyN1alJVPj8tM7PoIqPOcNy2AUuUXClXjH9qt+8E8OHQdSp31/qy6I5BzpKkAB5z9VJFQByJlVp8CxgGVUwz7D0uqSApb2MXS5sTs66Z/oDiLmgAT0ILCrW+eF8pScuZ0pylJSAgWsJ2ybotJZhNdpq+GmK7JZK8UZ9MQqRTOvORjXuLY4G7h8s1xWYLQUUSlZD7Skv1nkgmH+kUBgdEyJMlCEa9GZWUkOje0yQKT8LQhJzzky0o/PMy2FBvlNYH+DDT1t5hK36/pdHarViS2ZfKhj4GC2S0pbbxlr4QjgR1ne6V8UI72uxDey5jk/NwmsMdcK0ns5dmpZf0eJjDavqlVajHCERR3XwlOzbmCtk0qIfVxzcJp51ebEY/6mDNxojkIu6vfROKnnkgGDhBYWzvzXYKgeV8lDbG2AadsU9kVE7zHtmlsy6Qm6PpBnz39gbBQV5Y/WZBqafvRJF1ecThWsojNKs/YAP83Q53LXM3xpqLAkFK+vcGJoF6Un97ZUbGGdcbvAaNndMYJqsCv34d/pioumfWv3tSCrTtZ6EB9ClvWU4+7GPX8oTx1jLUVSV7EPv6eNpVvA0gh99LCtTfNiBPmYP4WbTsc2C5Lr7l5arD5HW2sg7WuYlG4M2PUN2yitoxYigdtRo+O7hUxDp8P7O9OX8sY18lkfajO1vQD9pbe29pO0vKrDLEpalZZJJXFzn1hqQedDg5upF0xIbc0YGzHMFWAqDS/lZVmeOhBSF+D7S1NogMDaPoNjC4H0RD8gRkkSaJXYemcQflnWkJeLPdRSDbwQefz49bpJe4+grO8GVy5KTRSzfGGnczbnWyfHsbogS3jD3l4T0I1orx4NSrdOMVTUbts/JU1GT/9zXSUPksXWDrAb2vfKtZ7xVvGxiWOraHE5uBDHroRKU3+6JKin4CcSrsjnpS4EFQ9AHnyiWs3rJSOevfAxyQVlsmQtcHqS5HjzacqLaD/S4hiVz7Omk5e/xxL6rSRbGnFkCeBpDq1IxsZ7pmK2uLhrSWDeibGctjl7rsba/JB+JWTtOAn9Is32s79IXx9X2UQdP0Jra75M0YqJYERuQtVgRgt4ypjwPifexm9xYcoUfBAP07sLZ9Vgldyu+RaWzEcpHVA3wnZhl+JNLKDWTjWZ5v1PZCsx3NKjBdjvYK2hti9vYM8FCs3GRuNLWDJ2OciE/rMz5+4uHSgKdv7WXwJRbCYJwArZ5/MMqWGitMhY353BRBduqJTNsH3BUrIoraMIlfJ65CJFV7GatkSwm5s+SVtIvVbC1h/WAFMPYxlsw5Q7lznTMwOj7RgMolKClznZZFFLXqYeDALfrgfSI+qxfguFD/WDkVrzTM9hBDOVneZy+0Z28stkv8UElCri77Axh4gSNDRBjiawm6lMi2kxTCYM4Q0Cz4nEADCbXsbHg/pS/2ynSPtQZfaFuTywLdxv2sU3MnYTlEVN1E11SGcS1vJGs50CB6olxdM8b4fIxJQhD1WAuj3Zcg+XK2ViLYbZT5J3BY+FuGsUG846iR/+s2lXFtDgaFeeAhFhDIKElXoj//BTCYcCsSXNb5V9OPBHGEjEvEriwYZdjScGbXigIZTNdTBP292tjUShgK5DU58/oaBrJJlQmI2gydOV0v/VSl/dZUDQ/7p2MfgGsMSz/LbfyhEEK86eY7HTYbEnvUm3FpkJUI36Q7B0atqxJXfrJ1WfxuL/+CYsjbUxcq1W6FMlVfYbdQpClzdopV8XGJKtxc5A+evublsdX4oagkecgZAEfw621kFp0EVEFDgDZ2NTZLNuEpnaKul52k9qDnnxHlWH0JD4nnKlyIup0ik8dMO8I3QZESYvx1cmSI8sR4fURONFR63I7IhvvlOP5MOoxTFi5smgWZpYZ6DNgkyQ+HC1Wju66kPvaFFXaqoq3Kve15IQq4fK0pRtEJ36Ab54rL32A3XCYiJw3sApgwFkxGr63SRZqytUe+jL9qBZWp31meoZaOTo42ypM9MzKkdn6ZN+hKT1j0fC/hsM0L4++XtIjEbykavfOUjyx1etWAXjRQ/06rRoE3ylsD6EDh2UxgflRZMpZTlohlw4Ha4pe7cmy3Fc+mpho37RMi9QpNT9UyvFpJIj6wbjbg36R5QKTuujFkeFpDDIcS0zueiMk4MkEvZonjhdpWYqBrhcFMdRSTxAUdaGtLFIwJs9A5HD4k+nmT+KM8MVm56USOlPUqh7igT5ZhGBeq+BfNrdrU8HmMJpMdPKZ52sZJrKXB6bkpGbFmWvev895ryTg/ncS0Z22BtpdDnKB9aZRx6HcpEnJ94zyOWeKG3nkoXX6MieJjzmgcOoWwsBDn79AIMFta2HXUzg0jNURaJIMwks1k3ViOgqsbkAhGiqaE3LUdfqT+hCD3qECWh+/4oOtvab/e8XFRvHaQCPLUIWbPlW6PQ/I6qqS2QUYiK+1v01avqjx9XnEHm5/Nhpkk3enN+NKmDWSHRIPHPuNnGzKy+midwulvHhdFW+7Ta5OndFUlm3pkw/8RaAzRFdwSGDstCdR4FTjCoB7tDjaU0VEd1zd+apPmopQApkQuYMAi7FSz4pAzGtk+KfyWBRc+keRjwXa9VzR/6gFMQnlfv9glD9uhhxh6QdlCbXX1e6idQjQXQe36fh5/ZnyPBpc/6wvP6aEw3uxVEDQjnOlimCu4oS/QkPRyOOoJktEmpWWqUgXj20sNtdY2TZnx5U2YPnCaL1MWJSzT3mgC7LfbVhks4W1lwIuEtHtv9JPSxK4RuLX4aW7Iolwlaz5LnP+Y6kr7nb2woOnxfxJzc50VBZAn/pVQb2n3ItNx0Ez9rourq4X/WPkSpkqIOwPhtwnxvD7i2j/f/07BpQEylP6AmtVQqSDhexELh6MQf2Vigptu5E9j9L3trBLp5a72wRF5fNJRfiHzfMPDQJlyqFAJNKztWQj6E3VyZp1bYP9ZtINWIosxsr114QtrVhUOkBL3bdkLyTGP9DZRtnDDumRM2XHT6iTzBuJ9Vw1UoF6uNHzCXiULoujXj7jNURJNRPlfflFnnukVt1o2+TmkSWMligzZHixtWYriO9wdAYZtcJz1uI0Pm2pZO4xIJi2sqGantD3f4XFMBjdGo4n0br1TfyAXfZ7oUi3paQ5bJ7k1pLxcPkY/+Z/oVGONzeIdEf/ZodSCMxMnXS+4ZZGfeebGTZkYyja3z8+Vuk5OMb63aB+dwx/gBDLYEojA04iq7DzRvUKt2iAIgYY7Igs27leFJCafl0hjEbezqXMCJZiMhrDWij57k0wY7cBjgX9BomPK7moxJ6Xw0Y8zQku3Tl9qSzUPFKfZ4MOoJi1MENfMCGhN+2WmuXHy0TbjP16WGaiSpOjosMNbbRsDp9B4QmSoA+XBXz3lLypn5QPHBLE2nWAmN2m+KCeHKCfR58f/JDnWkS0em+VqgYJHeiIAo4qtLXCii1l7wdXKykQHcvKzxw/X3X7nxvVzYCdmHqs1OdRFCDV76cNh+Rr/WnPBgC49E4o66lB0Uk6ALQq744DbiBQhLGCYpJSazBK9YzBr/asBB5OgqD4k7PRcGrjkpa2TTIDUInK+YQ2etH1B6hqfmgInqwIhCRO1POqu3hbJgIfWK9gtBUqq6GsnOBtB5QhflK80h3tzpe3uG2tONDtcowzLbU8gfb+HoRmSjMIkhvpi4GZH2yPengG4fxqxhcMCnVQe+abTk0HUxPlmPOCTfQ83G19JJSXQPYr30p6YjFRAiEasLGmFVZF7qDFPrBqQSQ+WJHjF7xrocuHiLzLbY4+uWDgEVzHq6iqSAx7T6DPPblnIaakwerOS4TMpNPAVK+sk80iLt/nKvnggek2BzDOSrSzpfrkFSc5ca6hwSjoWJcWRbDwc3c5QUzBHrFSWeic9KrAvo3LhrNUgFBOinOjtiN5LsWVtJVIUkbklP6i4bGIoBOZsINk/DS1CNGi18a1gil4adUKILVI/1oCzgES1Q/MXSdbn8ZNYL6wAkqZLF5Vc3wR9lso7L/G4qohS+Hyv2eB5cVXN47+nvSaf+M7fPGT+WL+nXu1VBWZgZMFed1MY/LCAnGWFO4HUWu15uKsddOCCeGQ03gN6yTpHegOZuFlVnfkfAOWPlXscYh4bu064dnb8s/JExlJHNJXOrk9excdqw0ox1OdZTluxJaNlsrm9PcAacbnzy4RZym0KgonqwyZWqqljpkS0EQw7/yzH1duyNtPgyju7ve8pDramLcGZ0ao/k70pzTN1/z75W63Xn1bVU3sCK6FY8+oVUmpHz4OS7YujcwkJ4+s/NsqC3ki5t7055QXFQrg6cPIioMjDsTdeVsESWlRkTdH3/l7tzZfAob26WM9+EhEonmf4zRrpO3q3PuwjQFWfZIINwKU9Eh246Hst0M6eAOMCo9HMTUsfcmUkfTfu2ZcR3MbT7ihyd9b3HcvxYaup3OTCTlgIWJ5D0PC0Rjtp3HE4bU5Uba06waZSYuifmYOaLShw6WoQXKwjFdsuB3u2reiFrL/5mMt4ZE2Orv61+lGduUnRIG6iBbijFwkc+ndaFsoYRrVj5IdcblvlLfwG5HIkT+Og3YWZsZvd5x9du/w9SEhYO4/FXEc/LtRB/W2fcZh6gfobYp15wfMP9INU3ObROLukY4SQqnKyWX4TKpCt7cQpFFGCy8s3+LF39+ijwuM3f/aAtLScchZjv2QuW9/VGU6dnk1GM2rKa8eY3uf75uGrXTjWSOTUt0+zqUcwwe6/B5M+IHGXFc1eJbhO6ac1N0QD90kjCQ9RVIZXJQtup6qc33RcS4k/ifNSXbuW/qOj7iaP4HIkdHXemfVSM89kx4IAnBfbuvUc1DgVO6gHtd8o5Ybl2lY3WeS6+n1TjqJh0KNXbqe8bLK4WDkzwaU+pvLkSMipfyEVJ5ggNqSwDlJu4LNNA0qz4FmH3zdX5OaK9x9Jn3OzOVuSEQbaVoxHBFfc0RcZcAmrOVK/aqSsyh3fWF6Z1Q0VgW2LZZo4EQo5PH825TQiowkekMLC7PiHe6C64/HBMgiFMIY0hBDY4ExpIAK4S8zQC0F/BRbCCgxWxyC2O1K1pKXNfZ+QlPkqa1G6rs6iS6D9imp+9acHJk5hLPKeDxXZVeGZqeCG3G0W0nS3A+tEHOzxg8J6S0yoer6D7ll7xeACqlMRiX4pgFRyqxRqt/xUmzmX/mLHm8yYzJcit0CnXsLPDTMp73Ivl6uEILcRHTAiNklD4BBTW6Yv8w+4tQXQtANprVu5K0UdhFGRoyzZlWLIEs2UmBol6gqV0Zaz0uNVJRfi4RErxoDND8bCVTytcJEtNKK3zcHQUmELitMBrh4JlCtkeH++CKhAXe9562iLC52qvHN6X6sUA65TIa8O94wc6Wn+MeJFxr3X5BmeNvKerIsFTU68UFLbYM/kdZ0WguIcvnv+i/uWlzZUC8vlKtU1Phns2bhRT8J66cvCU+P51NzwIoD5NIEsp3EAlDU2oOUaVG3IokcULVdE+1sMrsSraNSIOTDJvCdrzD0KfjhM8XHbnskMCR6SrHe3XNOVnxWlrvNbSdCMmqNTGaVdK7pGBrYYBonjQ8sRLXOsqRz6OopY4RKY9koGqkQmjHvISv0oGXO2KDo4WZlqWeaEp4JvDh48ThTwcPbg2fS9bIMZY448itc+hloon28Us7lMOS+suU2rMh/rKbXtZfX1tcg94ozyneeDS+2BjSoU61tI7DlZdfo9wSl1h3dHnqjQukfFwhTYk0QDfhPj52aj1Tp75+24dDiPljR4UAqDW7SkYn+snN63ghQO1Q++kFpi4PqLlqf/ibpcSSMvah/s2oNDS+oP3kbpaIyQdwNs3E3G6u7W4F5tCa2CmNAIXtYblaliVVVHHKRI1o97J/YlARcyDYnOqGzk8Phffm+2bAjhDGB3]]></content>
      <categories>
        <category>essay</category>
      </categories>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
</search>
